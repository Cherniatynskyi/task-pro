{"version":3,"file":"static/js/189.df177347.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/pages/HomePage/HomePage.module.css?5baa","webpack://task-pro/./src/components/Modals/ModalBody.module.css?f007","webpack://task-pro/./src/components/Forms/BoardForm/BoardForm.module.css?b03b","components/Forms/BoardForm/NewBoardForm.jsx","components/Forms/BoardForm/EditBoardForm.jsx","webpack://task-pro/./src/components/Forms/Column/ColumnForm.module.css?42aa","components/Forms/Column/AddColumnForm.jsx","components/Forms/Column/EditColumnForm.jsx","webpack://task-pro/./src/components/Forms/Help/NeedHelpForm.module.css?6d36","components/Forms/Help/NeedHelpForm.jsx","components/Forms/UserForm/ImgInput.jsx","webpack://task-pro/./src/components/Forms/UserForm/UserForm.module.css?c4e1","components/Forms/UserForm/UserForm.jsx","webpack://task-pro/./src/components/Calendar/Calendar.module.css?a426","components/Calendar/Calendar.jsx","components/Icon.jsx","webpack://task-pro/./src/components/Forms/BoardForm/AddCard.module.css?f272","components/Forms/BoardForm/AddCard.jsx","components/Modals/ModalBody.jsx","webpack://task-pro/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://task-pro/./src/components/Sidebar/Board/Board.module.css?228b","components/Sidebar/Board/Board.jsx","components/Sidebar/Sidebar.jsx","webpack://task-pro/./src/components/DefaultBoard/DefaultBoard.module.css?a9e5","components/DefaultBoard/DefaultBoard.jsx","webpack://task-pro/./src/components/Navigation/Navigation.module.css?4bf2","webpack://task-pro/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://task-pro/./src/components/ThemeSelect/ThemeSelect.module.css?c8b0","components/ThemeSelect/ThemePopup.jsx","components/ThemeSelect/ThemeSelect.jsx","components/Navigation/Navigation.jsx","pages/HomePage/HomePage.jsx","redux/board/selectors.js","images/card/background-icons|sync|/^/.//.*/.png$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"HomePage_main__OiWfi\",\"mainPage\":\"HomePage_mainPage__BoNlQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBackdrop\":\"ModalBody_modalBackdrop__KSTDi\",\"modalBody\":\"ModalBody_modalBody__z2P-b\",\"testModalBody\":\"ModalBody_testModalBody__Lae1F\"};","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"BoardForm_formWrap__Mo0Ek\",\"formTitle\":\"BoardForm_formTitle__usegY\",\"formInput\":\"BoardForm_formInput__BAA1o\",\"iconsForm\":\"BoardForm_iconsForm__Vh1US\",\"iconsTitle\":\"BoardForm_iconsTitle__F+0eo\",\"iconsWrap\":\"BoardForm_iconsWrap__mqvgp\",\"bgIconsWrap\":\"BoardForm_bgIconsWrap__QP4eA\",\"iconInput\":\"BoardForm_iconInput__pMRLe\",\"container\":\"BoardForm_container__u+mXS\",\"bgContainer\":\"BoardForm_bgContainer__pPJAN\",\"checkmark\":\"BoardForm_checkmark__O0h40\",\"bgCheckmark\":\"BoardForm_bgCheckmark__M+lA3\",\"formButton\":\"BoardForm_formButton__z8EY6\",\"iconWrap\":\"BoardForm_iconWrap__7hZa6\",\"buttonIcon\":\"BoardForm_buttonIcon__biGbW\"};","import css from './BoardForm.module.css';\nimport { useState } from 'react';\nimport { closeModal } from '../../../redux/modalSlice';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { addBoard } from '../../../redux/board/boardThunks';\n\nexport const NewBoardForm = () => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [iconValue, setIconValue] = useState('');\n  const [bgValue, setBgValue] = useState('');\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleIconChange = e => {\n    setIconValue(e.target.value);\n  };\n\n  const handleBgChange = e => {\n    setBgValue(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    const newBoard = {\n      name: title,\n      icon: iconValue,\n      background: bgValue,\n    };\n\n    dispatch(addBoard(newBoard));\n    e.target.reset();\n    dispatch(closeModal());\n  };\n\n  const icValues = [\n    'four-circles',\n    'eye',\n    'star',\n    'loading',\n    'puzzle',\n    'container',\n    'logo',\n    'hexagon',\n  ];\n  const bgValues = [];\n\n  for (let i = 1; i <= 16; i++) {\n    bgValues.push(i);\n  }\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>New Board</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Icons</legend>\n          <div className={css.iconsWrap}>\n            {icValues.map(ic => {\n              return (\n                <label key={ic} className={css.container}>\n                  <input\n                    onChange={e => handleIconChange(e)}\n                    type=\"radio\"\n                    id={ic}\n                    name=\"icon\"\n                    value={ic}\n                  />\n                  <svg className={css.checkmark}>\n                    <use href={`${sprite}#icon-${ic}`} />\n                  </svg>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Background</legend>\n          <div className={css.bgIconsWrap}>\n            {bgValues.map(bg => {\n              return (\n                <label key={bg} className={css.bgContainer}>\n                  <input\n                    onChange={e => handleBgChange(e)}\n                    type=\"radio\"\n                    id={bg}\n                    name=\"bg\"\n                    value={bg}\n                  />\n                  <img\n                    className={css.bgCheckmark}\n                    width=\"28\"\n                    height=\"28\"\n                    src={require(`../../../images/card/background-icons/${bg}.png`)}\n                    alt=\"\"\n                  />\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Create\n        </button>\n      </form>\n    </div>\n  );\n};\n","import css from './BoardForm.module.css';\n\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\n\nexport const EditBoardForm = () => {\n  const [title, setTitle] = useState('');\n  const [iconValue, setIconValue] = useState('');\n  const [bgValue, setBgValue] = useState('');\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleIconChange = e => {\n    setIconValue(e.target.value);\n  };\n\n  const handleBgChange = e => {\n    setBgValue(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    console.log({ title, iconValue, bgValue });\n  };\n\n  const icValues = [\n    'four-circles',\n    'eye',\n    'star',\n    'loading',\n    'puzzle',\n    'container',\n    'logo',\n    'hexagon',\n  ];\n  const bgValues = [];\n\n  for (let i = 1; i <= 16; i++) {\n    bgValues.push(i);\n  }\n\n  \n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Edit Board</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n      <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Icons</legend>\n          <div className={css.iconsWrap}>\n            {icValues.map(ic => {\n              return (\n                <label key={ic} className={css.container}>\n                  <input\n                    onChange={e => handleIconChange(e)}\n                    type=\"radio\"\n                    id={ic}\n                    name=\"icon\"\n                    value={ic}\n                  />\n                  <svg className={css.checkmark}>\n                    <use href={`${sprite}#icon-${ic}`} />\n                  </svg>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Background</legend>\n          <div className={css.bgIconsWrap}>\n            {bgValues.map(bg => {\n              return (\n                <label key={bg} className={css.bgContainer}>\n                  <input\n                    onChange={e => handleBgChange(e)}\n                    type=\"radio\"\n                    id={bg}\n                    name=\"bg\"\n                    value={bg}\n                  />\n                  <img\n                    className={css.bgCheckmark}\n                    width=\"20\"\n                    height=\"20\"\n                    src={require(`../../../images/card/background-icons/${bg}.png`)}\n                    alt=\"\"\n                  />\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"ColumnForm_formWrap__qlgNz\",\"formTitle\":\"ColumnForm_formTitle__brkqM\",\"formInput\":\"ColumnForm_formInput__TwvzG\",\"iconsForm\":\"ColumnForm_iconsForm__czjpY\",\"iconsTitle\":\"ColumnForm_iconsTitle__9b450\",\"iconsWrap\":\"ColumnForm_iconsWrap__xwppe\",\"bgIconsWrap\":\"ColumnForm_bgIconsWrap__9BKMJ\",\"iconInput\":\"ColumnForm_iconInput__gaYW9\",\"container\":\"ColumnForm_container__tcg6N\",\"bgContainer\":\"ColumnForm_bgContainer__+9VXy\",\"checkmark\":\"ColumnForm_checkmark__0iObs\",\"bgCheckmark\":\"ColumnForm_bgCheckmark__SmlZ-\",\"formButton\":\"ColumnForm_formButton__SgVLS\",\"iconWrap\":\"ColumnForm_iconWrap__duW4E\",\"buttonIcon\":\"ColumnForm_buttonIcon__vdyo9\"};","import css from './ColumnForm.module.css';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\n\nexport const AddColumnForm= () => {\n  const [title, setTitle] = useState('');\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    console.log({ title });\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Add column</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n","import css from './ColumnForm.module.css';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\n\nexport const EditColumnForm = () => {\n  const existingColumns = [];\n\n  const [title, setTitle] = useState(existingColumns[0]);\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    console.log({ title });\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Edit column</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n      <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"NeedHelpForm_formWrap__EDmnt\",\"formTitle\":\"NeedHelpForm_formTitle__sljth\",\"formInput\":\"NeedHelpForm_formInput__aVFhD\",\"commentInput\":\"NeedHelpForm_commentInput__niNh7\",\"iconsForm\":\"NeedHelpForm_iconsForm__lWWH+\",\"iconsTitle\":\"NeedHelpForm_iconsTitle__jyG0n\",\"iconsWrap\":\"NeedHelpForm_iconsWrap__ACPv5\",\"bgIconsWrap\":\"NeedHelpForm_bgIconsWrap__J5v05\",\"iconInput\":\"NeedHelpForm_iconInput__dJrxH\",\"container\":\"NeedHelpForm_container__DDitB\",\"bgContainer\":\"NeedHelpForm_bgContainer__6tAKR\",\"checkmark\":\"NeedHelpForm_checkmark__EFSAN\",\"bgCheckmark\":\"NeedHelpForm_bgCheckmark__OcOlh\",\"formButton\":\"NeedHelpForm_formButton__EmpLK\",\"iconWrap\":\"NeedHelpForm_iconWrap__iFh9P\",\"buttonIcon\":\"NeedHelpForm_buttonIcon__HFz9F\"};","import css from './NeedHelpForm.module.css';\nimport { useState } from 'react';\n\nexport const NeedHelpForm = () => {\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    console.log({ email, comment });\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Need help</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"email\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Email\"\n            onChange={e => handleEmailChange(e)}\n            value={email}\n            className={css.formInput}\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n        </label>\n        <label htmlFor=\"comment\">\n          <textarea\n            placeholder=\"Comment\"\n            onChange={e => handleCommentChange(e)}\n            value={comment}\n            className={css.commentInput}\n            name=\"comment\"\n          />\n        </label>\n        <button type=\"submit\" className={css.formButton}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useFormikContext } from 'formik';\n\nexport default function ImageInput() {\n  const { setFieldValue } = useFormikContext();\n\n  const handleChooseFile = async e => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const res = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.onload = e => {\n          resolve(e.target.result);\n        };\n        reader.readAsDataURL(file);\n      });\n      console.log(res);\n      setFieldValue('avatar', file);\n      setFieldValue('avatarURL', res);\n    }\n  };\n\n  return (\n    <input\n      type=\"file\"\n      id=\"avatar\"\n      name=\"avatar\"\n      accept=\"image/*\"\n      hidden\n      onChange={handleChooseFile}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"UserForm_formWrap__Wzihy\",\"formTitle\":\"UserForm_formTitle__otdTI\",\"avatar\":\"UserForm_avatar__waQVs\",\"userAvaWrapper\":\"UserForm_userAvaWrapper__k1VgJ\",\"userImg\":\"UserForm_userImg__tVfTy\",\"iconBtnPlus\":\"UserForm_iconBtnPlus__nmlZL\",\"iconPlus\":\"UserForm_iconPlus__MDJty\",\"fieldWrapper\":\"UserForm_fieldWrapper__oOtLf\",\"field\":\"UserForm_field__3YSzB\",\"btnSend\":\"UserForm_btnSend__Qj2O-\",\"iconBtn\":\"UserForm_iconBtn__H9XGh\",\"iconEye\":\"UserForm_iconEye__uJFvZ\",\"active\":\"UserForm_active__oUJgj\",\"errorMessage\":\"UserForm_errorMessage__lrIyV\"};","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport ImageInput from './ImgInput.jsx';\nimport sprite from '../../../images/sprite.svg';\nimport css from './UserForm.module.css';\n\nconst nameRegExp =\n  /^(?=.*?[A-Z])(?=.*?[a-z]).{2,32}$/;\nconst emailRegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\nconst passwordRegExp =\n  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,64}$/;\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .matches(nameRegExp, 'Enter a valid name*')\n    .required('Name is required*'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Enter a valid Email*')\n    .email('Enter a valid Email*')\n    .required('Email is required*'),\n  password: Yup.string()\n    .required('Password is required*')\n    .matches(passwordRegExp, 'Password must meet the requirements*'),\n});\n\nexport const UserForm = () => {\n  // const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user)\n\n\n    const handleSubmit = e => {\n      console.log(e);\n    };\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const handleClickPasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  return (\n    <>\n      <div className={css.formWrap}>\n        <h2 className={css.formTitle}>Edit profile</h2>\n        <Formik\n          initialValues={{\n            avatar: '',\n            avatarURL: user.avatarURL,\n            name: user.name,\n            email: user.email,\n            password: \"\",\n          }}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <div className={css.avatar} >\n              <label className={css.userAvaWrapper}>\n                  <img\n                    src={``}\n                    alt=\"\"\n                    className={css.userImg}\n                    width={68}\n                  />\n                <label htmlFor=\"avatar\"\n                  className={css.iconBtnPlus}\n                >\n                  <ImageInput />\n                  <svg className={css.iconPlus} width=\"10\" height=\"10\">\n                    <use xlinkHref={`${sprite}#icon-plus`} />\n                  </svg>\n                </label>\n              </label> \n            </div>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n              />\n            </div>\n            <ErrorMessage name=\"name\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n            <ErrorMessage name=\"email\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type={passwordVisible ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Create a password\"\n              />\n              {passwordVisible ? (\n                <button\n                  className={css.iconBtn}\n                  type=\"button\"\n                  onClick={handleClickPasswordVisibility}\n                >\n                  <svg className={css.iconEye} width=\"18\" height=\"18\">\n                    <use href={`${sprite}#icon-eye`} />\n                  </svg>\n                </button>\n              ) : (\n                <button\n                  className={css.iconBtn}\n                  type=\"button\"\n                  onClick={handleClickPasswordVisibility}\n                >\n                  <svg className={css.iconEye} width=\"18\" height=\"18\">\n                    <use href={`${sprite}#icon-eye`} />\n                  </svg>\n                </button>\n              )}\n            </div>\n            <ErrorMessage name=\"password\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <button className={css.btnSend} type=\"submit\">\n              Send\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"react-datepicker\":\"Calendar_react-datepicker__aIvBg\",\"react-datepicker__input-container\":\"Calendar_react-datepicker__input-container__ATOa8\",\"react-datepicker__month-container\":\"Calendar_react-datepicker__month-container__iOOJ+\",\"react-datepicker__header\":\"Calendar_react-datepicker__header__JSD8l\",\"react-datepicker__current-month\":\"Calendar_react-datepicker__current-month__Dy2JK\",\"react-datepicker__navigation\":\"Calendar_react-datepicker__navigation__gjsop\",\"react-datepicker__day-name\":\"Calendar_react-datepicker__day-name__QhkFB\",\"react-datepicker__day\":\"Calendar_react-datepicker__day__gyfuL\",\"react-datepicker__day--selected\":\"Calendar_react-datepicker__day--selected__yrVtx\",\"react-datepicker__day--disabled\":\"Calendar_react-datepicker__day--disabled__UIKz5\",\"react-datepicker__time-name\":\"Calendar_react-datepicker__time-name__MUgtg\",\"react-datepicker__day--keyboard-selected\":\"Calendar_react-datepicker__day--keyboard-selected__XlOZz\",\"react-datepicker__month-text--keyboard-selected\":\"Calendar_react-datepicker__month-text--keyboard-selected__lMIox\",\"react-datepicker__quarter-text--keyboard-selected\":\"Calendar_react-datepicker__quarter-text--keyboard-selected__Vb42w\",\"react-datepicker__year-text--keyboard-selected\":\"Calendar_react-datepicker__year-text--keyboard-selected__7aYBU\",\"react-datepicker__week\":\"Calendar_react-datepicker__week__8ymPy\",\"react-datepicker__day--outside-month\":\"Calendar_react-datepicker__day--outside-month__SVg29\",\"calendar\":\"Calendar_calendar__vKx+D\",\"day\":\"Calendar_day__voALS\",\"header\":\"Calendar_header__Iy6a3\"};","import DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport css from './Calendar.module.css'\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n    <div>\n      <DatePicker\n      calendarClassName={css.calendar}\n      dayClassName={() =>css.day}\n      renderCustomHeader={({\n        date,\n        changeYear,\n        changeMonth,\n        decreaseMonth,\n        increaseMonth,\n        prevMonthButtonDisabled,\n        nextMonthButtonDisabled,\n      }) => \n      <div className={css.header}>\n        <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>\n            {\"<\"}\n          </button>\n        <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\n            {\">\"}\n        </button>\n      </div>}\n      selected={selectedDate}\n      onChange={handleDateChange}\n      dateFormat=\"MMMM d\"\n      minDate={new Date()}\n      locale={enGB}\n      weekStartsOn={1}\n    />\n    </div>\n  \n  );\n}\n","import Icons from '../images/sprite.svg';\n\nexport const Icon = ({\n  fill = 'none',\n  stroke = 'inherit',\n  name,\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg fill={fill} stroke={stroke} width={width} height={height}>\n      <use href={`${Icons}#icon-${name}`}></use>\n    </svg>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"AddCard_formWrap__V6jb4\",\"formTitle\":\"AddCard_formTitle__HC5TI\",\"formInput\":\"AddCard_formInput__KDbzV\",\"iconsForm\":\"AddCard_iconsForm__CHT2B\",\"TitleCard\":\"AddCard_TitleCard__FhPdh\",\"Label\":\"AddCard_Label__bXPVG\",\"StyledDescription\":\"AddCard_StyledDescription__aTi8l\",\"LabelColorStyle\":\"AddCard_LabelColorStyle__i7iAc\",\"DeadlineStyle\":\"AddCard_DeadlineStyle__4qHrq\",\"AddButton\":\"AddCard_AddButton__PGEMk\",\"StylePlus\":\"AddCard_StylePlus__Td5Rv\",\"Span\":\"AddCard_Span__EIcpf\",\"container\":\"AddCard_container__eVbNC\",\"iconsWrap\":\"AddCard_iconsWrap__RXZwf\",\"checkmark\":\"AddCard_checkmark__vp2dD\",\"noPriority\":\"AddCard_noPriority__PFxQr\",\"lowPriority\":\"AddCard_lowPriority__yiuVe\",\"medPriority\":\"AddCard_medPriority__1ynru\",\"highPriority\":\"AddCard_highPriority__OC2Im\"};","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Calendar } from 'components/Calendar';\n// import { useDispatch } from 'react-redux';\n// import { addCard } from '../../../redux/board/operations';\nimport { Icon } from 'components/Icon';\n\nimport css from './AddCard.module.css';\n\nconst priority = ['without', 'low', 'medium', 'high'];\n\nconst formCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(3, `It's can be up to 3 characters long`)\n    .max(100, 'Too Long!')\n    .required(`This field is required.`),\n  text: Yup.string()\n    .min(10, `It's can be up to 10 characters long`)\n    .max(500, 'Too Long!')\n    .required(`This field is required.`),\n  priority: Yup.string().oneOf(priority),\n  deadline: Yup.date(),\n});\n\nexport const AddCardForm = () =>{\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  // const dispatch = useDispatch();\n\n  // const onSubmit = values => {\n  //   dispatch(addCard({ values, columnId }));\n  //   onClose();\n  // };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Add Card</h2>\n      <Formik\n        initialValues={{\n          title: '',\n          text: '',\n          priority: 'without',\n          deadline: selectedDate,\n        }}\n        validationSchema={formCardSchema}\n        \n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <form className={css.from} onSubmit={handleSubmit}>\n            <input\n              className={css.formInput}\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n            <p className={css.errMsg} name=\"title\" />\n            <label>\n              <textarea\n                className={css.formInput}\n                rows={4}\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <p className={css.errMsg} name=\"text\" />\n            </label>\n            <fieldset className={css.iconsForm}>\n            <legend className={css.iconsTitle}>Label color</legend>\n            <div className={css.iconsWrap}>\n                  <label className={css.container}>\n                    <input \n                      type=\"radio\"\n                      id=\"1\"\n                      name=\"icon\"\n                      value=\"no-priority\"\n                    />\n                    <span className={`${css.checkmark} ${css.noPriority}`}></span>\n                  </label>\n                  <label className={css.container}>\n                    <input \n                      type=\"radio\"\n                      id=\"2\"\n                      name=\"icon\"\n                      value=\"low-priority\"\n                    />\n                    <span className={`${css.checkmark} ${css.lowPriority}`}></span>\n                  </label>\n                  <label className={css.container}>\n                    <input \n                      type=\"radio\"\n                      id=\"3\"\n                      name=\"icon\"\n                      value=\"med-priority\"\n                    />\n                    <span className={`${css.checkmark} ${css.medPriority}`}></span>\n                  </label>\n                  <label className={css.container}>\n                    <input \n                      type=\"radio\"\n                      id=\"4\"\n                      name=\"icon\"\n                      value=\"high-priority\"\n                    />\n                    <span className={`${css.checkmark} ${css.highPriority}`}></span>\n                  </label>\n            </div>\n          </fieldset>\n            <p className={css.deadlineStyle}>Deadline</p>\n            <div>\n              <span className={css.span}> Today,</span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                  setFieldValue('deadline', date);\n                }}\n              />\n            </div>\n            <button className={css.addButton} type=\"submit\">\n              <div className={css.stylePlus}>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </div>\n              <p>Add card</p>\n            </button>\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\nimport { closeModal } from '../../redux/modalSlice';\nimport { useLockBodyScroll } from '@uidotdev/usehooks';\nimport css from './ModalBody.module.css';\nimport { NewBoardForm } from 'components/Forms/BoardForm/NewBoardForm';\nimport { EditBoardForm } from 'components/Forms/BoardForm/EditBoardForm';\nimport { AddColumnForm } from 'components/Forms/Column/AddColumnForm';\nimport { EditColumnForm } from 'components/Forms/Column/EditColumnForm';\nimport { NeedHelpForm } from 'components/Forms/Help/NeedHelpForm';\nimport { UserForm } from 'components/Forms/UserForm/UserForm';\nimport { AddCardForm } from 'components/Forms/BoardForm/AddCard';\n\nexport const ModalBody = () => {\n  const dispatch = useDispatch();\n  const { modalContent } = useSelector(state => state.modal); // ДІСТАЄ З РЕДАКСУ КОНТЕНТ\n  useLockBodyScroll(); //БЛОКУЄ СКРОЛ СТОРІНКИ\n\n  const firstRender = useRef(false);\n  useLockBodyScroll();\n\n  useEffect(() => {\n    if (firstRender.current === false) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      firstRender.current = false;\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      dispatch(closeModal()); //ЗАКРИТТЯ НА ЕСКЕЙП\n    }\n  };\n\n  const backdropClose = e => {\n    if (e.target === e.currentTarget) {\n      //ЗАКРИТТЯ НА БЕКДРОП\n      dispatch(closeModal());\n    }\n  };\n\n  const handleContent = content => {\n    //ФУНКЦІЯ ВИЗНАЧЕННЯ РЕДНЕРУ КОНЕТНТУ. КОЖЕН КЕЙС ПОТРІБНО ПРОПИСАТИ\n    switch (content) {\n      case 'add-board':\n        return <NewBoardForm />;\n      case 'edit-board':\n        return <EditBoardForm />;\n      case 'add-column':\n        return <AddColumnForm />;\n      case 'edit-column':\n        return <EditColumnForm />;\n      case 'need-help':\n        return <NeedHelpForm />;\n      case 'edit-profile':\n        return <UserForm />;\n      case 'add-card':\n        return <AddCardForm />;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div onClick={e => backdropClose(e)} className={css.modalBackdrop}>\n      <div className={css.modalBody}>{handleContent(modalContent)}</div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sideBar\":\"Sidebar_sideBar__A8DTG\",\"sidebarBackdrop\":\"Sidebar_sidebarBackdrop__ozg8G\",\"sideBarOpened\":\"Sidebar_sideBarOpened__9jug6\",\"titleBox\":\"Sidebar_titleBox__xqSVd\",\"iconBox\":\"Sidebar_iconBox__lGsim\",\"logoIconContainer\":\"Sidebar_logoIconContainer__yiz-a\",\"iconLogo\":\"Sidebar_iconLogo__P5b+p\",\"title\":\"Sidebar_title__mzY+F\",\"bordBox\":\"Sidebar_bordBox__l9HDF\",\"bordTitle\":\"Sidebar_bordTitle__iDwHw\",\"buttonBox\":\"Sidebar_buttonBox__+dqOM\",\"buttonText\":\"Sidebar_buttonText__0LoRm\",\"buttonCreate\":\"Sidebar_buttonCreate__t3LZl\",\"iconCreate\":\"Sidebar_iconCreate__vE+2z\",\"scrollArea\":\"Sidebar_scrollArea__p2BVw\",\"bordList\":\"Sidebar_bordList__PS2uv\",\"helpBox\":\"Sidebar_helpBox__W7BKt\",\"helpTextBox\":\"Sidebar_helpTextBox__Sd7S6\",\"helpText\":\"Sidebar_helpText__1vwtr\",\"helpTextLink\":\"Sidebar_helpTextLink__QXL1T\",\"buttonHelp\":\"Sidebar_buttonHelp__nkXAH\",\"iconHelp\":\"Sidebar_iconHelp__6c8m3\",\"helpButtonText\":\"Sidebar_helpButtonText__0g7gg\",\"buttonLogOut\":\"Sidebar_buttonLogOut__VYxol\",\"iconLogOut\":\"Sidebar_iconLogOut__GX2DR\",\"logOutButtonText\":\"Sidebar_logOutButtonText__vzEjb\"};","// extracted by mini-css-extract-plugin\nexport default {\"boardItem\":\"Board_boardItem__pg3mb\",\"boardButton\":\"Board_boardButton__9AuMq\",\"boardIcon\":\"Board_boardIcon__TALFy\",\"boardTitleBox\":\"Board_boardTitleBox__N1O+A\",\"boardText\":\"Board_boardText__tGGO5\",\"boardTittle\":\"Board_boardTittle__4B6lS\",\"boardButtonBox\":\"Board_boardButtonBox__pijVR\",\"iconButton\":\"Board_iconButton__9r8ni\"};","import css from './Board.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { openModal } from '../../../redux/modalSlice';\nimport { deleteBoard } from '../../../redux/board/boardThunks';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Board = ({ board }) => {\n  const dispatch = useDispatch();\n  const navigate= useNavigate()\n\n  const handleEditBoard = () => {\n    dispatch(openModal({ content: 'edit-board' }));\n  };\n\n  const handleNavigate = (e) =>{\n    if(e.target !== e.currentTarget){\n      return\n    }\n    navigate(`/home/${board._id}`)\n  }\n\n  const handleDelete = () =>{\n    navigate('/home')\n    dispatch(deleteBoard(board._id))\n  }\n  return (\n    <li id='boardBtn' onClick={handleNavigate} className={css.boardItem}>\n      <div className={css.boardTitleBox}>\n        <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n          <use href={`${sprite}#icon-${board.icon}`} />\n        </svg>\n        <p className={css.boardText}>{board.name}</p>\n      </div>\n      <div className={css.boardButtonBox}>\n        <button onClick={handleEditBoard} className={css.boardButton}>\n          <svg className={css.iconButton} width=\"16\" height=\"16\">\n            <use href={`${sprite}#icon-pencil`} />\n          </svg>\n        </button>\n        <button\n          className={css.boardButton}\n          onClick={handleDelete}\n        >\n          <svg className={css.iconButton} width=\"16\" height=\"16\">\n            <use href={`${sprite}#icon-trash`} />\n          </svg>\n        </button>\n      </div>\n    </li>\n  );\n};\n","import css from './Sidebar.module.css';\nimport sprite from '../../images/sprite.svg';\nimport pot from '../../images/need-help/pot.png';\nimport pot2x from '../../images/need-help/pot2x.png';\nimport { Board } from './Board/Board';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal, closeSidebar } from '../../redux/modalSlice';\nimport { logoutThunk } from '../../redux/auth/authThunks';\nimport { selectBoards } from '../../redux/board/selectors';\nimport { useEffect } from 'react';\nimport { fetchBoards } from '../../redux/board/boardThunks';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const { sideBarIsOpen } = useSelector(state => state.modal);\n\n  const handleAddBoard = () => {\n    dispatch(openModal({ content: 'add-board' }));\n  };\n\n  const handleNeddHelp = () => {\n    dispatch(openModal({ content: 'need-help' }));\n  };\n  const handleCloseSidebar = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(closeSidebar());\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logoutThunk());\n  };\n\n  return (\n    <div\n      onClick={e => handleCloseSidebar(e)}\n      className={`${sideBarIsOpen && css.sidebarBackdrop}`}\n    >\n      <div className={`${css.sideBar} ${sideBarIsOpen && css.sideBarOpened}`}>\n        {/* logo, title */}\n        <div className={css.titleBox}>\n          <div className={css.iconBox}>\n            <div className={css.logoIconContainer}>\n              <svg className={css.iconLogo} width=\"16\" height=\"16\">\n                <use href={`${sprite}#icon-logo`} />\n              </svg>\n            </div>\n            <h2 className={css.title}>Task Pro</h2>\n          </div>\n          <div className={css.bordBox}>\n            <h3 className={css.bordTitle}>My Boards</h3>\n            {/* button create */}\n            <div className={css.buttonBox}>\n              <span className={css.buttonText}>Create a new board</span>\n              <button onClick={handleAddBoard} className={css.buttonCreate}>\n                <svg className={css.iconCreate} width=\"22\" height=\"22\">\n                  <use href={`${sprite}#icon-plus`} />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n        {boards.length > 0 && (\n          <ul className={css.bordList}>\n            {boards.map(board => (\n              <Board key={board._id} board={board}></Board>\n            ))}\n          </ul>\n        )}\n\n        {/* need help */}\n        <div className={css.helpBox}>\n          <div className={css.helpTextBox}>\n            <picture className={css.imgHelp}>\n              <source srcSet={`${pot} 1x, ${pot2x} 2x`} />\n              <img srcSet={`${pot} 1x`} alt=\"pot\" />\n            </picture>\n            <p className={css.helpText}>\n              If you need help with{' '}\n              <span className={css.helpTextLink}>TaskPro</span>, check out our\n              support resources or reach out to our customer support team.\n            </p>\n            <button onClick={handleNeddHelp} className={css.buttonHelp}>\n              <svg className={css.iconHelp} width=\"20\" height=\"20\">\n                <use href={`${sprite}#icon-help`} />\n              </svg>\n              <p className={css.helpButtonText}>Need help?</p>\n            </button>\n          </div>\n          {/* logout */}\n          <button onClick={handleLogout} className={css.buttonLogOut}>\n            <svg className={css.iconLogOut} width=\"32\" height=\"32\">\n              <use href={`${sprite}#icon-login`} />\n            </svg>\n            <p className={css.logOutButtonText}>Log Out</p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boardDefault\":\"DefaultBoard_boardDefault__OGVRe\",\"boardDefaultText\":\"DefaultBoard_boardDefaultText__9+0UM\",\"boardDefaultLink\":\"DefaultBoard_boardDefaultLink__D+uKf\"};","import css from './DefaultBoard.module.css'\n\nexport const DefaultBoard = () =>{\n    return(\n    <div className={css.boardDefault}>\n        <p className={css.boardDefaultText}>Before starting your project, it is essential <span className={css.boardDefaultLink}>to create a board</span> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</p>\n    </div>)\n}","// extracted by mini-css-extract-plugin\nexport default {\"navContainer\":\"Navigation_navContainer__+dgHg\",\"buttonBurger\":\"Navigation_buttonBurger__Kqo-y\",\"iconBurger\":\"Navigation_iconBurger__Y+5FL\",\"navMenu\":\"Navigation_navMenu__tyi6A\"};","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"UserMenu_userInfo__78zcg\",\"buttonOpen\":\"UserMenu_buttonOpen__XKE8P\",\"userAvatarWrap\":\"UserMenu_userAvatarWrap__8cND4\",\"userIcon\":\"UserMenu_userIcon__Wa0NS\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../../redux/modalSlice';\nimport css from './UserMenu.module.css';\nimport sprite from '../../images/sprite.svg';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user)\n  const handleUserModalOpen = () => {\n    dispatch(openModal({ content: 'edit-profile' }));\n  };\n\n  return (\n    <>\n      <div className={css.userInfo}>\n        <button\n          className={css.buttonOpen}\n          type=\"button\"\n          onClick={handleUserModalOpen}\n        >\n          {user.name}\n          {console.log(user)}\n          <div className={css.userAvatarWrap}>\n            <svg className={css.userIcon}>\n              <use href={`${sprite}#icon-user2`} />\n            </svg>\n          </div>\n        </button>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"menuTheme\":\"ThemeSelect_menuTheme__syeY8\",\"iconChevronDown\":\"ThemeSelect_iconChevronDown__z0Zx0\",\"titleMenuTheme\":\"ThemeSelect_titleMenuTheme__kfQsY\",\"buttonMenu\":\"ThemeSelect_buttonMenu__M4R80\",\"menuList\":\"ThemeSelect_menuList__tMjNr\",\"menuItem\":\"ThemeSelect_menuItem__ZUuoU\",\"menuListHidden\":\"ThemeSelect_menuListHidden__TW9FY\"};","import css from './ThemeSelect.module.css'\nimport { useDispatch } from 'react-redux'\nimport { updaterUserTheme } from '../../redux/auth/authThunks'\n\nexport const ThemePopup = ({onSelectClose, isOpen}) =>{\n    const dispatch = useDispatch()\n\n    const handleChangeTheme = (e) =>{\n        console.log(e.target.id)\n        dispatch(updaterUserTheme({theme: `${e.target.id}`}))\n        onSelectClose()\n    }\n\n    return (\n            <ul  data-popup='menu' className={`${css.menuList} ${!isOpen && css.menuListHidden}`}>\n                <li onClick={handleChangeTheme}  data-popup='el' id='light' className={css.menuItem}>Light</li>\n                <li onClick={handleChangeTheme} data-popup='el' id=\"dark\" className={css.menuItem}>Dark</li>\n                <li onClick={handleChangeTheme} data-popup='el' id='violet' className={css.menuItem}>Violet</li>\n            </ul>\n    )\n}","import css from './ThemeSelect.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useState } from 'react';\nimport { ThemePopup } from './ThemePopup';\nimport { useEffect } from 'react';\n\n\nexport const ThemeSelect = () => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() =>{\n    if((isOpen)){\n      document.body.addEventListener('click', handlePopupClose)\n    }\n    return() => {\n      document.body.removeEventListener('click', handlePopupClose)\n    }\n  })\n\n  const handleOpenPopup = (e) =>{\n    if((e.target.popup === 'menu') || (e.target.popup === 'el')){\n      return\n    }\n    setIsOpen(prev => !prev)  \n  }\n\n  const handlePopupClose = (e) =>{\n    if((e.target.dataset.popup !== 'popupBtn') && (e.target.popup !== 'menu')  && (e.target.popup !== 'el')){\n      setIsOpen(prev => !prev)\n    }\n  }\n\n  const onSelectClose = () =>{\n    setIsOpen(prev => !prev)\n  }\n\n  return (\n    <div data-popup=\"popupBtn\" onClick={(e)=>handleOpenPopup(e)} className={css.menuTheme}>\n      <p data-popup=\"popupBtn\" className={css.titleMenuTheme}>Theme</p>\n      <button data-popup=\"popupBtn\" className={css.buttonMenu} type=\"button\">\n        <svg data-popup=\"popupBtn\"  className={css.iconChevronDown} width=\"16\" height=\"16\">\n          <use data-popup=\"popupBtn\"  href={`${sprite}#icon-chevron-down`} />\n        </svg>\n      </button>\n      <ThemePopup onSelectClose={onSelectClose} isOpen={isOpen}/>\n    </div>\n  );\n};\n","import css from './Navigation.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openSidebar } from '../../redux/modalSlice';\nimport { UserMenu } from '../UserMenu/UserMenu.jsx';\nimport { ThemeSelect } from '../ThemeSelect/ThemeSelect.jsx';\n\nexport const Navigation = () => {\n  const dispatch = useDispatch()\n  const { sideBarIsOpen } = useSelector(state => state.modal);\n\n  const openMenu =()=>{\n    dispatch(openSidebar())\n    console.log(sideBarIsOpen)\n    \n  }\n  return (\n    <div className={css.navContainer}>\n      <button className={css.buttonBurger} type=\"button\" onClick={openMenu}>\n        <svg className={css.iconBurger} width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-menu`} />\n        </svg>\n      </button>\n\n      <div className={css.navMenu}>\n        <ThemeSelect />\n        <UserMenu />\n      </div>\n    </div>\n  );\n};\n\n\n","import css from './HomePage.module.css';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ModalBody } from 'components/Modals/ModalBody';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DefaultBoard } from 'components/DefaultBoard/DefaultBoard';\nimport { Navigation } from 'components/Navigation/Navigation';\n\nconst HomePage = () => {\n  const { isOpen } = useSelector(state => state.modal);\n  const {theme} = useSelector(state => state.auth.user)\n  const location = useLocation();\n\n\n    return(\n    <div className={css.main} data-theme={theme}>\n            <Sidebar/> \n      <div className={css.mainPage}>\n        <Navigation />\n        {location.pathname === '/home' && <DefaultBoard />}\n        {/* В outlet БУДЕ РЕНДЕРИТИСЯ БОРД */}\n        <Suspense fallback={<div>Loading....</div>}>\n          <Outlet />\n        </Suspense>\n        {isOpen && <ModalBody />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const selectBoards = state => state.boards.boards;\n\nexport const selectCurrentBoard = state => state.boards.currentBoard;\n\nexport const selectIsLoading = state => state.boards.isLoading;\n\nexport const selectError = state => state.boards.error;","var map = {\n\t\"./1.png\": 7919,\n\t\"./10.png\": 9983,\n\t\"./11.png\": 8438,\n\t\"./12.png\": 9645,\n\t\"./13.png\": 8516,\n\t\"./14.png\": 8427,\n\t\"./15.png\": 4274,\n\t\"./16.png\": 857,\n\t\"./2.png\": 1060,\n\t\"./3.png\": 4957,\n\t\"./4.png\": 98,\n\t\"./5.png\": 4923,\n\t\"./6.png\": 6592,\n\t\"./7.png\": 1065,\n\t\"./8.png\": 5198,\n\t\"./9.png\": 7687\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6679;"],"names":["NewBoardForm","dispatch","useDispatch","title","setTitle","useState","iconValue","setIconValue","bgValue","setBgValue","bgValues","i","push","_jsxs","className","css","formWrap","children","_jsx","formTitle","form","onSubmit","e","preventDefault","newBoard","name","icon","background","addBoard","target","reset","closeModal","onSubmitForm","htmlFor","autoComplete","placeholder","onChange","value","handleChange","formInput","type","required","iconsForm","iconsTitle","iconsWrap","map","ic","container","handleIconChange","id","checkmark","href","concat","sprite","bgIconsWrap","bg","bgContainer","handleBgChange","bgCheckmark","width","height","src","require","alt","formButton","iconWrap","buttonIcon","EditBoardForm","console","log","AddColumnForm","EditColumnForm","NeedHelpForm","email","setEmail","comment","setComment","handleEmailChange","handleCommentChange","commentInput","ImageInput","setFieldValue","useFormikContext","accept","hidden","async","_e$target$files","file","files","res","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","schema","Yup","shape","matches","password","UserForm","user","useSelector","state","auth","passwordVisible","setPasswordVisible","handleClickPasswordVisibility","_Fragment","Formik","initialValues","avatar","avatarURL","validationSchema","Form","xlinkHref","Field","ErrorMessage","errorMsg","onClick","Calendar","_ref","selectedDate","onDateChange","DatePicker","calendarClassName","dayClassName","renderCustomHeader","_ref2","date","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","disabled","selected","dateFormat","minDate","Date","locale","enGB","weekStartsOn","Icon","fill","stroke","Icons","formCardSchema","min","max","text","priority","oneOf","deadline","AddCardForm","setSelectedDate","handleSubmit","from","errMsg","rows","noPriority","lowPriority","medPriority","highPriority","deadlineStyle","span","addButton","stylePlus","ModalBody","modalContent","modal","useLockBodyScroll","firstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","code","currentTarget","backdropClose","content","handleContent","Board","board","navigate","useNavigate","_id","handleEditBoard","openModal","handleDelete","deleteBoard","Sidebar","boards","selectBoards","fetchBoards","sideBarIsOpen","closeSidebar","handleCloseSidebar","sidebarBackdrop","sideBar","sideBarOpened","titleBox","iconBox","logoIconContainer","iconLogo","bordBox","bordTitle","buttonBox","buttonText","handleAddBoard","buttonCreate","iconCreate","length","bordList","helpBox","helpTextBox","imgHelp","srcSet","pot","pot2x","helpText","helpTextLink","handleNeddHelp","buttonHelp","iconHelp","helpButtonText","handleLogout","logoutThunk","buttonLogOut","iconLogOut","logOutButtonText","DefaultBoard","UserMenu","handleUserModalOpen","ThemePopup","onSelectClose","isOpen","handleChangeTheme","updaterUserTheme","theme","ThemeSelect","setIsOpen","document","body","handlePopupClose","dataset","popup","prev","handleOpenPopup","Navigation","openMenu","openSidebar","HomePage","location","useLocation","pathname","Suspense","fallback","Outlet","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","module","exports"],"sourceRoot":""}