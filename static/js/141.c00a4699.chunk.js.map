{"version":3,"file":"static/js/141.c00a4699.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/components/ScreensPage/ScreensPage.module.css?d472","webpack://task-pro/./src/components/dashboard/HeaderDashboard/HeaderDashboard.module.css?4f8c","webpack://task-pro/./src/components/dashboard/Filters/Filters.module.css?4d8b","webpack://task-pro/./src/components/Forms/FiltersForm/FiltersForm.module.css?0d6b","components/Forms/FiltersForm/FiltersForm.jsx","components/dashboard/Filters/Filters.jsx","components/dashboard/HeaderDashboard/HeaderDashboard.jsx","webpack://task-pro/./src/components/dashboard/MainDashboard/MainDashboard.module.css?9d01","webpack://task-pro/./src/components/Column/Column.module.css?790f","components/Column/Column.jsx","webpack://task-pro/./src/components/Card/Card.module.css?4f06","components/Card/ChangeColumn/ChangeColumnPopup.jsx","components/Card/ChangeColumn/ChangeColumnMenu.jsx","components/Card/Card.jsx","components/dashboard/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","redux/board/selectors.js","utils/priorityObject.js","images/card/background-desktop|sync|/^/.//.*@2x/.jpg$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"screensWrap\":\"ScreensPage_screensWrap__KpiXB\"};","// extracted by mini-css-extract-plugin\nexport default {\"headDashWrap\":\"HeaderDashboard_headDashWrap__-gjPa\",\"dashboardName\":\"HeaderDashboard_dashboardName__GHex9\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuFilterTheme\":\"Filters_menuFilterTheme__ctfu3\",\"filterButton\":\"Filters_filterButton__ZOUmh\",\"filterIcon\":\"Filters_filterIcon__yhbRW\",\"filterIndicator\":\"Filters_filterIndicator__3qzc4\"};","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"FiltersForm_formWrap__p4sxw\",\"menuListHidden\":\"FiltersForm_menuListHidden__VzisA\",\"formTitle\":\"FiltersForm_formTitle__c6RsE\",\"filterLine\":\"FiltersForm_filterLine__aj1e8\",\"iconsForm\":\"FiltersForm_iconsForm__7D3Wa\",\"labelTitle\":\"FiltersForm_labelTitle__lsSuj\",\"iconsTitle\":\"FiltersForm_iconsTitle__BdgCK\",\"iconsAll\":\"FiltersForm_iconsAll__bo9EB\",\"iconsWrap\":\"FiltersForm_iconsWrap__ksC0g\",\"container\":\"FiltersForm_container__Wsogl\",\"iconName\":\"FiltersForm_iconName__8oXr0\",\"checkmark\":\"FiltersForm_checkmark__oO2Ys\"};","import css from './FiltersForm.module.css';\nimport { Formik } from 'formik';\nimport { priorityEnum } from 'utils/priorityObject';\nimport { useDispatch } from 'react-redux';\nimport { setFilterValue, clearFilter } from '../../../redux/filterSlice';\n\nexport const FiltersForm = ({ isOpen }) => {\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setFilterValue(e.target.value));\n  };\n\n  const handleClearFilter = e => {\n    e.preventDefault();\n    dispatch(clearFilter());\n\n    const radioButtons = document.querySelectorAll('input[type=\"radio\"]');\n    radioButtons.forEach(button => (button.checked = false));\n  };\n  return (\n    <div\n      data-popup=\"menu\"\n      className={`${css.formWrap} ${!isOpen && css.menuListHidden}`}\n    >\n      <h2 className={css.formTitle}>Filters</h2>\n      <div className={css.filterLine}></div>\n      <Formik\n        initialValues={{\n          priority: 'without',\n        }}\n      >\n        <form className={css.from}>\n          <fieldset className={css.iconsForm}>\n            <div className={css.labelTitle}>\n              <legend className={css.iconsTitle}>Label color</legend>\n              <button\n                onClick={e => handleClearFilter(e)}\n                className={css.iconsAll}\n              >\n                Show all\n              </button>\n            </div>\n            <div className={css.iconsWrap}>\n              {priorityEnum.map(pr => {\n                return (\n                  <label key={pr.title} className={css.container}>\n                    <input\n                      type=\"radio\"\n                      name=\"icon\"\n                      value={pr.title}\n                      required\n                      onChange={e => handleChangeFilter(e)}\n                    />\n                    <p className={css.iconName}>{pr.title}</p>\n                    <span\n                      style={{ backgroundColor: `${pr.color}` }}\n                      className={`${css.checkmark}`}\n                    ></span>\n                  </label>\n                );\n              })}\n            </div>\n          </fieldset>\n        </form>\n      </Formik>\n    </div>\n  );\n};\n","import css from './Filters.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FiltersForm } from 'components/Forms/FiltersForm/FiltersForm';\nimport { priorityEnum } from 'utils/priorityObject';\n\nconst Filters = () => {\n  const [isFiltersOpen, setIsFiltersOpen] = useState(false);\n  const filterValue = useSelector(state => state.filter.filterValue)\n  const filterColor = priorityEnum.find(pr => (pr.title === filterValue))\n\n  useEffect(() => {\n    if (isFiltersOpen) {\n      document.body.addEventListener('click', handleFiltersClose);\n    }\n    return () => {\n      document.body.removeEventListener('click', handleFiltersClose);\n    };\n  });\n\n  const handleFiltersOpen = e => {\n    if (e.target.popup === 'menu' || e.target.popup === 'el') {\n      return;\n    }\n    setIsFiltersOpen(prev => !prev);\n  };\n\n  const handleFiltersClose = e => {\n    if (\n      e.target.dataset.popup !== 'popupFiltersBtn' &&\n      e.target.dataset.popup !== 'menu' &&\n      e.target.popup !== 'el'\n    ) {\n      setIsFiltersOpen(prev => !prev);\n    }\n  };\n\n  const onFiltersClose = () => {\n    setIsFiltersOpen(prev => !prev);\n  };\n\n  return (\n    <div\n      data-popup=\"popupFiltersBtn\"\n      onClick={e => handleFiltersOpen(e)}\n      className={css.menuFilterTheme}\n    >\n      {filterColor && <div style={{backgroundColor: `${filterColor.color}`}} className={css.filterIndicator}></div>}\n      <button data-popup=\"popupFiltersBtn\" className={css.filterButton}>\n        <svg data-popup=\"popupFiltersBtn\" className={css.filterIcon}>\n          <use data-popup=\"popupFiltersBtn\" href={`${sprite}#icon-filter`} />\n        </svg>\n        Filters\n      </button>\n      <FiltersForm onSelectClose={onFiltersClose} isOpen={isFiltersOpen} />\n    </div>\n  );\n};\n\nexport default Filters;\n","import css from '../HeaderDashboard/HeaderDashboard.module.css';\nimport Filters from '../Filters/Filters';\n\n\nconst HeaderDashboard = ({ board }) => {\n  return (\n    <div className={css.headDashWrap}>\n      <h2 className={css.dashboardName}>{board?.name}</h2>\n      <Filters />\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"boardWrap\":\"MainDashboard_boardWrap__2u1Ba\",\"columnsList\":\"MainDashboard_columnsList__iP56w\",\"addColumnBtn\":\"MainDashboard_addColumnBtn__6+fG2\",\"addColumnWrap\":\"MainDashboard_addColumnWrap__j-UdJ\",\"addColumnIcon\":\"MainDashboard_addColumnIcon__qVRIe\",\"addColumnTitle\":\"MainDashboard_addColumnTitle__VFj8z\"};","// extracted by mini-css-extract-plugin\nexport default {\"columnWrap\":\"Column_columnWrap__G3hGv\",\"columnTitleWrap\":\"Column_columnTitleWrap__r2jmr\",\"columnTitle\":\"Column_columnTitle__JxUiI\",\"columnBtnWrap\":\"Column_columnBtnWrap__t2MEK\",\"columnButton\":\"Column_columnButton__qAW6n\",\"columnIcon\":\"Column_columnIcon__6CN5T\",\"columnList\":\"Column_columnList__04PMN\",\"columnAddButton\":\"Column_columnAddButton__0dcN0\",\"addColumnIcon\":\"Column_addColumnIcon__txMZ3\",\"addColumnTitle\":\"Column_addColumnTitle__mJxvp\"};","import css from './Column.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { openModal } from '../../redux/modalSlice';\nimport { useAutoAnimate } from '@formkit/auto-animate/react'\nimport { useDispatch } from 'react-redux';\nimport { setCurrentColumnId } from '../../redux/column/columnSlice';\n\nexport const Column = ({ children, column }) => {\n  const dispatch = useDispatch();\n\n  const [listRef] = useAutoAnimate()\n  const handleAddCard = () => {\n    dispatch(openModal({ content: 'add-card' }));\n    dispatch(setCurrentColumnId(column._id))\n  };\n\n\n  const handleEditColumn = () => {\n    dispatch(openModal({ content: 'edit-column', id:`${column._id}`}));\n  };\n  const handleWarningColumn =()=>{\n    dispatch (openModal({content:'warning-dell', id: column}))\n  }\n  return (\n    <li className={css.columnWrap}>\n      <div>\n        <div className={css.columnTitleWrap}>\n          <h2 className={css.columnTitle}>{column.title}</h2>\n          <div className={css.columnBtnWrap}>\n            <button className={css.columnButton}>\n              <svg onClick={handleEditColumn} className={css.columnIcon}>\n                <use href={`${sprite}#icon-pencil`}></use>\n              </svg>\n            </button>\n            <button onClick={handleWarningColumn} className={css.columnButton}>\n              <svg className={css.columnIcon}>\n                <use href={`${sprite}#icon-trash`}></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n        <ul className={css.columnList} ref={listRef}>{children}</ul>\n\n        <button onClick={handleAddCard} className={css.columnAddButton}>\n          <svg className={css.addColumnIcon}>\n            <use href={`${sprite}#icon-plus`}></use>\n          </svg>\n          <p className={css.addColumnTitle}>Add Card</p>\n        </button>\n      </div>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cardHeight\":\"Card_cardHeight__tSm4h\",\"cardContainer\":\"Card_cardContainer__aSrje\",\"cardWrapper\":\"Card_cardWrapper__TvahP\",\"cardTitle\":\"Card_cardTitle__4G9aB\",\"cardDiscription\":\"Card_cardDiscription__y7esn\",\"cardFooterWrapper\":\"Card_cardFooterWrapper__lWLCd\",\"cardFooter\":\"Card_cardFooter__bN4q3\",\"cardFooterTitle\":\"Card_cardFooterTitle__EwDak\",\"cardPriorityInfo\":\"Card_cardPriorityInfo__OS-yk\",\"cardPriorityCircle\":\"Card_cardPriorityCircle__Ah0Z+\",\"cardPriorityName\":\"Card_cardPriorityName__PBWEl\",\"cardDeadlineDate\":\"Card_cardDeadlineDate__72wFp\",\"cardIconsList\":\"Card_cardIconsList__ZGvEC\",\"cardIconItemBell\":\"Card_cardIconItemBell__3gB-r\",\"cardSvg\":\"Card_cardSvg__iWUIX\",\"cardIconButton\":\"Card_cardIconButton__s4c7h\",\"cardIconItem\":\"Card_cardIconItem__8AccS\",\"popupMenuList\":\"Card_popupMenuList__s6SOr\",\"popupHidden\":\"Card_popupHidden__AU9tj\",\"popupMenuItem\":\"Card_popupMenuItem__4xTyw\",\"popupMenuDef\":\"Card_popupMenuDef__TjaKT\",\"selectCardSvg\":\"Card_selectCardSvg__wDXPX\"};","import css from '../Card.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\n\nexport const ChangeColumnPopup = ({isOpen, handleMove, filterVal}) => {\n    const stateColumns = useSelector(state => state.columns.columns)\n  return (\n        <>\n        {stateColumns.length > 1 ?\n        <ul style={stateColumns.length < 3 ? {marginTop: \"30px\"} : {} }  data-popup=\"changeMenu\" className={`${css.popupMenuList} ${!isOpen && css.popupHidden}`}>\n                {stateColumns.filter(col => col._id !== filterVal).map(col =>{\n                    return(\n                        <li onClick={()=>handleMove(col._id)}  key={col._id} className={`${css.popupMenuItem}`}>\n                            <span className={css.popupMenuText}>{col.title}</span>\n                                <svg className={css.selectCardSvg}>\n                                    <use href={`${sprite}#icon-arrow-in-circle`}/>\n                                </svg>\n                        </li> \n                    )\n                })}         \n            </ul> : <ul style={stateColumns.length < 3 ? {marginTop: \"30px\"} : {} } className={`${css.popupMenuList} ${!isOpen && css.popupHidden}`}>\n                <li className={css.popupMenuDef}><span>No other columns</span>\n                </li>\n            </ul>}\n        </>\n        \n  )\n}\n","import css from '../Card.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { ChangeColumnPopup } from './ChangeColumnPopup';\nimport { useDispatch } from 'react-redux';\nimport { updateColumnId } from '../../../redux/card/cardThunk';\nimport { useSelector } from 'react-redux';\n\nexport const ChangeColumnMenu = ({card}) => {\n  const [isChangeOpen, setIsChangeOpen] = useState(false)\n  const allCards = useSelector(state=> state.cards.cards)\n\n  const dispatch = useDispatch()\n\n\n  useEffect(() =>{\n    if((isChangeOpen)){\n      document.body.addEventListener('click', handlePopupClose)\n    }\n    return() => {\n      document.body.removeEventListener('click', handlePopupClose)\n    }\n  })\n\n  const handleOpenPopup = (e) =>{\n    setIsChangeOpen(prev => !prev)  \n  }\n\n  const handlePopupClose = (e) =>{\n    if((e.target.dataset.popup === \"popupChange\")){\n      return\n    }\n      setIsChangeOpen(prev => !prev)\n  }\n\n  const handleMoveCard = (colId) =>{\n    const currColumnCardsLgth = allCards.filter(card => card.columnId === colId).length\n    dispatch(updateColumnId({id: card._id, columnId: colId, index: currColumnCardsLgth}))\n    const currCards = allCards.filter(c => c.columnId === card.columnId)\n    currCards.forEach(c => {\n      if((c.index < card.index) || (c._id === card._id)){\n        return\n      }\n      dispatch(updateColumnId({id: c._id, columnId: c.columnId, index: c.index - 1}))\n    });\n  }\n\n\n  return (\n    <button data-popup=\"popupChange\" onClick={(e)=>handleOpenPopup(e)} type='button' className={css.cardIconButton}>\n            <svg data-popup=\"popupChange\" className={css.cardSvg}>\n                <use data-popup=\"popupChange\" href={`${sprite}#icon-arrow-in-circle`}/>\n            </svg>\n              <ChangeColumnPopup filterVal={card.columnId} isOpen={isChangeOpen}  handleMove={handleMoveCard}/>       \n    </button>\n  )\n}\n","import css from './Card.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\n// import { deleteCard } from '../../redux/card/cardThunk';\nimport { priorityEnum } from 'utils/priorityObject';\nimport { openModal } from '../../redux/modalSlice';\nimport { ChangeColumnMenu } from './ChangeColumn/ChangeColumnMenu';\n\n\n\nexport const Card = ({card}) =>{\n    const dispatch = useDispatch()\n    const priorityColor = priorityEnum.find(pr => pr.title === card.priority)\n    // const handleDeleteCard = (e) =>{\n    //     dispatch(deleteCard(card._id))\n    // }\n    \n \n    let dateNow =new Date();\n    let deadline = new Date(card.deadline);\n    let countdown = deadline-dateNow;\n    const warningTime = 86400000*2;\n\n    const handleEditCard = () =>{\n        dispatch(openModal({content: \"edit-card\", id: `${card._id}`}))\n    }\n  const handleWarningCard =()=>{\n    dispatch (openModal({content:'warning-dell', id: card}))\n  }\n    //Логіка: Дані передаються в компонент з отриманого з бекенду юзера в тому числі додаткові класи; дзвіночок створюється за умови якщо сьогоднішня дата на 1 більша за дату дедлайну; додати функції при кліку на іконки \n    return (\n        <div className={css.cardHeight}>\n            <div style={{backgroundColor: `${priorityColor.color}`}} className={css.cardWrapper}>\n                <div className= {css.cardContainer}>\n                    <h4 className={css.cardTitle}>{card.title}</h4>\n                    <p className={css.cardDiscription}>{card.description}</p>\n                    <div className={css.cardFooterWrapper}>\n                        <div className={css.cardFooter}>\n                            <div className={css.cardPriority}>\n                                <h5 className={css.cardFooterTitle}>Priority {card.index}</h5>\n                                <div className={css.cardPriorityInfo}>\n                                    <div style={{backgroundColor: `${priorityColor.color}`}} className={`${css.cardPriorityCircle}`}></div>\n                                    <p className={css.cardPriorityName}>{card.priority.split(' ')[0]}</p>\n                                </div>\n                            </div>\n                            <div className={css.cardDeadline}>\n                                <h5 className={css.cardFooterTitle}>Deadline</h5>\n                                <p className={css.cardDeadlineDate}>{deadline.toLocaleDateString('en-GB')}</p>\n                                <p className={css.cardDeadlineDate}>{}</p>\n                            </div>\n                            <ul className={css.cardIconsList}>\n                               {countdown<warningTime && (<li className={css.cardIconItemBell}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-bell`}/>\n                                    </svg>\n                                    </button>\n                                </li>)}\n                                <li className={css.cardIconItem} >\n                                    <ChangeColumnMenu card={card}/>\n                                </li>\n                                <li className={css.cardIconItem}>\n                                    <button onClick={e=>handleEditCard(e)} type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-pencil`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem}>\n                                    <button onClick={handleWarningCard} type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-trash`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n    </div>\n)}","import css from './MainDashboard.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { Column } from 'components/Column/Column';\nimport { Card } from 'components/Card/Card';\nimport { useEffect } from 'react';\nimport { useAutoAnimate } from '@formkit/auto-animate/react'\nimport { openModal } from '../../../redux/modalSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getCards} from '../../../redux/card/cardThunk';\nimport {getColumns} from '../../../redux/column/columnThunk';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Spinner } from 'components/Spinner';\n\nconst MainDashboard = ({ board }) => {\n  const dispatch = useDispatch();\n  const stateColumns = useSelector(state => state.columns.columns)\n  const stateCards = useSelector(state => state.cards.cards)\n  const filterValue = useSelector(state => state.filter.filterValue)\n  const [listRef] = useAutoAnimate()\n  const isLoading = useSelector(state => state.cards.isLoading)\n\n  useEffect(() => {\n    if(board){\n      dispatch(getColumns(board._id))\n      dispatch(getCards(board._id))\n    }\n  }, [dispatch, board]);\n\n\n  const handleAddColumn = () => {\n    dispatch(openModal({ content: 'add-column' }));\n  };\n\n  return (\n    <DragDropContext>\n      {isLoading && <Spinner></Spinner>}\n      <div className={css.boardWrap}>\n      <ul className={css.columnsList} ref={listRef}>\n        {stateColumns && stateColumns.map(col => {\n          return (\n            <Column key={col._id} column={col} >\n              {stateCards && stateCards\n                .filter(card => {\n                  if(card.columnId === col._id){\n                    if(filterValue){\n                      return (card.priority === filterValue)\n                    }\n                    return true\n                  }\n                  return false\n                }).sort(function(a,b){return a.index-b.index})\n                .map(card => {\n                  return <Card key={card._id} card={card} />;\n                })}\n            </Column>\n          );\n        })}\n        <button onClick={handleAddColumn} className={css.addColumnBtn}>\n          <div className={css.addColumnWrap}>\n            <svg className={css.addColumnIcon}>\n              <use href={`${sprite}#icon-plus`}></use>\n            </svg>\n            <p className={css.addColumnTitle}>Add another column</p>\n          </div>\n        </button>\n      </ul>\n    </div>\n    </DragDropContext>\n    \n  );\n};\n\nexport default MainDashboard;\n","import css from './ScreensPage.module.css';\nimport { useParams } from 'react-router-dom';\nimport { selectBoards } from '../../redux/board/selectors';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { setCurrentBoardId } from '../../redux/board/boardSlice';\nimport { useDispatch } from 'react-redux';\n\nimport HeaderDashboard from '../dashboard/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from '../dashboard/MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n  const {boardId} = useParams()\n  const boards = useSelector(selectBoards);\n  const currentBoard = boards.find((board) => board._id === boardId)\n  const bgImg = require(`../../images/card/background-desktop/${currentBoard?.background ?? \"2\"}@2x.jpg`)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setCurrentBoardId(boardId))\n  })\n  \n  return (\n    <div  style={ currentBoard?.background!=='1' ? {backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${bgImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\"} : {}} className={css.screensWrap}>\n        <HeaderDashboard board={currentBoard} />\n        <MainDashboard board = {currentBoard} />\n    </div>\n  );\n};\n\nexport default ScreensPage;\n\n// import css from './ScreensPage.module.css';\n\n// import { useLocation, useNavigate, useParams } from 'react-router-dom';\n// import { useEffect, useRef, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import HeaderDashboard from '../HeaderDashboard/HeaderDashboard';\n// import MainDashboard from '../MainDashboard/MainDashboard';\n\n// import { selectAllDashboards } from '../../redux/dashboard/dashboardsSelectors';\n\n// const ScreensPage = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [currentPageName, setCurrentPageName] = useState('');\n//   const didMount = useRef(true);\n//   const { boardName } = useParams();\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const allDashboards = useSelector(selectAllDashboards);\n//   const dispatch = useDispatch();\n//   const [boards, setBoards] = useState(allDashboards);\n\n//   const lookBoard = () => {\n//     const all = allDashboards.filter(dashboard => {\n//       return dashboard.title === boardName;\n//     });\n\n//     return all;\n//   };\n\n//   useEffect(() => {\n//     setCurrentPageName(boardName);\n//   }, [location.pathname, boardName]);\n\n//   useEffect(() => {\n//     setBoards(allDashboards);\n//     if (didMount.current !== true && boardName !== currentPageName) {\n//       return;\n//     }\n//     if (allDashboards.length === 0) {\n//       navigate(`/home`, {\n//         replace: true,\n//       });\n//     }\n//     if (allDashboards.length > 0 && !boardName) {\n//       setLoading(true);\n//       const lastDashboard = allDashboards[allDashboards.length - 1] ?? '';\n//       setCurrentPageName(lastDashboard.title);\n//       navigate(`/home/${lastDashboard.title}`, {\n//         replace: true,\n//         state: { id: lastDashboard._id },\n//       });\n//       setLoading(false);\n//     }\n//     didMount.current = false;\n//   }, [\n//     allDashboards,\n//     navigate,\n//     boardName,\n//     currentPageName,\n//     boards.length,\n//     dispatch,\n//   ]);\n\n//   return (\n//     <div\n//       className={css.test}\n//       $bcgurl={\n//         lookBoard().length > 0 ? lookBoard()[0].backgroundURL : undefined\n//       }\n//     >\n//       {loading ? (\n//         <div>Loading....</div>\n//       ) : (\n//         boardName !== undefined && (\n//           <div>\n//             <HeaderDashboard boardName={boardName} />\n//             <MainDashboard />\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ScreensPage;\n","export const selectBoards = state => state.boards.boards;\n\nexport const selectCurrentBoard = state => state.boards.currentBoard;\n\nexport const selectIsLoading = state => state.boards.isLoading;\n\nexport const selectError = state => state.boards.error;","export const priorityEnum = [\n    {title: 'Without priority', color: \"#595959\"},\n    {title: 'Low', color: \"#8fa1d0\"},\n    {title: 'Medium', color: \"#e09cb5\"},\n    {title: 'High', color: \"#bedbb0\"}];","var map = {\n\t\"./10@2x.jpg\": 1095,\n\t\"./11@2x.jpg\": 4848,\n\t\"./12@2x.jpg\": 25,\n\t\"./13@2x.jpg\": 9898,\n\t\"./14@2x.jpg\": 3843,\n\t\"./15@2x.jpg\": 2652,\n\t\"./16@2x.jpg\": 2773,\n\t\"./1@2x.jpg\": 1763,\n\t\"./2@2x.jpg\": 8374,\n\t\"./3@2x.jpg\": 693,\n\t\"./4@2x.jpg\": 2768,\n\t\"./5@2x.jpg\": 9015,\n\t\"./6@2x.jpg\": 7818,\n\t\"./7@2x.jpg\": 7945,\n\t\"./8@2x.jpg\": 6900,\n\t\"./9@2x.jpg\": 3867\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6917;"],"names":["FiltersForm","_ref","isOpen","dispatch","useDispatch","_jsxs","className","concat","css","formWrap","menuListHidden","children","_jsx","formTitle","filterLine","Formik","initialValues","priority","from","iconsForm","labelTitle","iconsTitle","onClick","e","preventDefault","clearFilter","document","querySelectorAll","forEach","button","checked","handleClearFilter","iconsAll","iconsWrap","priorityEnum","map","pr","container","type","name","value","title","required","onChange","setFilterValue","target","handleChangeFilter","iconName","style","backgroundColor","color","checkmark","Filters","isFiltersOpen","setIsFiltersOpen","useState","filterValue","useSelector","state","filter","filterColor","find","useEffect","body","addEventListener","handleFiltersClose","removeEventListener","dataset","popup","prev","handleFiltersOpen","href","sprite","onSelectClose","onFiltersClose","board","Column","column","listRef","useAutoAnimate","handleEditColumn","openModal","content","id","_id","handleWarningColumn","ref","handleAddCard","setCurrentColumnId","ChangeColumnPopup","handleMove","filterVal","stateColumns","columns","_Fragment","length","marginTop","popupMenuList","popupHidden","col","popupMenuItem","popupMenuText","selectCardSvg","popupMenuDef","ChangeColumnMenu","card","isChangeOpen","setIsChangeOpen","allCards","cards","handlePopupClose","cardIconButton","cardSvg","columnId","colId","currColumnCardsLgth","updateColumnId","index","c","Card","priorityColor","dateNow","Date","deadline","countdown","cardHeight","cardWrapper","cardContainer","cardTitle","cardDiscription","description","cardFooterWrapper","cardFooter","cardPriority","cardFooterTitle","cardPriorityInfo","cardPriorityCircle","cardPriorityName","split","cardDeadline","cardDeadlineDate","toLocaleDateString","cardIconsList","cardIconItemBell","cardIconItem","handleWarningCard","stateCards","isLoading","getColumns","getCards","DragDropContext","Spinner","sort","a","b","handleAddColumn","ScreensPage","_currentBoard$backgro","boardId","useParams","currentBoard","selectBoards","bgImg","require","background","setCurrentBoardId","backgroundImage","backgroundPosition","backgroundSize","HeaderDashboard","MainDashboard","boards","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}