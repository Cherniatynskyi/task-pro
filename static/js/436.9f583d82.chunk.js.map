{"version":3,"file":"static/js/436.9f583d82.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/pages/HomePage/HomePage.module.css?5baa","webpack://task-pro/./src/components/Modals/ModalBody.module.css?f007","webpack://task-pro/./src/components/Forms/BoardForm/BoardForm.module.css?b03b","components/Forms/BoardForm/NewBoardForm.jsx","components/Forms/BoardForm/EditBoardForm.jsx","webpack://task-pro/./src/components/Forms/Column/ColumnForm.module.css?42aa","components/Forms/Column/AddColumnForm.jsx","components/Forms/Column/EditColumnForm.jsx","webpack://task-pro/./src/components/Forms/Help/NeedHelpForm.module.css?6d36","components/Forms/Help/NeedHelpForm.jsx","components/Forms/UserForm/ImgInput.jsx","webpack://task-pro/./src/components/Forms/UserForm/UserForm.module.css?c4e1","components/Forms/UserForm/UserForm.jsx","webpack://task-pro/./src/components/Calendar/Calendar.module.css?a426","components/Calendar/Calendar.jsx","components/Icon.jsx","webpack://task-pro/./src/components/Forms/CardForm/AddCard.module.css?320f","components/Forms/CardForm/AddCard.jsx","components/Modals/ModalBody.jsx","webpack://task-pro/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://task-pro/./src/components/Sidebar/Board/Board.module.css?228b","components/Sidebar/Board/Board.jsx","components/Sidebar/Sidebar.jsx","webpack://task-pro/./src/components/DefaultBoard/DefaultBoard.module.css?a9e5","components/DefaultBoard/DefaultBoard.jsx","webpack://task-pro/./src/components/Navigation/Navigation.module.css?4bf2","webpack://task-pro/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://task-pro/./src/components/ThemeSelect/ThemeSelect.module.css?c8b0","components/ThemeSelect/ThemePopup.jsx","components/ThemeSelect/ThemeSelect.jsx","components/Navigation/Navigation.jsx","pages/HomePage/HomePage.jsx","redux/board/selectors.js","images/card/background-icons|sync|/^/.//.*/.png$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"HomePage_main__OiWfi\",\"mainPage\":\"HomePage_mainPage__BoNlQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBackdrop\":\"ModalBody_modalBackdrop__KSTDi\",\"modalBody\":\"ModalBody_modalBody__z2P-b\",\"testModalBody\":\"ModalBody_testModalBody__Lae1F\"};","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"BoardForm_formWrap__Mo0Ek\",\"formTitle\":\"BoardForm_formTitle__usegY\",\"formInput\":\"BoardForm_formInput__BAA1o\",\"iconsForm\":\"BoardForm_iconsForm__Vh1US\",\"iconsTitle\":\"BoardForm_iconsTitle__F+0eo\",\"iconsWrap\":\"BoardForm_iconsWrap__mqvgp\",\"bgIconsWrap\":\"BoardForm_bgIconsWrap__QP4eA\",\"iconInput\":\"BoardForm_iconInput__pMRLe\",\"container\":\"BoardForm_container__u+mXS\",\"bgContainer\":\"BoardForm_bgContainer__pPJAN\",\"checkmark\":\"BoardForm_checkmark__O0h40\",\"bgCheckmark\":\"BoardForm_bgCheckmark__M+lA3\",\"formButton\":\"BoardForm_formButton__z8EY6\",\"iconWrap\":\"BoardForm_iconWrap__7hZa6\",\"buttonIcon\":\"BoardForm_buttonIcon__biGbW\"};","import css from './BoardForm.module.css';\nimport { useState } from 'react';\nimport { closeModal } from '../../../redux/modalSlice';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { addBoard } from '../../../redux/board/boardThunks';\n\nexport const NewBoardForm = () => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [iconValue, setIconValue] = useState('');\n  const [bgValue, setBgValue] = useState('');\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleIconChange = e => {\n    setIconValue(e.target.value);\n  };\n\n  const handleBgChange = e => {\n    setBgValue(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    const newBoard = {\n      name: title,\n      icon: iconValue,\n      background: bgValue,\n    };\n\n    dispatch(addBoard(newBoard));\n    e.target.reset();\n    dispatch(closeModal());\n  };\n\n  const icValues = [\n    'four-circles',\n    'eye',\n    'star',\n    'loading',\n    'puzzle',\n    'container',\n    'logo',\n    'hexagon',\n  ];\n  const bgValues = [];\n\n  for (let i = 1; i <= 16; i++) {\n    bgValues.push(i);\n  }\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>New Board</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Icons</legend>\n          <div className={css.iconsWrap}>\n            {icValues.map(ic => {\n              return (\n                <label key={ic} className={css.container}>\n                  <input\n                    onChange={e => handleIconChange(e)}\n                    type=\"radio\"\n                    id={ic}\n                    name=\"icon\"\n                    value={ic}\n                  />\n                  <svg className={css.checkmark}>\n                    <use href={`${sprite}#icon-${ic}`} />\n                  </svg>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Background</legend>\n          <div className={css.bgIconsWrap}>\n            {bgValues.map(bg => {\n              return (\n                <label key={bg} className={css.bgContainer}>\n                  <input\n                    onChange={e => handleBgChange(e)}\n                    type=\"radio\"\n                    id={bg}\n                    name=\"bg\"\n                    value={bg}\n                  />\n                  <img\n                    className={css.bgCheckmark}\n                    width=\"28\"\n                    height=\"28\"\n                    src={require(`../../../images/card/background-icons/${bg}.png`)}\n                    alt=\"\"\n                  />\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Create\n        </button>\n      </form>\n    </div>\n  );\n};\n","import css from './BoardForm.module.css';\n\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\n\nexport const EditBoardForm = () => {\n  const [title, setTitle] = useState('');\n  const [iconValue, setIconValue] = useState('');\n  const [bgValue, setBgValue] = useState('');\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleIconChange = e => {\n    setIconValue(e.target.value);\n  };\n\n  const handleBgChange = e => {\n    setBgValue(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    console.log({ title, iconValue, bgValue });\n  };\n\n  const icValues = [\n    'four-circles',\n    'eye',\n    'star',\n    'loading',\n    'puzzle',\n    'container',\n    'logo',\n    'hexagon',\n  ];\n  const bgValues = [];\n\n  for (let i = 1; i <= 16; i++) {\n    bgValues.push(i);\n  }\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Edit Board</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Icons</legend>\n          <div className={css.iconsWrap}>\n            {icValues.map(ic => {\n              return (\n                <label key={ic} className={css.container}>\n                  <input\n                    onChange={e => handleIconChange(e)}\n                    type=\"radio\"\n                    id={ic}\n                    name=\"icon\"\n                    value={ic}\n                  />\n                  <svg className={css.checkmark}>\n                    <use href={`${sprite}#icon-${ic}`} />\n                  </svg>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Background</legend>\n          <div className={css.bgIconsWrap}>\n            {bgValues.map(bg => {\n              return (\n                <label key={bg} className={css.bgContainer}>\n                  <input\n                    onChange={e => handleBgChange(e)}\n                    type=\"radio\"\n                    id={bg}\n                    name=\"bg\"\n                    value={bg}\n                  />\n                  <img\n                    className={css.bgCheckmark}\n                    width=\"20\"\n                    height=\"20\"\n                    src={require(`../../../images/card/background-icons/${bg}.png`)}\n                    alt=\"\"\n                  />\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"ColumnForm_formWrap__qlgNz\",\"formTitle\":\"ColumnForm_formTitle__brkqM\",\"formInput\":\"ColumnForm_formInput__TwvzG\",\"iconsForm\":\"ColumnForm_iconsForm__czjpY\",\"iconsTitle\":\"ColumnForm_iconsTitle__9b450\",\"iconsWrap\":\"ColumnForm_iconsWrap__xwppe\",\"bgIconsWrap\":\"ColumnForm_bgIconsWrap__9BKMJ\",\"iconInput\":\"ColumnForm_iconInput__gaYW9\",\"container\":\"ColumnForm_container__tcg6N\",\"bgContainer\":\"ColumnForm_bgContainer__+9VXy\",\"checkmark\":\"ColumnForm_checkmark__0iObs\",\"bgCheckmark\":\"ColumnForm_bgCheckmark__SmlZ-\",\"formButton\":\"ColumnForm_formButton__SgVLS\",\"iconWrap\":\"ColumnForm_iconWrap__duW4E\",\"buttonIcon\":\"ColumnForm_buttonIcon__vdyo9\"};","import css from './ColumnForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../../images/sprite.svg';\nimport { postColumn } from '../../../redux/column/columnThunk';\nimport { closeModal } from '../../../redux/modalSlice';\n\nexport const AddColumnForm= () => {\n  const [title, setTitle] = useState('');\n  const currentBoardId = useSelector(state => state.boards.currentBoardId)\n  const dispatch = useDispatch()\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    dispatch(postColumn({title: title, boardId: currentBoardId}))\n    dispatch(closeModal());\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Add column</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n","import css from './ColumnForm.module.css';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\n\nexport const EditColumnForm = () => {\n  const existingColumns = [];\n\n  const [title, setTitle] = useState(existingColumns[0]);\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    console.log({ title });\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Edit column</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n      <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"NeedHelpForm_formWrap__EDmnt\",\"formTitle\":\"NeedHelpForm_formTitle__sljth\",\"formInput\":\"NeedHelpForm_formInput__aVFhD\",\"commentInput\":\"NeedHelpForm_commentInput__niNh7\",\"iconsForm\":\"NeedHelpForm_iconsForm__lWWH+\",\"iconsTitle\":\"NeedHelpForm_iconsTitle__jyG0n\",\"iconsWrap\":\"NeedHelpForm_iconsWrap__ACPv5\",\"bgIconsWrap\":\"NeedHelpForm_bgIconsWrap__J5v05\",\"iconInput\":\"NeedHelpForm_iconInput__dJrxH\",\"container\":\"NeedHelpForm_container__DDitB\",\"bgContainer\":\"NeedHelpForm_bgContainer__6tAKR\",\"checkmark\":\"NeedHelpForm_checkmark__EFSAN\",\"bgCheckmark\":\"NeedHelpForm_bgCheckmark__OcOlh\",\"formButton\":\"NeedHelpForm_formButton__EmpLK\",\"iconWrap\":\"NeedHelpForm_iconWrap__iFh9P\",\"buttonIcon\":\"NeedHelpForm_buttonIcon__HFz9F\"};","import css from './NeedHelpForm.module.css';\nimport { useState } from 'react';\n\nexport const NeedHelpForm = () => {\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    console.log({ email, comment });\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Need help</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"email\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Email\"\n            onChange={e => handleEmailChange(e)}\n            value={email}\n            className={css.formInput}\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n        </label>\n        <label htmlFor=\"comment\">\n          <textarea\n            placeholder=\"Comment\"\n            onChange={e => handleCommentChange(e)}\n            value={comment}\n            className={css.commentInput}\n            name=\"comment\"\n          />\n        </label>\n        <button type=\"submit\" className={css.formButton}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useFormikContext } from 'formik';\n\nexport default function ImageInput() {\n  const { setFieldValue } = useFormikContext();\n\n  const handleChooseFile = async e => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const res = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.onload = e => {\n          resolve(e.target.result);\n        };\n        reader.readAsDataURL(file);\n      });\n      console.log(res);\n      setFieldValue('avatar', file);\n      setFieldValue('avatarURL', res);\n    }\n  };\n\n  return (\n    <input\n      type=\"file\"\n      id=\"avatar\"\n      name=\"avatar\"\n      accept=\"image/*\"\n      hidden\n      onChange={handleChooseFile}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"UserForm_formWrap__Wzihy\",\"formTitle\":\"UserForm_formTitle__otdTI\",\"avatar\":\"UserForm_avatar__waQVs\",\"userAvaWrapper\":\"UserForm_userAvaWrapper__k1VgJ\",\"userImg\":\"UserForm_userImg__tVfTy\",\"iconBtnPlus\":\"UserForm_iconBtnPlus__nmlZL\",\"iconPlus\":\"UserForm_iconPlus__MDJty\",\"fieldWrapper\":\"UserForm_fieldWrapper__oOtLf\",\"field\":\"UserForm_field__3YSzB\",\"btnSend\":\"UserForm_btnSend__Qj2O-\",\"iconBtn\":\"UserForm_iconBtn__H9XGh\",\"iconEye\":\"UserForm_iconEye__uJFvZ\",\"errorMessage\":\"UserForm_errorMessage__lrIyV\",\"userIconBtn\":\"UserForm_userIconBtn__FYCa-\",\"userIcon\":\"UserForm_userIcon__TYapX\"};","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport ImageInput from './ImgInput.jsx';\nimport sprite from '../../../images/sprite.svg';\nimport css from './UserForm.module.css';\n\nconst emailRegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\nconst schema = Yup.object().shape({\n  avatar: Yup.mixed().test('fileType', 'Invalid file format', value => {\n    if (!value) return true;\n    const supportedFormats = ['image/png', 'image/jpeg', 'image/jpg'];\n    return supportedFormats.includes(value.type);\n  }),\n  name: Yup.string()\n    .min(2, 'Name must be at least 6 characters')\n    .max(32, 'Name must be no more than 16 characters')\n    .required('Name is required*'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Enter a valid Email*')\n    .email('Enter a valid Email*')\n    .required('Email is required*'),\n  password: Yup.string()\n    .matches(/^(?=.*[a-z])/, 'Password must meet the requirements*')\n    .min(8, 'Password must be at least 6 characters')\n    .max(64, 'Password must be no more than 16 characters')\n    .required('Password is required*'),\n});\n\nexport const UserForm = () => {\n  // const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n\n  const handleSubmit = e => {\n    console.log(e);\n  };\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const handleClickPasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  return (\n    <>\n      <div className={css.formWrap}>\n        <h2 className={css.formTitle}>Edit profile</h2>\n        <Formik\n          initialValues={{\n            avatar: '',\n            avatarURL: user.avatarURL,\n            name: user.name,\n            email: user.email,\n            password: '',\n          }}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <div className={css.avatar}>\n              <label className={css.userAvaWrapper}>\n                {user.avatarURL ? (\n                  <img src={``} alt=\"\" className={css.userImg} width={68} />\n                ) : (\n                  <div className={css.userIconBtn}>\n                    <svg className={css.userIcon}>\n                      <use href={`${sprite}#icon-user2`} />\n                    </svg>\n                  </div>\n                )}\n\n                <label htmlFor=\"avatar\" className={css.iconBtnPlus}>\n                  <ImageInput />\n\n                  <svg className={css.iconPlus} width=\"10\" height=\"10\">\n                    <use xlinkHref={`${sprite}#icon-plus`} />\n                  </svg>\n                </label>\n              </label>\n            </div>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n              />\n            </div>\n            <ErrorMessage name=\"name\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n            <ErrorMessage name=\"email\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type={passwordVisible ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Create a password\"\n              />\n              {passwordVisible ? (\n                <button\n                  className={css.iconBtn}\n                  type=\"button\"\n                  onClick={handleClickPasswordVisibility}\n                >\n                  <svg className={css.iconEye} width=\"18\" height=\"18\">\n                    <use href={`${sprite}#icon-eye`} />\n                  </svg>\n                </button>\n              ) : (\n                <button\n                  className={css.iconBtn}\n                  type=\"button\"\n                  onClick={handleClickPasswordVisibility}\n                >\n                  <svg className={css.iconEye} width=\"18\" height=\"18\">\n                    <use href={`${sprite}#icon-eye`} />\n                  </svg>\n                </button>\n              )}\n            </div>\n            <ErrorMessage name=\"password\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <button className={css.btnSend} type=\"submit\">\n              Send\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"react-datepicker\":\"Calendar_react-datepicker__aIvBg\",\"react-datepicker__input-container\":\"Calendar_react-datepicker__input-container__ATOa8\",\"react-datepicker__month-container\":\"Calendar_react-datepicker__month-container__iOOJ+\",\"react-datepicker__header\":\"Calendar_react-datepicker__header__JSD8l\",\"react-datepicker__current-month\":\"Calendar_react-datepicker__current-month__Dy2JK\",\"react-datepicker__navigation\":\"Calendar_react-datepicker__navigation__gjsop\",\"react-datepicker__day-name\":\"Calendar_react-datepicker__day-name__QhkFB\",\"react-datepicker__day\":\"Calendar_react-datepicker__day__gyfuL\",\"react-datepicker__day--selected\":\"Calendar_react-datepicker__day--selected__yrVtx\",\"react-datepicker__day--disabled\":\"Calendar_react-datepicker__day--disabled__UIKz5\",\"react-datepicker__time-name\":\"Calendar_react-datepicker__time-name__MUgtg\",\"react-datepicker__day--keyboard-selected\":\"Calendar_react-datepicker__day--keyboard-selected__XlOZz\",\"react-datepicker__month-text--keyboard-selected\":\"Calendar_react-datepicker__month-text--keyboard-selected__lMIox\",\"react-datepicker__quarter-text--keyboard-selected\":\"Calendar_react-datepicker__quarter-text--keyboard-selected__Vb42w\",\"react-datepicker__year-text--keyboard-selected\":\"Calendar_react-datepicker__year-text--keyboard-selected__7aYBU\",\"react-datepicker__week\":\"Calendar_react-datepicker__week__8ymPy\",\"react-datepicker__day--outside-month\":\"Calendar_react-datepicker__day--outside-month__SVg29\",\"calendar\":\"Calendar_calendar__vKx+D\",\"day\":\"Calendar_day__voALS\",\"header\":\"Calendar_header__Iy6a3\"};","import DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport css from './Calendar.module.css'\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  return (\n    <div>\n      <DatePicker\n      calendarClassName={css.calendar}\n      dayClassName={() =>css.day}\n      renderCustomHeader={({\n        date,\n        changeYear,\n        changeMonth,\n        decreaseMonth,\n        increaseMonth,\n        prevMonthButtonDisabled,\n        nextMonthButtonDisabled,\n      }) => \n      <div className={css.header}>\n        <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>\n            {\"<\"}\n          </button>\n        <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\n            {\">\"}\n        </button>\n      </div>}\n      selected={selectedDate}\n      onChange={handleDateChange}\n      dateFormat=\"MMMM d\"\n      minDate={new Date()}\n      locale={enGB}\n      weekStartsOn={1}\n    />\n    </div>\n  \n  );\n}\n","import Icons from '../images/sprite.svg';\n\nexport const Icon = ({\n  fill = 'none',\n  stroke = 'inherit',\n  name,\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg fill={fill} stroke={stroke} width={width} height={height}>\n      <use href={`${Icons}#icon-${name}`}></use>\n    </svg>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"AddCard_formWrap__9zhI6\",\"formTitle\":\"AddCard_formTitle__CSCfd\",\"formInput\":\"AddCard_formInput__J106k\",\"iconsForm\":\"AddCard_iconsForm__f8URq\",\"TitleCard\":\"AddCard_TitleCard__FqOo7\",\"Label\":\"AddCard_Label__VLFBs\",\"StyledDescription\":\"AddCard_StyledDescription__mqb6R\",\"LabelColorStyle\":\"AddCard_LabelColorStyle__KG-BC\",\"DeadlineStyle\":\"AddCard_DeadlineStyle__IsaYI\",\"AddButton\":\"AddCard_AddButton__KzT9F\",\"StylePlus\":\"AddCard_StylePlus__4RF-v\",\"Span\":\"AddCard_Span__4-tx7\",\"container\":\"AddCard_container__F7Kum\",\"iconsWrap\":\"AddCard_iconsWrap__Qc161\",\"checkmark\":\"AddCard_checkmark__3XP0U\",\"no\":\"AddCard_no__+VNMC\",\"low\":\"AddCard_low__oVkDn\",\"med\":\"AddCard_med__t4ZHr\",\"high\":\"AddCard_high__zfd21\"};","import { useState } from 'react';\nimport { Calendar } from 'components/Calendar';\nimport { Icon } from 'components/Icon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postCard } from '../../../redux/card/cardThunk';\nimport { closeModal } from '../../../redux/modalSlice';\nimport css from './AddCard.module.css';\n\nexport const AddCardForm = () =>{\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const currBoardId = useSelector(state => state.boards.currentBoardId)\n  const currColumnId = useSelector(state => state.columns.currentColumnId)\n  const dispatch = useDispatch();\n  const priorityEnum = [\n    {title: 'Without priority', color: \"#595959\"},\n    {title: 'Low', color: \"#8fa1d0\"},\n    {title: 'Medium', color: \"#e09cb5\"},\n    {title: 'High', color: \"#bedbb0\"}];\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handlePriorityChange = e =>{\n    setPriority(e.target.value);\n  }\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const newCard = {\n      title,\n      description,\n      priority,\n      deadline: selectedDate.getTime(),\n      boardId: currBoardId,\n      columnId: currColumnId\n    }\n    dispatch(postCard(newCard))\n    dispatch(closeModal())\n    \n  }\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Add Card</h2>\n          <form className={css.from} onSubmit={handleSubmitForm}>\n            <input\n              className={css.formInput}\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n              onChange={e => handleTitleChange(e)}\n            />\n            <p className={css.errMsg} name=\"title\" />\n            <label>\n              <textarea\n                className={css.formInput}\n                rows={4}\n                name=\"text\"\n                placeholder=\"Description\"\n                onChange={e => handleDescChange(e)}\n              />\n              <p className={css.errMsg} name=\"text\" />\n            </label>\n            <fieldset className={css.iconsForm}>\n            <legend className={css.iconsTitle}>Label color</legend>\n            <div className={css.iconsWrap}>\n                  {priorityEnum.map(pr => {\n                    return(\n                    <label key={pr.title} className={css.container}>\n                      <input \n                        type=\"radio\"\n                        id=\"1\"\n                        name=\"icon\"\n                        value={pr.title}\n                        onChange={e=>handlePriorityChange(e)}\n                      />\n                      <span style={{backgroundColor: `${pr.color}`}} className={`${css.checkmark}`}></span>\n                    </label>)\n                  })}\n            </div>\n          </fieldset>\n            <p className={css.deadlineStyle}>Deadline</p>\n            <div>\n              <span className={css.span}> Today,</span>\n              <Calendar\n                selectedDate={selectedDate}\n                onDateChange={date => {\n                  setSelectedDate(date);\n                }}\n              />\n            </div>\n            <button className={css.addButton} type=\"submit\">\n              <div className={css.stylePlus}>\n                <Icon name=\"plus\" width=\"14\" height=\"14\" />\n              </div>\n              <p>Add card</p>\n            </button>\n          </form>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\nimport { closeModal } from '../../redux/modalSlice';\nimport { useLockBodyScroll } from '@uidotdev/usehooks';\nimport css from './ModalBody.module.css';\nimport { NewBoardForm } from 'components/Forms/BoardForm/NewBoardForm';\nimport { EditBoardForm } from 'components/Forms/BoardForm/EditBoardForm';\nimport { AddColumnForm } from 'components/Forms/Column/AddColumnForm';\nimport { EditColumnForm } from 'components/Forms/Column/EditColumnForm';\nimport { NeedHelpForm } from 'components/Forms/Help/NeedHelpForm';\nimport { UserForm } from 'components/Forms/UserForm/UserForm';\nimport { AddCardForm } from 'components/Forms/CardForm/AddCard';\n\nexport const ModalBody = () => {\n  const dispatch = useDispatch();\n  const { modalContent } = useSelector(state => state.modal); // ДІСТАЄ З РЕДАКСУ КОНТЕНТ\n  useLockBodyScroll(); //БЛОКУЄ СКРОЛ СТОРІНКИ\n\n  const firstRender = useRef(false);\n  useLockBodyScroll();\n\n  useEffect(() => {\n    if (firstRender.current === false) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      firstRender.current = false;\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      dispatch(closeModal()); //ЗАКРИТТЯ НА ЕСКЕЙП\n    }\n  };\n\n  const backdropClose = e => {\n    if (e.target === e.currentTarget) {\n      //ЗАКРИТТЯ НА БЕКДРОП\n      dispatch(closeModal());\n    }\n  };\n\n  const handleContent = content => {\n    //ФУНКЦІЯ ВИЗНАЧЕННЯ РЕДНЕРУ КОНЕТНТУ. КОЖЕН КЕЙС ПОТРІБНО ПРОПИСАТИ\n    switch (content) {\n      case 'add-board':\n        return <NewBoardForm />;\n      case 'edit-board':\n        return <EditBoardForm />;\n      case 'add-column':\n        return <AddColumnForm />;\n      case 'edit-column':\n        return <EditColumnForm />;\n      case 'need-help':\n        return <NeedHelpForm />;\n      case 'edit-profile':\n        return <UserForm />;\n      case 'add-card':\n        return <AddCardForm />;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div onClick={e => backdropClose(e)} className={css.modalBackdrop}>\n      <div className={css.modalBody}>{handleContent(modalContent)}</div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sideBar\":\"Sidebar_sideBar__A8DTG\",\"sidebarBackdrop\":\"Sidebar_sidebarBackdrop__ozg8G\",\"sideBarOpened\":\"Sidebar_sideBarOpened__9jug6\",\"titleBox\":\"Sidebar_titleBox__xqSVd\",\"iconBox\":\"Sidebar_iconBox__lGsim\",\"logoIconContainer\":\"Sidebar_logoIconContainer__yiz-a\",\"iconLogo\":\"Sidebar_iconLogo__P5b+p\",\"title\":\"Sidebar_title__mzY+F\",\"bordBox\":\"Sidebar_bordBox__l9HDF\",\"bordTitle\":\"Sidebar_bordTitle__iDwHw\",\"buttonBox\":\"Sidebar_buttonBox__+dqOM\",\"buttonText\":\"Sidebar_buttonText__0LoRm\",\"buttonCreate\":\"Sidebar_buttonCreate__t3LZl\",\"iconCreate\":\"Sidebar_iconCreate__vE+2z\",\"scrollArea\":\"Sidebar_scrollArea__p2BVw\",\"bordList\":\"Sidebar_bordList__PS2uv\",\"helpBox\":\"Sidebar_helpBox__W7BKt\",\"helpTextBox\":\"Sidebar_helpTextBox__Sd7S6\",\"helpText\":\"Sidebar_helpText__1vwtr\",\"helpTextLink\":\"Sidebar_helpTextLink__QXL1T\",\"buttonHelp\":\"Sidebar_buttonHelp__nkXAH\",\"iconHelp\":\"Sidebar_iconHelp__6c8m3\",\"helpButtonText\":\"Sidebar_helpButtonText__0g7gg\",\"buttonLogOut\":\"Sidebar_buttonLogOut__VYxol\",\"iconLogOut\":\"Sidebar_iconLogOut__GX2DR\",\"logOutButtonText\":\"Sidebar_logOutButtonText__vzEjb\"};","// extracted by mini-css-extract-plugin\nexport default {\"boardItem\":\"Board_boardItem__pg3mb\",\"boardButton\":\"Board_boardButton__9AuMq\",\"boardIcon\":\"Board_boardIcon__TALFy\",\"boardTitleBox\":\"Board_boardTitleBox__N1O+A\",\"boardText\":\"Board_boardText__tGGO5\",\"boardTittle\":\"Board_boardTittle__4B6lS\",\"boardButtonBox\":\"Board_boardButtonBox__pijVR\",\"iconButton\":\"Board_iconButton__9r8ni\"};","import css from './Board.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { openModal } from '../../../redux/modalSlice';\nimport { deleteBoard } from '../../../redux/board/boardThunks';\nimport { closeSidebar } from '../../../redux/modalSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { setCurrentBoardId } from '../../../redux/board/boardSlice';\n\nexport const Board = ({ board }) => {\n  const dispatch = useDispatch();\n  const navigate= useNavigate()\n\n  const handleEditBoard = () => {\n    dispatch(openModal({ content: 'edit-board' }));\n  };\n\n  const handleNavigate = (e) =>{\n    if(e.target !== e.currentTarget){\n      return\n    }\n    navigate(`/home/${board._id}`)\n    dispatch(setCurrentBoardId(board._id))\n    dispatch(closeSidebar())\n  }\n\n  const handleDelete = () =>{\n    navigate('/home')\n    dispatch(deleteBoard(board._id))\n  }\n  return (\n    <li id='boardBtn' onClick={handleNavigate} className={css.boardItem}>\n      <div className={css.boardTitleBox}>\n        <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n          <use href={`${sprite}#icon-${board.icon}`} />\n        </svg>\n        <p className={css.boardText}>{board.name}</p>\n      </div>\n      <div className={css.boardButtonBox}>\n        <button onClick={handleEditBoard} className={css.boardButton}>\n          <svg className={css.iconButton} width=\"16\" height=\"16\">\n            <use href={`${sprite}#icon-pencil`} />\n          </svg>\n        </button>\n        <button\n          className={css.boardButton}\n          onClick={handleDelete}\n        >\n          <svg className={css.iconButton} width=\"16\" height=\"16\">\n            <use href={`${sprite}#icon-trash`} />\n          </svg>\n        </button>\n      </div>\n    </li>\n  );\n};\n","import css from './Sidebar.module.css';\nimport sprite from '../../images/sprite.svg';\nimport pot from '../../images/need-help/pot.png';\nimport pot2x from '../../images/need-help/pot2x.png';\nimport { useAutoAnimate } from '@formkit/auto-animate/react'\nimport { Board } from './Board/Board';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal, closeSidebar } from '../../redux/modalSlice';\nimport { logoutThunk } from '../../redux/auth/authThunks';\nimport { selectBoards } from '../../redux/board/selectors';\nimport { useEffect } from 'react';\nimport { fetchBoards } from '../../redux/board/boardThunks';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n  const [listRef] = useAutoAnimate()\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const { sideBarIsOpen } = useSelector(state => state.modal);\n\n  const handleAddBoard = () => {\n    dispatch(openModal({ content: 'add-board' }));\n  };\n\n  const handleNeddHelp = () => {\n    dispatch(openModal({ content: 'need-help' }));\n  };\n  const handleCloseSidebar = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(closeSidebar());\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logoutThunk());\n  };\n\n  return (\n    <div\n      onClick={e => handleCloseSidebar(e)}\n      className={`${sideBarIsOpen && css.sidebarBackdrop}`}\n    >\n      <div className={`${css.sideBar} ${sideBarIsOpen && css.sideBarOpened}`}>\n        {/* logo, title */}\n        <div className={css.titleBox}>\n          <div className={css.iconBox}>\n            <div className={css.logoIconContainer}>\n              <svg className={css.iconLogo} width=\"16\" height=\"16\">\n                <use href={`${sprite}#icon-logo`} />\n              </svg>\n            </div>\n            <h2 className={css.title}>Task Pro</h2>\n          </div>\n          <div className={css.bordBox}>\n            <h3 className={css.bordTitle}>My Boards</h3>\n            {/* button create */}\n            <div className={css.buttonBox}>\n              <span className={css.buttonText}>Create a new board</span>\n              <button onClick={handleAddBoard} className={css.buttonCreate}>\n                <svg className={css.iconCreate} width=\"22\" height=\"22\">\n                  <use href={`${sprite}#icon-plus`} />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n        {boards.length > 0 && (\n          <ul className={css.bordList} ref={listRef}>\n            {boards.map(board => (\n              <Board key={board._id} board={board}></Board>\n            ))}\n          </ul>\n        )}\n\n        {/* need help */}\n        <div className={css.helpBox}>\n          <div className={css.helpTextBox}>\n            {boards.length <= 2 && (\n              <>\n                <picture className={css.imgHelp}>\n                  <source srcSet={`${pot} 1x, ${pot2x} 2x`} />\n                  <img srcSet={`${pot} 1x`} alt=\"pot\" />\n                </picture>\n                <p className={css.helpText}>\n                  If you need help with{' '}\n                  <span className={css.helpTextLink}>TaskPro</span>, check out\n                  our support resources or reach out to our customer support\n                  team.\n                </p>\n              </>\n            )}\n            <button onClick={handleNeddHelp} className={css.buttonHelp}>\n              <svg className={css.iconHelp} width=\"20\" height=\"20\">\n                <use href={`${sprite}#icon-help`} />\n              </svg>\n              <p className={css.helpButtonText}>Need help?</p>\n            </button>\n          </div>\n          {/* logout */}\n          <button onClick={handleLogout} className={css.buttonLogOut}>\n            <svg className={css.iconLogOut} width=\"32\" height=\"32\">\n              <use href={`${sprite}#icon-login`} />\n            </svg>\n            <p className={css.logOutButtonText}>Log Out</p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boardDefault\":\"DefaultBoard_boardDefault__OGVRe\",\"boardDefaultText\":\"DefaultBoard_boardDefaultText__9+0UM\",\"boardDefaultLink\":\"DefaultBoard_boardDefaultLink__D+uKf\"};","import css from './DefaultBoard.module.css'\n\nexport const DefaultBoard = () =>{\n    return(\n    <div className={css.boardDefault}>\n        <p className={css.boardDefaultText}>Before starting your project, it is essential <span className={css.boardDefaultLink}>to create a board</span> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</p>\n    </div>)\n}","// extracted by mini-css-extract-plugin\nexport default {\"navContainer\":\"Navigation_navContainer__+dgHg\",\"buttonBurger\":\"Navigation_buttonBurger__Kqo-y\",\"iconBurger\":\"Navigation_iconBurger__Y+5FL\",\"navMenu\":\"Navigation_navMenu__tyi6A\"};","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"UserMenu_userInfo__78zcg\",\"buttonOpen\":\"UserMenu_buttonOpen__XKE8P\",\"userAvatarWrap\":\"UserMenu_userAvatarWrap__8cND4\",\"userIcon\":\"UserMenu_userIcon__Wa0NS\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../../redux/modalSlice';\nimport css from './UserMenu.module.css';\nimport sprite from '../../images/sprite.svg';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user)\n  const handleUserModalOpen = () => {\n    dispatch(openModal({ content: 'edit-profile' }));\n  };\n\n  return (\n    <>\n      <div className={css.userInfo}>\n        <button\n          className={css.buttonOpen}\n          type=\"button\"\n          onClick={handleUserModalOpen}\n        >\n          {user.name}\n          <div className={css.userAvatarWrap}>\n            <svg className={css.userIcon}>\n              <use href={`${sprite}#icon-user2`} />\n            </svg>\n          </div>\n        </button>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"menuTheme\":\"ThemeSelect_menuTheme__syeY8\",\"iconChevronDown\":\"ThemeSelect_iconChevronDown__z0Zx0\",\"titleMenuTheme\":\"ThemeSelect_titleMenuTheme__kfQsY\",\"buttonMenu\":\"ThemeSelect_buttonMenu__M4R80\",\"menuList\":\"ThemeSelect_menuList__tMjNr\",\"menuItem\":\"ThemeSelect_menuItem__ZUuoU\",\"menuListHidden\":\"ThemeSelect_menuListHidden__TW9FY\"};","import css from './ThemeSelect.module.css'\nimport { useDispatch } from 'react-redux'\nimport { updaterUserTheme } from '../../redux/auth/authThunks'\n\nexport const ThemePopup = ({onSelectClose, isOpen}) =>{\n    const dispatch = useDispatch()\n\n    const handleChangeTheme = (e) =>{\n        console.log(e.target.id)\n        dispatch(updaterUserTheme({theme: `${e.target.id}`}))\n        onSelectClose()\n    }\n\n    return (\n            <ul  data-popup='menu' className={`${css.menuList} ${!isOpen && css.menuListHidden}`}>\n                <li onClick={handleChangeTheme}  data-popup='el' id='light' className={css.menuItem}>Light</li>\n                <li onClick={handleChangeTheme} data-popup='el' id=\"dark\" className={css.menuItem}>Dark</li>\n                <li onClick={handleChangeTheme} data-popup='el' id='violet' className={css.menuItem}>Violet</li>\n            </ul>\n    )\n}","import css from './ThemeSelect.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useState } from 'react';\nimport { ThemePopup } from './ThemePopup';\nimport { useEffect } from 'react';\n\n\nexport const ThemeSelect = () => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() =>{\n    if((isOpen)){\n      document.body.addEventListener('click', handlePopupClose)\n    }\n    return() => {\n      document.body.removeEventListener('click', handlePopupClose)\n    }\n  })\n\n  const handleOpenPopup = (e) =>{\n    if((e.target.popup === 'menu') || (e.target.popup === 'el')){\n      return\n    }\n    setIsOpen(prev => !prev)  \n  }\n\n  const handlePopupClose = (e) =>{\n    if((e.target.dataset.popup !== 'popupBtn') && (e.target.popup !== 'menu')  && (e.target.popup !== 'el')){\n      setIsOpen(prev => !prev)\n    }\n  }\n\n  const onSelectClose = () =>{\n    setIsOpen(prev => !prev)\n  }\n\n  return (\n    <div data-popup=\"popupBtn\" onClick={(e)=>handleOpenPopup(e)} className={css.menuTheme}>\n      <p data-popup=\"popupBtn\" className={css.titleMenuTheme}>Theme</p>\n      <button data-popup=\"popupBtn\" className={css.buttonMenu} type=\"button\">\n        <svg data-popup=\"popupBtn\"  className={css.iconChevronDown} width=\"16\" height=\"16\">\n          <use data-popup=\"popupBtn\"  href={`${sprite}#icon-chevron-down`} />\n        </svg>\n      </button>\n      <ThemePopup onSelectClose={onSelectClose} isOpen={isOpen}/>\n    </div>\n  );\n};\n","import css from './Navigation.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openSidebar } from '../../redux/modalSlice';\nimport { UserMenu } from '../UserMenu/UserMenu.jsx';\nimport { ThemeSelect } from '../ThemeSelect/ThemeSelect.jsx';\n\nexport const Navigation = () => {\n  const dispatch = useDispatch()\n  const { sideBarIsOpen } = useSelector(state => state.modal);\n\n  const openMenu =()=>{\n    dispatch(openSidebar())\n    console.log(sideBarIsOpen)\n    \n  }\n  return (\n    <div className={css.navContainer}>\n      <button className={css.buttonBurger} type=\"button\" onClick={openMenu}>\n        <svg className={css.iconBurger} width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-menu`} />\n        </svg>\n      </button>\n\n      <div className={css.navMenu}>\n        <ThemeSelect />\n        <UserMenu />\n      </div>\n    </div>\n  );\n};\n\n\n","import css from './HomePage.module.css';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ModalBody } from 'components/Modals/ModalBody';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DefaultBoard } from 'components/DefaultBoard/DefaultBoard';\nimport { Navigation } from 'components/Navigation/Navigation';\n\n\nconst HomePage = () => {\n  const { isOpen } = useSelector(state => state.modal);\n  const { theme } = useSelector(state => state.auth.user);\n  const location = useLocation();\n\n\n \n  return (\n    <div className={css.main} data-theme={theme}>\n      <Sidebar />\n      <div className={css.mainPage}>\n        <Navigation />\n        {location.pathname === '/home' && <DefaultBoard />}\n        {/* В outlet БУДЕ РЕНДЕРИТИСЯ БОРД */}\n        <Suspense fallback={<div>Loading....</div>}>\n          <Outlet />\n        </Suspense>\n        {isOpen && <ModalBody />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const selectBoards = state => state.boards.boards;\n\nexport const selectCurrentBoard = state => state.boards.currentBoard;\n\nexport const selectIsLoading = state => state.boards.isLoading;\n\nexport const selectError = state => state.boards.error;","var map = {\n\t\"./1.png\": 7919,\n\t\"./10.png\": 9983,\n\t\"./11.png\": 8438,\n\t\"./12.png\": 9645,\n\t\"./13.png\": 8516,\n\t\"./14.png\": 8427,\n\t\"./15.png\": 4274,\n\t\"./16.png\": 857,\n\t\"./2.png\": 1060,\n\t\"./3.png\": 4957,\n\t\"./4.png\": 98,\n\t\"./5.png\": 4923,\n\t\"./6.png\": 6592,\n\t\"./7.png\": 1065,\n\t\"./8.png\": 5198,\n\t\"./9.png\": 7687\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6679;"],"names":["NewBoardForm","dispatch","useDispatch","title","setTitle","useState","iconValue","setIconValue","bgValue","setBgValue","bgValues","i","push","_jsxs","className","css","formWrap","children","_jsx","formTitle","form","onSubmit","e","preventDefault","newBoard","name","icon","background","addBoard","target","reset","closeModal","onSubmitForm","htmlFor","autoComplete","placeholder","onChange","value","handleChange","formInput","type","required","iconsForm","iconsTitle","iconsWrap","map","ic","container","handleIconChange","id","checkmark","href","concat","sprite","bgIconsWrap","bg","bgContainer","handleBgChange","bgCheckmark","width","height","src","require","alt","formButton","iconWrap","buttonIcon","EditBoardForm","console","log","AddColumnForm","currentBoardId","useSelector","state","boards","postColumn","boardId","EditColumnForm","NeedHelpForm","email","setEmail","comment","setComment","handleEmailChange","handleCommentChange","commentInput","ImageInput","setFieldValue","useFormikContext","accept","hidden","async","_e$target$files","file","files","res","Promise","resolve","reader","FileReader","onload","result","readAsDataURL","schema","Yup","shape","avatar","test","includes","min","max","matches","password","UserForm","user","auth","passwordVisible","setPasswordVisible","handleClickPasswordVisibility","_Fragment","Formik","initialValues","avatarURL","validationSchema","Form","xlinkHref","Field","ErrorMessage","errorMsg","onClick","Calendar","_ref","selectedDate","onDateChange","DatePicker","calendarClassName","dayClassName","renderCustomHeader","_ref2","date","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","disabled","selected","dateFormat","minDate","Date","locale","enGB","weekStartsOn","Icon","fill","stroke","Icons","AddCardForm","description","setDescription","priority","setPriority","setSelectedDate","currBoardId","currColumnId","columns","currentColumnId","from","newCard","deadline","getTime","columnId","postCard","handleTitleChange","errMsg","rows","handleDescChange","color","pr","handlePriorityChange","style","backgroundColor","deadlineStyle","span","addButton","stylePlus","ModalBody","modalContent","modal","useLockBodyScroll","firstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","code","currentTarget","backdropClose","content","handleContent","Board","board","navigate","useNavigate","_id","setCurrentBoardId","closeSidebar","handleEditBoard","openModal","handleDelete","deleteBoard","Sidebar","selectBoards","listRef","useAutoAnimate","fetchBoards","sideBarIsOpen","handleCloseSidebar","sidebarBackdrop","sideBar","sideBarOpened","titleBox","iconBox","logoIconContainer","iconLogo","bordBox","bordTitle","buttonBox","buttonText","handleAddBoard","buttonCreate","iconCreate","length","bordList","ref","helpBox","helpTextBox","imgHelp","srcSet","pot","pot2x","helpText","helpTextLink","handleNeddHelp","buttonHelp","iconHelp","helpButtonText","handleLogout","logoutThunk","buttonLogOut","iconLogOut","logOutButtonText","DefaultBoard","UserMenu","handleUserModalOpen","ThemePopup","onSelectClose","isOpen","handleChangeTheme","updaterUserTheme","theme","ThemeSelect","setIsOpen","document","body","handlePopupClose","dataset","popup","prev","handleOpenPopup","Navigation","openMenu","openSidebar","HomePage","location","useLocation","pathname","Suspense","fallback","Outlet","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","module","exports"],"sourceRoot":""}