{"version":3,"file":"static/js/365.bb6b3ff3.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/components/ScreensPage/ScreensPage.module.css?d472","webpack://task-pro/./src/components/dashboard/HeaderDashboard/HeaderDashboard.module.css?4f8c","components/dashboard/Filters/Filters.jsx","components/dashboard/HeaderDashboard/HeaderDashboard.jsx","webpack://task-pro/./src/components/dashboard/MainDashboard/MainDashboard.module.css?9d01","webpack://task-pro/./src/components/Column/Column.module.css?790f","components/Column/Column.jsx","webpack://task-pro/./src/components/Card/Card.module.css?4f06","components/Card/Card.jsx","components/dashboard/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"screensWrap\":\"ScreensPage_screensWrap__KpiXB\"};","// extracted by mini-css-extract-plugin\nexport default {\"headDashWrap\":\"HeaderDashboard_headDashWrap__-gjPa\",\"dashboardName\":\"HeaderDashboard_dashboardName__GHex9\"};","const Filters = () => {\n  return (\n    <div>\n      <p>Filter</p>\n    </div>\n  );\n};\n\nexport default Filters;\n","import css from '../HeaderDashboard/HeaderDashboard.module.css';\nimport Filters from '../Filters/Filters';\n\nconst HeaderDashboard = ({ boardName }) => {\n  return (\n    <div className={css.headDashWrap}>\n      {/* <h2 className={css.dashboardName}>{boardName}</h2> */}\n      <h2 className={css.dashboardName}>Project office</h2>\n      <Filters />\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"boardWrap\":\"MainDashboard_boardWrap__2u1Ba\",\"columnsList\":\"MainDashboard_columnsList__iP56w\",\"addColumnBtn\":\"MainDashboard_addColumnBtn__6+fG2\",\"addColumnWrap\":\"MainDashboard_addColumnWrap__j-UdJ\",\"addColumnIcon\":\"MainDashboard_addColumnIcon__qVRIe\",\"addColumnTitle\":\"MainDashboard_addColumnTitle__VFj8z\"};","// extracted by mini-css-extract-plugin\nexport default {\"columnWrap\":\"Column_columnWrap__G3hGv\",\"columnTitleWrap\":\"Column_columnTitleWrap__r2jmr\",\"columnTitle\":\"Column_columnTitle__JxUiI\",\"columnList\":\"Column_columnList__04PMN\"};","import css from './Column.module.css'\n\nexport const Column = ({children, column}) =>{\n    return (\n    <li className={css.columnWrap}>\n        <div>\n            <div className={css.columnTitleWrap}>\n                <h2 className={css.columnTitle}>{column.title}</h2>\n                <div>\n                    <button>edit</button>\n                    <button>delete</button>\n                </div>\n            </div>\n            <ul className={css.columnList}>\n                {children}\n            </ul>\n        </div>\n        <button className={css.columnButton}>Add Card</button>\n    </li>)\n}","// extracted by mini-css-extract-plugin\nexport default {\"cardHeight\":\"Card_cardHeight__tSm4h\",\"cardWrapper\":\"Card_cardWrapper__TvahP\",\"cardContainer\":\"Card_cardContainer__aSrje\",\"cardTitle\":\"Card_cardTitle__4G9aB\",\"cardDiscription\":\"Card_cardDiscription__y7esn\",\"cardFooterWrapper\":\"Card_cardFooterWrapper__lWLCd\",\"cardFooter\":\"Card_cardFooter__bN4q3\",\"cardFooterTitle\":\"Card_cardFooterTitle__EwDak\",\"cardPriorityInfo\":\"Card_cardPriorityInfo__OS-yk\",\"cardPriorityCircle\":\"Card_cardPriorityCircle__Ah0Z+\",\"cardPriorityName\":\"Card_cardPriorityName__PBWEl\",\"cardDeadlineDate\":\"Card_cardDeadlineDate__72wFp\",\"cardIconsList\":\"Card_cardIconsList__ZGvEC\",\"cardIconItem\":\"Card_cardIconItem__8AccS\",\"cardSvg\":\"Card_cardSvg__iWUIX\",\"cardPriorityWithout\":\"Card_cardPriorityWithout__LC9ff\",\"cardPriorityLow\":\"Card_cardPriorityLow__43uB+\",\"cardPriorityMedium\":\"Card_cardPriorityMedium__MZf2M\",\"cardPriorityHigh\":\"Card_cardPriorityHigh__RLipO\"};","\nimport css from './Card.module.css';\nimport sprite from '../../images/sprite.svg';\n\n\nexport const Card = ({card}) =>{\n    //Логіка: Дані передаються в компонент з отриманого з бекенду юзера в тому числі додаткові класи; дзвіночок створюється за умови якщо сьогоднішня дата на 1 більша за дату дедлайну; додати функції при кліку на іконки \n    return (\n        <div className={css.cardHeight}>\n            <div className={`${css.cardWrapper} ${css.cardPriorityHigh}`}>\n                <div className= {css.cardContainer}>\n                    <h4 className={css.cardTitle}>{card.title}</h4>\n                    <p className={css.cardDiscription}>Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.</p>\n                    <div className={css.cardFooterWrapper}>\n                        <div className={css.cardFooter}>\n                            <div className={css.cardPriority}>\n                                <h5 className={css.cardFooterTitle}>Priority</h5>\n                                <div className={css.cardPriorityInfo}>\n                                    <div className={`${css.cardPriorityCircle} ${css.cardPriorityHigh}`}></div>\n                                    <p className={css.cardPriorityName}>low</p>\n                                </div>\n                            </div>\n                            <div className={css.cardDeadline}>\n                                <h5 className={css.cardFooterTitle}>Deadline</h5>\n                                <p className={css.cardDeadlineDate}>12/02/2023</p>\n                            </div>\n                            <ul className={css.cardIconsList}>\n                                <li className={css.cardIconItem}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-bell`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem} >\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-arrow-in-circle`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-pencil`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-trash`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n    </div>\n)}","import css from './MainDashboard.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { Column } from 'components/Column/Column';\nimport { Card } from 'components/Card/Card';\n\n\nconst MainDashboard = () => {\n  const columns = [{id: 1, title: \"colum1 A\",boardId: '1'},{id: 2, title: \"colum1 B\",boardId: '1'},{id:3,title: \"colum1 C\",boardId: '1'}]\n  const cards = [{\n        id: 1,\n        title: \"card 1\",\n        boardId: 1,\n        columnId: 1,\n    },{\n        id: 2,\n        title: \"card2\",\n        boardId: 1,\n        columnId: 1\n    },{\n        id: 3,\n        title: \"card3\",\n        boardId: 1,\n        columnId: 2\n    },\n    {\n        id: 4,\n        title: \"card4\",\n        boardId: 1,\n        columnId: 2\n    },\n    {\n        id: 5,\n        title: \"card5\",\n        boardId: 1,\n        columnId: 3\n    },\n    {\n      id: 6,\n      title: \"card5\",\n      boardId: 1,\n      columnId: 1\n    },\n    {\n      id: 7,\n      title: \"card5\",\n      boardId: 1,\n      columnId: 1\n      },\n    {\n      id: 8,\n      title: \"card5\",\n      boardId: 1,\n      columnId: 1\n    },\n    {\n      id: 9,\n      title: \"card5\",\n      boardId: 1,\n      columnId: 1\n    }]\n\n  return (\n    <div className={css.boardWrap}>\n      <ul className={css.columnsList}>\n        {columns.map(col => {\n          return (\n            <Column key={col.id} column={col}>\n              {cards.filter(card => card.columnId === col.id).map(card => {\n                        return (<Card key={card.id} card={card}/>)\n                    })}\n            </Column>\n        )})}\n        <button className={css.addColumnBtn}>\n        <div className={css.addColumnWrap}>\n          <svg className={css.addColumnIcon}>\n            <use href={`${sprite}#icon-plus`}></use>\n          </svg>\n          <p className={css.addColumnTitle}>Add another column</p>\n        </div>\n      </button>\n      </ul>\n      \n    </div>\n  );\n};\n\nexport default MainDashboard;\n","import css from './ScreensPage.module.css';\n\nimport HeaderDashboard from '../dashboard/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from '../dashboard/MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n  return (\n    <div className={css.screensWrap}>\n        <HeaderDashboard />\n        <MainDashboard />\n    </div>\n  );\n};\n\nexport default ScreensPage;\n\n// import css from './ScreensPage.module.css';\n\n// import { useLocation, useNavigate, useParams } from 'react-router-dom';\n// import { useEffect, useRef, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import HeaderDashboard from '../HeaderDashboard/HeaderDashboard';\n// import MainDashboard from '../MainDashboard/MainDashboard';\n\n// import { selectAllDashboards } from '../../redux/dashboard/dashboardsSelectors';\n\n// const ScreensPage = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [currentPageName, setCurrentPageName] = useState('');\n//   const didMount = useRef(true);\n//   const { boardName } = useParams();\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const allDashboards = useSelector(selectAllDashboards);\n//   const dispatch = useDispatch();\n//   const [boards, setBoards] = useState(allDashboards);\n\n//   const lookBoard = () => {\n//     const all = allDashboards.filter(dashboard => {\n//       return dashboard.title === boardName;\n//     });\n\n//     return all;\n//   };\n\n//   useEffect(() => {\n//     setCurrentPageName(boardName);\n//   }, [location.pathname, boardName]);\n\n//   useEffect(() => {\n//     setBoards(allDashboards);\n//     if (didMount.current !== true && boardName !== currentPageName) {\n//       return;\n//     }\n//     if (allDashboards.length === 0) {\n//       navigate(`/home`, {\n//         replace: true,\n//       });\n//     }\n//     if (allDashboards.length > 0 && !boardName) {\n//       setLoading(true);\n//       const lastDashboard = allDashboards[allDashboards.length - 1] ?? '';\n//       setCurrentPageName(lastDashboard.title);\n//       navigate(`/home/${lastDashboard.title}`, {\n//         replace: true,\n//         state: { id: lastDashboard._id },\n//       });\n//       setLoading(false);\n//     }\n//     didMount.current = false;\n//   }, [\n//     allDashboards,\n//     navigate,\n//     boardName,\n//     currentPageName,\n//     boards.length,\n//     dispatch,\n//   ]);\n\n//   return (\n//     <div\n//       className={css.test}\n//       $bcgurl={\n//         lookBoard().length > 0 ? lookBoard()[0].backgroundURL : undefined\n//       }\n//     >\n//       {loading ? (\n//         <div>Loading....</div>\n//       ) : (\n//         boardName !== undefined && (\n//           <div>\n//             <HeaderDashboard boardName={boardName} />\n//             <MainDashboard />\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ScreensPage;\n"],"names":["Filters","_jsx","children","_ref","boardName","_jsxs","className","css","Column","column","columnWrap","columnTitleWrap","columnTitle","title","columnList","columnButton","Card","card","cardHeight","concat","cardWrapper","cardPriorityHigh","cardContainer","cardTitle","cardDiscription","cardFooterWrapper","cardFooter","cardPriority","cardFooterTitle","cardPriorityInfo","cardPriorityCircle","cardPriorityName","cardDeadline","cardDeadlineDate","cardIconsList","cardIconItem","type","cardIconButton","cardSvg","href","sprite","MainDashboard","cards","id","boardId","columnId","map","col","filter","ScreensPage","HeaderDashboard"],"sourceRoot":""}