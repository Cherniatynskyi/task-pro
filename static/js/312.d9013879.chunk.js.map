{"version":3,"file":"static/js/312.d9013879.chunk.js","mappings":"iIACA,QAA8B,iCCA9B,EAA+B,sCAA/B,EAAqF,uCCArF,EAA+B,8BAA/B,EAA0E,4B,2CCI1E,MAmBA,EAnBgBA,KACd,MAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,UAAQC,QANaC,KACvBP,GAASQ,EAAAA,EAAAA,IAAU,CAAEC,QAAS,YAAa,EAKNC,UAAWC,EAAiBP,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAeP,UAC7BF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oBAChB,cAGP,ECPP,EAVwBC,IAAoB,IAAnB,UAAEC,GAAWD,EACpC,OACEV,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAiBP,SAAA,EAE/BF,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAkBP,SAAC,oBAClCF,EAAAA,EAAAA,KAACH,EAAO,MACJ,ECRV,EAA4B,iCAA5B,EAA2E,mCAA3E,EAA6H,oCAA7H,EAAiL,qCAAjL,EAAsO,qCAAtO,EAA4R,sCCA5R,EAA6B,2BAA7B,EAA0E,gCAA1E,EAAwH,4BAAxH,EAAoK,8BAApK,EAAiN,6BAAjN,EAAiQ,iCAAjQ,EAAoT,gCAApT,EAAiW,2BAAjW,EAA8Y,gCAA9Y,EAA8b,8BAA9b,EAA6e,+BCIhekB,EAASF,IAA2B,IAA1B,SAAEX,EAAQ,OAAEc,GAAQH,EACzC,MAAMf,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAeP,UAC5BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAoBP,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAgBP,SAAEc,EAAOC,SACxCd,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAkBP,SAAA,EAChCF,EAAAA,EAAAA,KAAA,UAAQQ,UAAWC,EAAiBP,UAClCF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAqBP,UACnCF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,uBAGxBZ,EAAAA,EAAAA,KAAA,UAAQQ,UAAWC,EAAiBP,UAClCF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAoBP,UAClCF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,4BAK5BZ,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAeP,SAAEA,KAEhCC,EAAAA,EAAAA,MAAA,UAAQC,QAxBQc,KACpBpB,GAASQ,EAAAA,EAAAA,IAAU,CAAEC,QAAS,aAAc,EAuBRC,UAAWC,EAAoBP,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAkBP,UAChCF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,mBAEtBZ,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAmBP,SAAC,oBAGnC,ECtCT,GAAgB,WAAa,yBAAyB,YAAc,0BAA0B,cAAgB,4BAA4B,UAAY,wBAAwB,gBAAkB,8BAA8B,kBAAoB,gCAAgC,WAAa,yBAAyB,gBAAkB,8BAA8B,iBAAmB,+BAA+B,mBAAqB,iCAAiC,iBAAmB,+BAA+B,iBAAmB,+BAA+B,cAAgB,4BAA4B,aAAe,2BAA2B,eAAiB,6BAA6B,QAAU,sBAAsB,oBAAsB,kCAAkC,gBAAkB,8BAA8B,mBAAqB,iCAAiC,iBAAmB,gCCI53BiB,EAAOA,KAGZnB,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAIW,WAAWlB,UAC3BF,EAAAA,EAAAA,KAAA,OAAKQ,UAAS,GAAAG,OAAKF,EAAIY,YAAW,KAAAV,OAAIF,EAAIa,kBAAmBpB,UACzDC,EAAAA,EAAAA,MAAA,OAAKK,UAAYC,EAAIc,cAAcrB,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAIe,UAAUtB,SAAC,WAC9BF,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAIgB,gBAAgBvB,SAAC,6OACnCF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAIiB,kBAAkBxB,UAClCC,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAIkB,WAAWzB,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAImB,aAAa1B,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAIoB,gBAAgB3B,SAAC,cACpCC,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAIqB,iBAAiB5B,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OAAKQ,UAAS,GAAAG,OAAKF,EAAIsB,mBAAkB,KAAApB,OAAIF,EAAIa,qBACjDtB,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAIuB,iBAAiB9B,SAAC,eAG5CC,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAIwB,aAAa/B,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAIoB,gBAAgB3B,SAAC,cACpCF,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAIyB,iBAAiBhC,SAAC,mBAExCC,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAI0B,cAAcjC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAI2B,aAAalC,UAC5BF,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAAS7B,UAAWC,EAAI6B,eAAepC,UACpDF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAI8B,QAAQrC,UACxBF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,uBAI5BZ,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAI2B,aAAalC,UAC5BF,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAAS7B,UAAWC,EAAI6B,eAAepC,UACpDF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAI8B,QAAQrC,UACxBF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kCAI5BZ,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAI2B,aAAalC,UAC5BF,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAAS7B,UAAWC,EAAI6B,eAAepC,UACpDF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAI8B,QAAQrC,UACxBF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,yBAI5BZ,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAI2B,aAAalC,UAC5BF,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAAS7B,UAAWC,EAAI6B,eAAepC,UACpDF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAI8B,QAAQrC,UACxBF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,sCCoD5D,EAhGsB4B,KACpB,MAAM1C,GAAWC,EAAAA,EAAAA,MAWX0C,EAAQ,CACZ,CACEC,GAAI,EACJzB,MAAO,SACP0B,QAAS,EACTC,SAAU,GAEZ,CACEF,GAAI,EACJzB,MAAO,QACP0B,QAAS,EACTC,SAAU,GAEZ,CACEF,GAAI,EACJzB,MAAO,QACP0B,QAAS,EACTC,SAAU,GAEZ,CACEF,GAAI,EACJzB,MAAO,QACP0B,QAAS,EACTC,SAAU,GAEZ,CACEF,GAAI,EACJzB,MAAO,QACP0B,QAAS,EACTC,SAAU,GAEZ,CACEF,GAAI,EACJzB,MAAO,QACP0B,QAAS,EACTC,SAAU,GAEZ,CACEF,GAAI,EACJzB,MAAO,QACP0B,QAAS,EACTC,SAAU,GAEZ,CACEF,GAAI,EACJzB,MAAO,QACP0B,QAAS,EACTC,SAAU,GAEZ,CACEF,GAAI,EACJzB,MAAO,QACP0B,QAAS,EACTC,SAAU,IAId,OACE5C,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAcP,UAC5BC,EAAAA,EAAAA,MAAA,MAAIK,UAAWC,EAAgBP,SAAA,CAhEnB,CACd,CAAEwC,GAAI,EAAGzB,MAAO,WAAY0B,QAAS,KACrC,CAAED,GAAI,EAAGzB,MAAO,WAAY0B,QAAS,KACrC,CAAED,GAAI,EAAGzB,MAAO,WAAY0B,QAAS,MA8DxBE,KAAIC,IAET9C,EAAAA,EAAAA,KAACe,EAAM,CAAcC,OAAQ8B,EAAI5C,SAC9BuC,EACEM,QAAOC,GAAQA,EAAKJ,WAAaE,EAAIJ,KACrCG,KAAIG,IACIhD,EAAAA,EAAAA,KAACmB,EAAI,CAAe6B,KAAMA,GAAfA,EAAKN,OAJhBI,EAAIJ,OASrB1C,EAAAA,EAAAA,KAAA,UAAQI,QAhFU6C,KACtBnD,GAASQ,EAAAA,EAAAA,IAAU,CAAEC,QAAS,eAAgB,EA+ERC,UAAWC,EAAiBP,UAC5DC,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAkBP,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKQ,UAAWC,EAAkBP,UAChCF,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,mBAEtBZ,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAmBP,SAAC,gCAIpC,ECrFV,EAToBgD,KAEhB/C,EAAAA,EAAAA,MAAA,OAAKK,UAAWC,EAAgBP,SAAA,EAC5BF,EAAAA,EAAAA,KAACmD,EAAe,KAChBnD,EAAAA,EAAAA,KAACwC,EAAa,M","sources":["webpack://task-pro/./src/components/ScreensPage/ScreensPage.module.css?d472","webpack://task-pro/./src/components/dashboard/HeaderDashboard/HeaderDashboard.module.css?4f8c","webpack://task-pro/./src/components/dashboard/Filters/Filters.module.css?4d8b","components/dashboard/Filters/Filters.jsx","components/dashboard/HeaderDashboard/HeaderDashboard.jsx","webpack://task-pro/./src/components/dashboard/MainDashboard/MainDashboard.module.css?9d01","webpack://task-pro/./src/components/Column/Column.module.css?790f","components/Column/Column.jsx","webpack://task-pro/./src/components/Card/Card.module.css?4f06","components/Card/Card.jsx","components/dashboard/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"screensWrap\":\"ScreensPage_screensWrap__KpiXB\"};","// extracted by mini-css-extract-plugin\nexport default {\"headDashWrap\":\"HeaderDashboard_headDashWrap__-gjPa\",\"dashboardName\":\"HeaderDashboard_dashboardName__GHex9\"};","// extracted by mini-css-extract-plugin\nexport default {\"filterButton\":\"Filters_filterButton__ZOUmh\",\"filterIcon\":\"Filters_filterIcon__yhbRW\"};","import css from './Filters.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { openModal } from '../../../redux/modalSlice';\n\nconst Filters = () => {\n  const dispatch = useDispatch();\n\n  const handleOpenFilter = () => {\n    dispatch(openModal({ content: 'filters' }));\n  };\n\n  return (\n    <>\n      <button onClick={handleOpenFilter} className={css.filterButton}>\n        <svg className={css.filterIcon}>\n          <use href={`${sprite}#icon-filter`} />\n        </svg>\n        Filters\n      </button>\n    </>\n  );\n};\n\nexport default Filters;\n","import css from '../HeaderDashboard/HeaderDashboard.module.css';\nimport Filters from '../Filters/Filters';\n\nconst HeaderDashboard = ({ boardName }) => {\n  return (\n    <div className={css.headDashWrap}>\n      {/* <h2 className={css.dashboardName}>{boardName}</h2> */}\n      <h2 className={css.dashboardName}>Project office</h2>\n      <Filters />\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"boardWrap\":\"MainDashboard_boardWrap__2u1Ba\",\"columnsList\":\"MainDashboard_columnsList__iP56w\",\"addColumnBtn\":\"MainDashboard_addColumnBtn__6+fG2\",\"addColumnWrap\":\"MainDashboard_addColumnWrap__j-UdJ\",\"addColumnIcon\":\"MainDashboard_addColumnIcon__qVRIe\",\"addColumnTitle\":\"MainDashboard_addColumnTitle__VFj8z\"};","// extracted by mini-css-extract-plugin\nexport default {\"columnWrap\":\"Column_columnWrap__G3hGv\",\"columnTitleWrap\":\"Column_columnTitleWrap__r2jmr\",\"columnTitle\":\"Column_columnTitle__JxUiI\",\"columnBtnWrap\":\"Column_columnBtnWrap__t2MEK\",\"columnButton\":\"Column_columnButton__qAW6n\",\"columnIconPensil\":\"Column_columnIconPensil__fXczJ\",\"columnIconTrash\":\"Column_columnIconTrash__HHjTW\",\"columnList\":\"Column_columnList__04PMN\",\"columnAddButton\":\"Column_columnAddButton__0dcN0\",\"addColumnIcon\":\"Column_addColumnIcon__txMZ3\",\"addColumnTitle\":\"Column_addColumnTitle__mJxvp\"};","import css from './Column.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { openModal } from '../../redux/modalSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Column = ({ children, column }) => {\n  const dispatch = useDispatch();\n\n  const handleAddCard = () => {\n    dispatch(openModal({ content: 'add-card' }));\n  };\n\n  return (\n    <li className={css.columnWrap}>\n      <div>\n        <div className={css.columnTitleWrap}>\n          <h2 className={css.columnTitle}>{column.title}</h2>\n          <div className={css.columnBtnWrap}>\n            <button className={css.columnButton}>\n              <svg className={css.columnIconPensil}>\n                <use href={`${sprite}#icon-pencil`}></use>\n              </svg>\n            </button>\n            <button className={css.columnButton}>\n              <svg className={css.columnIconTrash}>\n                <use href={`${sprite}#icon-trash`}></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n        <ul className={css.columnList}>{children}</ul>\n\n        <button onClick={handleAddCard} className={css.columnAddButton}>\n          <svg className={css.addColumnIcon}>\n            <use href={`${sprite}#icon-plus`}></use>\n          </svg>\n          <p className={css.addColumnTitle}>Add Card</p>\n        </button>\n      </div>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cardHeight\":\"Card_cardHeight__tSm4h\",\"cardWrapper\":\"Card_cardWrapper__TvahP\",\"cardContainer\":\"Card_cardContainer__aSrje\",\"cardTitle\":\"Card_cardTitle__4G9aB\",\"cardDiscription\":\"Card_cardDiscription__y7esn\",\"cardFooterWrapper\":\"Card_cardFooterWrapper__lWLCd\",\"cardFooter\":\"Card_cardFooter__bN4q3\",\"cardFooterTitle\":\"Card_cardFooterTitle__EwDak\",\"cardPriorityInfo\":\"Card_cardPriorityInfo__OS-yk\",\"cardPriorityCircle\":\"Card_cardPriorityCircle__Ah0Z+\",\"cardPriorityName\":\"Card_cardPriorityName__PBWEl\",\"cardDeadlineDate\":\"Card_cardDeadlineDate__72wFp\",\"cardIconsList\":\"Card_cardIconsList__ZGvEC\",\"cardIconItem\":\"Card_cardIconItem__8AccS\",\"cardIconButton\":\"Card_cardIconButton__s4c7h\",\"cardSvg\":\"Card_cardSvg__iWUIX\",\"cardPriorityWithout\":\"Card_cardPriorityWithout__LC9ff\",\"cardPriorityLow\":\"Card_cardPriorityLow__43uB+\",\"cardPriorityMedium\":\"Card_cardPriorityMedium__MZf2M\",\"cardPriorityHigh\":\"Card_cardPriorityHigh__RLipO\"};","\nimport css from './Card.module.css';\nimport sprite from '../../images/sprite.svg';\n\n\nexport const Card = () =>{\n    //Логіка: Дані передаються в компонент з отриманого з бекенду юзера в тому числі додаткові класи; дзвіночок створюється за умови якщо сьогоднішня дата на 1 більша за дату дедлайну; додати функції при кліку на іконки \n    return (\n        <div className={css.cardHeight}>\n            <div className={`${css.cardWrapper} ${css.cardPriorityHigh}`}>\n                <div className= {css.cardContainer}>\n                    <h4 className={css.cardTitle}>Title</h4>\n                    <p className={css.cardDiscription}>Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.</p>\n                    <div className={css.cardFooterWrapper}>\n                        <div className={css.cardFooter}>\n                            <div className={css.cardPriority}>\n                                <h5 className={css.cardFooterTitle}>Priority</h5>\n                                <div className={css.cardPriorityInfo}>\n                                    <div className={`${css.cardPriorityCircle} ${css.cardPriorityHigh}`}></div>\n                                    <p className={css.cardPriorityName}>low</p>\n                                </div>\n                            </div>\n                            <div className={css.cardDeadline}>\n                                <h5 className={css.cardFooterTitle}>Deadline</h5>\n                                <p className={css.cardDeadlineDate}>12/02/2023</p>\n                            </div>\n                            <ul className={css.cardIconsList}>\n                                <li className={css.cardIconItem}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-bell`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem} >\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-arrow-in-circle`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-pencil`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-trash`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n    </div>\n)}","import css from './MainDashboard.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { Column } from 'components/Column/Column';\nimport { Card } from 'components/Card/Card';\nimport { openModal } from '../../../redux/modalSlice';\nimport { useDispatch } from 'react-redux';\n\nconst MainDashboard = () => {\n  const dispatch = useDispatch();\n\n  const handleAddColumn = () => {\n    dispatch(openModal({ content: 'add-column' }));\n  };\n\n  const columns = [\n    { id: 1, title: 'colum1 A', boardId: '1' },\n    { id: 2, title: 'colum1 B', boardId: '1' },\n    { id: 3, title: 'colum1 C', boardId: '1' },\n  ];\n  const cards = [\n    {\n      id: 1,\n      title: 'card 1',\n      boardId: 1,\n      columnId: 1,\n    },\n    {\n      id: 2,\n      title: 'card2',\n      boardId: 1,\n      columnId: 1,\n    },\n    {\n      id: 3,\n      title: 'card3',\n      boardId: 1,\n      columnId: 2,\n    },\n    {\n      id: 4,\n      title: 'card4',\n      boardId: 1,\n      columnId: 2,\n    },\n    {\n      id: 5,\n      title: 'card5',\n      boardId: 1,\n      columnId: 2,\n    },\n    {\n      id: 6,\n      title: 'card5',\n      boardId: 1,\n      columnId: 1,\n    },\n    {\n      id: 7,\n      title: 'card5',\n      boardId: 1,\n      columnId: 1,\n    },\n    {\n      id: 8,\n      title: 'card5',\n      boardId: 1,\n      columnId: 1,\n    },\n    {\n      id: 9,\n      title: 'card5',\n      boardId: 1,\n      columnId: 1,\n    },\n  ];\n\n  return (\n    <div className={css.boardWrap}>\n      <ul className={css.columnsList}>\n        {columns.map(col => {\n          return (\n            <Column key={col.id} column={col}>\n              {cards\n                .filter(card => card.columnId === col.id)\n                .map(card => {\n                  return <Card key={card.id} card={card} />;\n                })}\n            </Column>\n          );\n        })}\n        <button onClick={handleAddColumn} className={css.addColumnBtn}>\n          <div className={css.addColumnWrap}>\n            <svg className={css.addColumnIcon}>\n              <use href={`${sprite}#icon-plus`}></use>\n            </svg>\n            <p className={css.addColumnTitle}>Add another column</p>\n          </div>\n        </button>\n      </ul>\n    </div>\n  );\n};\n\nexport default MainDashboard;\n","import css from './ScreensPage.module.css';\n\nimport HeaderDashboard from '../dashboard/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from '../dashboard/MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n  return (\n    <div className={css.screensWrap}>\n        <HeaderDashboard />\n        <MainDashboard />\n    </div>\n  );\n};\n\nexport default ScreensPage;\n\n// import css from './ScreensPage.module.css';\n\n// import { useLocation, useNavigate, useParams } from 'react-router-dom';\n// import { useEffect, useRef, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import HeaderDashboard from '../HeaderDashboard/HeaderDashboard';\n// import MainDashboard from '../MainDashboard/MainDashboard';\n\n// import { selectAllDashboards } from '../../redux/dashboard/dashboardsSelectors';\n\n// const ScreensPage = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [currentPageName, setCurrentPageName] = useState('');\n//   const didMount = useRef(true);\n//   const { boardName } = useParams();\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const allDashboards = useSelector(selectAllDashboards);\n//   const dispatch = useDispatch();\n//   const [boards, setBoards] = useState(allDashboards);\n\n//   const lookBoard = () => {\n//     const all = allDashboards.filter(dashboard => {\n//       return dashboard.title === boardName;\n//     });\n\n//     return all;\n//   };\n\n//   useEffect(() => {\n//     setCurrentPageName(boardName);\n//   }, [location.pathname, boardName]);\n\n//   useEffect(() => {\n//     setBoards(allDashboards);\n//     if (didMount.current !== true && boardName !== currentPageName) {\n//       return;\n//     }\n//     if (allDashboards.length === 0) {\n//       navigate(`/home`, {\n//         replace: true,\n//       });\n//     }\n//     if (allDashboards.length > 0 && !boardName) {\n//       setLoading(true);\n//       const lastDashboard = allDashboards[allDashboards.length - 1] ?? '';\n//       setCurrentPageName(lastDashboard.title);\n//       navigate(`/home/${lastDashboard.title}`, {\n//         replace: true,\n//         state: { id: lastDashboard._id },\n//       });\n//       setLoading(false);\n//     }\n//     didMount.current = false;\n//   }, [\n//     allDashboards,\n//     navigate,\n//     boardName,\n//     currentPageName,\n//     boards.length,\n//     dispatch,\n//   ]);\n\n//   return (\n//     <div\n//       className={css.test}\n//       $bcgurl={\n//         lookBoard().length > 0 ? lookBoard()[0].backgroundURL : undefined\n//       }\n//     >\n//       {loading ? (\n//         <div>Loading....</div>\n//       ) : (\n//         boardName !== undefined && (\n//           <div>\n//             <HeaderDashboard boardName={boardName} />\n//             <MainDashboard />\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ScreensPage;\n"],"names":["Filters","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","onClick","handleOpenFilter","openModal","content","className","css","href","concat","sprite","_ref","boardName","Column","column","title","handleAddCard","Card","cardHeight","cardWrapper","cardPriorityHigh","cardContainer","cardTitle","cardDiscription","cardFooterWrapper","cardFooter","cardPriority","cardFooterTitle","cardPriorityInfo","cardPriorityCircle","cardPriorityName","cardDeadline","cardDeadlineDate","cardIconsList","cardIconItem","type","cardIconButton","cardSvg","MainDashboard","cards","id","boardId","columnId","map","col","filter","card","handleAddColumn","ScreensPage","HeaderDashboard"],"sourceRoot":""}