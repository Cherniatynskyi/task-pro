{"version":3,"file":"static/js/395.dc651938.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/pages/HomePage/HomePage.module.css?5baa","../node_modules/@uidotdev/usehooks/index.js","webpack://task-pro/./src/components/Modals/ModalBody.module.css?f007","components/Modals/Test.jsx","components/Modals/ModalBody.jsx","webpack://task-pro/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://task-pro/./src/components/Sidebar/Board/Board.module.css?228b","components/Sidebar/Board/Board.jsx","components/Sidebar/Sidebar.jsx","webpack://task-pro/./src/components/DefaultBoard/DefaultBoard.module.css?a9e5","components/DefaultBoard/DefaultBoard.jsx","webpack://task-pro/./src/components/Navigation/Navigation.module.css?4bf2","components/UserMenu/UserMenu.module.css","components/UserMenu/UserMenu.jsx","webpack://task-pro/./src/components/ThemeSelect/ThemeSelect.module.css?c8b0","components/ThemeSelect/ThemeSelect.jsx","components/Navigation/Navigation.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"HomePage_main__OiWfi\",\"mainPage\":\"HomePage_mainPage__BoNlQ\"};","import * as React from \"react\";\n\nfunction isShallowEqual(object1, object2) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (let key of keys1) {\n    if (object1[key] !== object2[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isTouchEvent({ nativeEvent }) {\n  return window.TouchEvent\n    ? nativeEvent instanceof TouchEvent\n    : \"touches\" in nativeEvent;\n}\n\nfunction isMouseEvent(event) {\n  return event.nativeEvent instanceof MouseEvent;\n}\n\nfunction throttle(cb, ms) {\n  let lastTime = 0;\n  return () => {\n    const now = Date.now();\n    if (now - lastTime >= ms) {\n      cb();\n      lastTime = now;\n    }\n  };\n}\n\nfunction isPlainObject(value) {\n  return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n\nfunction dispatchStorageEvent(key, newValue) {\n  window.dispatchEvent(new StorageEvent(\"storage\", { key, newValue }));\n}\n\nexport function useBattery() {\n  const [state, setState] = React.useState({\n    supported: true,\n    loading: true,\n    level: null,\n    charging: null,\n    chargingTime: null,\n    dischargingTime: null,\n  });\n\n  React.useEffect(() => {\n    if (!navigator.getBattery) {\n      setState((s) => ({\n        ...s,\n        supported: false,\n        loading: false,\n      }));\n      return;\n    }\n\n    let battery = null;\n\n    const handleChange = () => {\n      setState({\n        supported: true,\n        loading: false,\n        level: battery.level,\n        charging: battery.charging,\n        chargingTime: battery.chargingTime,\n        dischargingTime: battery.dischargingTime,\n      });\n    };\n\n    navigator.getBattery().then((b) => {\n      battery = b;\n      handleChange();\n\n      b.addEventListener(\"levelchange\", handleChange);\n      b.addEventListener(\"chargingchange\", handleChange);\n      b.addEventListener(\"chargingtimechange\", handleChange);\n      b.addEventListener(\"dischargingtimechange\", handleChange);\n    });\n\n    return () => {\n      if (battery) {\n        battery.removeEventListener(\"levelchange\", handleChange);\n        battery.removeEventListener(\"chargingchange\", handleChange);\n        battery.removeEventListener(\"chargingtimechange\", handleChange);\n        battery.removeEventListener(\"dischargingtimechange\", handleChange);\n      }\n    };\n  }, []);\n\n  return state;\n}\n\nexport function useClickAway(cb) {\n  const ref = React.useRef(null);\n  const refCb = React.useRef(cb);\n\n  React.useLayoutEffect(() => {\n    refCb.current = cb;\n  });\n\n  React.useEffect(() => {\n    const handler = (e) => {\n      const element = ref.current;\n      if (element && !element.contains(e.target)) {\n        refCb.current(e);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handler);\n    document.addEventListener(\"touchstart\", handler);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handler);\n      document.removeEventListener(\"touchstart\", handler);\n    };\n  }, []);\n\n  return ref;\n}\n\nfunction oldSchoolCopy(text) {\n  const tempTextArea = document.createElement(\"textarea\");\n  tempTextArea.value = text;\n  document.body.appendChild(tempTextArea);\n  tempTextArea.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(tempTextArea);\n}\n\nexport function useCopyToClipboard() {\n  const [state, setState] = React.useState(null);\n\n  const copyToClipboard = React.useCallback((value) => {\n    const handleCopy = async () => {\n      try {\n        if (navigator?.clipboard?.writeText) {\n          await navigator.clipboard.writeText(value);\n          setState(value);\n        } else {\n          throw new Error(\"writeText not supported\");\n        }\n      } catch (e) {\n        oldSchoolCopy(value);\n        setState(value);\n      }\n    };\n\n    handleCopy();\n  }, []);\n\n  return [state, copyToClipboard];\n}\n\nexport function useCounter(startingValue = 0, options = {}) {\n  const { min, max } = options;\n\n  if (typeof min === \"number\" && startingValue < min) {\n    throw new Error(\n      `Your starting value of ${startingValue} is less than your min of ${min}.`\n    );\n  }\n\n  if (typeof max === \"number\" && startingValue > max) {\n    throw new Error(\n      `Your starting value of ${startingValue} is greater than your max of ${max}.`\n    );\n  }\n\n  const [count, setCount] = React.useState(startingValue);\n\n  const increment = React.useCallback(() => {\n    setCount((c) => {\n      const nextCount = c + 1;\n\n      if (typeof max === \"number\" && nextCount > max) {\n        return c;\n      }\n\n      return nextCount;\n    });\n  }, [max]);\n\n  const decrement = React.useCallback(() => {\n    setCount((c) => {\n      const nextCount = c - 1;\n\n      if (typeof min === \"number\" && nextCount < min) {\n        return c;\n      }\n\n      return nextCount;\n    });\n  }, [min]);\n\n  const set = React.useCallback(\n    (nextCount) => {\n      setCount((c) => {\n        if (typeof max === \"number\" && nextCount > max) {\n          return c;\n        }\n\n        if (typeof min === \"number\" && nextCount < min) {\n          return c;\n        }\n\n        return nextCount;\n      });\n    },\n    [max, min]\n  );\n\n  const reset = React.useCallback(() => {\n    setCount(startingValue);\n  }, [startingValue]);\n\n  return [\n    count,\n    {\n      increment,\n      decrement,\n      set,\n      reset,\n    },\n  ];\n}\n\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n  React.useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport function useDefault(initialValue, defaultValue) {\n  const [state, setState] = React.useState(initialValue);\n\n  if (typeof state === \"undefined\" || state === null) {\n    return [defaultValue, setState];\n  }\n\n  return [state, setState];\n}\n\nexport function useDocumentTitle(title) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport function useFavicon(url) {\n  React.useEffect(() => {\n    let link = document.querySelector(`link[rel~=\"icon\"]`);\n\n    if (!link) {\n      link = document.createElement(\"link\");\n      link.type = \"image/x-icon\";\n      link.rel = \"icon\";\n      link.href = url;\n      document.head.appendChild(link);\n    } else {\n      link.href = url;\n    }\n  }, [url]);\n}\n\nexport function useGeolocation(options = {}) {\n  const [state, setState] = React.useState({\n    loading: true,\n    accuracy: null,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    latitude: null,\n    longitude: null,\n    speed: null,\n    timestamp: null,\n    error: null,\n  });\n\n  const optionsRef = React.useRef(options);\n\n  React.useEffect(() => {\n    const onEvent = ({ coords, timestamp }) => {\n      setState({\n        loading: false,\n        timestamp,\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        altitude: coords.altitude,\n        accuracy: coords.accuracy,\n        altitudeAccuracy: coords.altitudeAccuracy,\n        heading: coords.heading,\n        speed: coords.speed,\n      });\n    };\n\n    const onEventError = (error) => {\n      setState((s) => ({\n        ...s,\n        loading: false,\n        error,\n      }));\n    };\n\n    navigator.geolocation.getCurrentPosition(\n      onEvent,\n      onEventError,\n      optionsRef.current\n    );\n\n    const watchId = navigator.geolocation.watchPosition(\n      onEvent,\n      onEventError,\n      optionsRef.current\n    );\n\n    return () => {\n      navigator.geolocation.clearWatch(watchId);\n    };\n  }, []);\n\n  return state;\n}\n\nconst initialUseHistoryStateState = {\n  past: [],\n  present: null,\n  future: [],\n};\n\nconst useHistoryStateReducer = (state, action) => {\n  const { past, present, future } = state;\n\n  if (action.type === \"UNDO\") {\n    return {\n      past: past.slice(0, past.length - 1),\n      present: past[past.length - 1],\n      future: [present, ...future],\n    };\n  } else if (action.type === \"REDO\") {\n    return {\n      past: [...past, present],\n      present: future[0],\n      future: future.slice(1),\n    };\n  } else if (action.type === \"SET\") {\n    const { newPresent } = action;\n\n    if (action.newPresent === present) {\n      return state;\n    }\n\n    return {\n      past: [...past, present],\n      present: newPresent,\n      future: [],\n    };\n  } else if (action.type === \"CLEAR\") {\n    return {\n      ...initialUseHistoryStateState,\n      present: action.initialPresent,\n    };\n  } else {\n    throw new Error(\"Unsupported action type\");\n  }\n};\n\nexport function useHistoryState(initialPresent = {}) {\n  const initialPresentRef = React.useRef(initialPresent);\n\n  const [state, dispatch] = React.useReducer(useHistoryStateReducer, {\n    ...initialUseHistoryStateState,\n    present: initialPresentRef.current,\n  });\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n  const undo = React.useCallback(() => {\n    if (canUndo) {\n      dispatch({ type: \"UNDO\" });\n    }\n  }, [canUndo]);\n\n  const redo = React.useCallback(() => {\n    if (canRedo) {\n      dispatch({ type: \"REDO\" });\n    }\n  }, [canRedo]);\n\n  const set = React.useCallback(\n    (newPresent) => dispatch({ type: \"SET\", newPresent }),\n    []\n  );\n\n  const clear = React.useCallback(\n    () =>\n      dispatch({ type: \"CLEAR\", initialPresent: initialPresentRef.current }),\n    []\n  );\n\n  return { state: state.present, set, undo, redo, clear, canUndo, canRedo };\n}\n\nexport function useHover() {\n  const [hovering, setHovering] = React.useState(false);\n  const previousNode = React.useRef(null);\n\n  const handleMouseEnter = React.useCallback(() => {\n    setHovering(true);\n  }, []);\n\n  const handleMouseLeave = React.useCallback(() => {\n    setHovering(false);\n  }, []);\n\n  const customRef = React.useCallback(\n    (node) => {\n      if (previousNode.current?.nodeType === Node.ELEMENT_NODE) {\n        previousNode.current.removeEventListener(\n          \"mouseenter\",\n          handleMouseEnter\n        );\n        previousNode.current.removeEventListener(\n          \"mouseleave\",\n          handleMouseLeave\n        );\n      }\n\n      if (node?.nodeType === Node.ELEMENT_NODE) {\n        node.addEventListener(\"mouseenter\", handleMouseEnter);\n        node.addEventListener(\"mouseleave\", handleMouseLeave);\n      }\n\n      previousNode.current = node;\n    },\n    [handleMouseEnter, handleMouseLeave]\n  );\n\n  return [customRef, hovering];\n}\n\nexport function useIdle(ms = 1000 * 60) {\n  const [idle, setIdle] = React.useState(false);\n\n  React.useEffect(() => {\n    let timeoutId;\n\n    const handleTimeout = () => {\n      setIdle(true);\n    };\n\n    const handleEvent = throttle((e) => {\n      setIdle(false);\n\n      window.clearTimeout(timeoutId);\n      timeoutId = window.setTimeout(handleTimeout, ms);\n    }, 500);\n\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        handleEvent();\n      }\n    };\n\n    timeoutId = window.setTimeout(handleTimeout, ms);\n\n    window.addEventListener(\"mousemove\", handleEvent);\n    window.addEventListener(\"mousedown\", handleEvent);\n    window.addEventListener(\"resize\", handleEvent);\n    window.addEventListener(\"keydown\", handleEvent);\n    window.addEventListener(\"touchstart\", handleEvent);\n    window.addEventListener(\"wheel\", handleEvent);\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleEvent);\n      window.removeEventListener(\"mousedown\", handleEvent);\n      window.removeEventListener(\"resize\", handleEvent);\n      window.removeEventListener(\"keydown\", handleEvent);\n      window.removeEventListener(\"touchstart\", handleEvent);\n      window.removeEventListener(\"wheel\", handleEvent);\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n      window.clearTimeout(timeoutId);\n    };\n  }, [ms]);\n\n  return idle;\n}\n\nexport function useIntersectionObserver(options = {}) {\n  const { threshold = 1, root = null, rootMargin = \"0px\" } = options;\n  const [entry, setEntry] = React.useState(null);\n\n  const previousObserver = React.useRef(null);\n\n  const customRef = React.useCallback(\n    (node) => {\n      if (previousObserver.current) {\n        previousObserver.current.disconnect();\n        previousObserver.current = null;\n      }\n\n      if (node?.nodeType === Node.ELEMENT_NODE) {\n        const observer = new IntersectionObserver(\n          ([entry]) => {\n            setEntry(entry);\n          },\n          { threshold, root, rootMargin }\n        );\n\n        observer.observe(node);\n        previousObserver.current = observer;\n      }\n    },\n    [threshold, root, rootMargin]\n  );\n\n  return [customRef, entry];\n}\n\nexport function useIsClient() {\n  const [isClient, setIsClient] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  return isClient;\n}\n\nexport function useIsFirstRender() {\n  const renderRef = React.useRef(true);\n\n  if (renderRef.current === true) {\n    renderRef.current = false;\n    return true;\n  }\n\n  return renderRef.current;\n}\n\nexport function useList(defaultList = []) {\n  const [list, setList] = React.useState(defaultList);\n\n  const set = React.useCallback((l) => {\n    setList(l);\n  }, []);\n\n  const push = React.useCallback((element) => {\n    setList((l) => [...l, element]);\n  }, []);\n\n  const removeAt = React.useCallback((index) => {\n    setList((l) => [...l.slice(0, index), ...l.slice(index + 1)]);\n  }, []);\n\n  const insertAt = React.useCallback((index, element) => {\n    setList((l) => [...l.slice(0, index), element, ...l.slice(index)]);\n  }, []);\n\n  const updateAt = React.useCallback((index, element) => {\n    setList((l) => l.map((e, i) => (i === index ? element : e)));\n  }, []);\n\n  const clear = React.useCallback(() => setList([]), []);\n\n  return [list, { set, push, removeAt, insertAt, updateAt, clear }];\n}\n\nconst setLocalStorageItem = (key, value) => {\n  const stringifiedValue = JSON.stringify(value);\n  window.localStorage.setItem(key, stringifiedValue);\n  dispatchStorageEvent(key, stringifiedValue);\n};\n\nconst removeLocalStorageItem = (key) => {\n  window.localStorage.removeItem(key);\n  dispatchStorageEvent(key, null);\n};\n\nconst getLocalStorageItem = (key) => {\n  return window.localStorage.getItem(key);\n};\n\nconst useLocalStorageSubscribe = (callback) => {\n  window.addEventListener(\"storage\", callback);\n  return () => window.removeEventListener(\"storage\", callback);\n};\n\nconst getLocalStorageServerSnapshot = () => {\n  throw Error(\"useLocalStorage is a client-only hook\");\n};\n\nexport function useLocalStorage(key, initialValue) {\n  const getSnapshot = () => getLocalStorageItem(key);\n\n  const store = React.useSyncExternalStore(\n    useLocalStorageSubscribe,\n    getSnapshot,\n    getLocalStorageServerSnapshot\n  );\n\n  const setState = React.useCallback(\n    (v) => {\n      try {\n        const nextState = typeof v === \"function\" ? v(JSON.parse(store)) : v;\n\n        if (nextState === undefined || nextState === null) {\n          removeLocalStorageItem(key);\n        } else {\n          setLocalStorageItem(key, nextState);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    [key, store]\n  );\n\n  React.useEffect(() => {\n    if (\n      getLocalStorageItem(key) === null &&\n      typeof initialValue !== \"undefined\"\n    ) {\n      setLocalStorageItem(key, initialValue);\n    }\n  }, [key, initialValue]);\n\n  return [store ? JSON.parse(store) : initialValue, setState];\n}\n\nexport function useLockBodyScroll() {\n  React.useLayoutEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, []);\n}\n\nexport function useLongPress(callback, options = {}) {\n  const { threshold = 400, onStart, onFinish, onCancel } = options;\n  const isLongPressActive = React.useRef(false);\n  const isPressed = React.useRef(false);\n  const timerId = React.useRef();\n\n  return React.useMemo(() => {\n    if (typeof callback !== \"function\") {\n      return {};\n    }\n\n    const start = (event) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) return;\n\n      if (onStart) {\n        onStart(event);\n      }\n\n      isPressed.current = true;\n      timerId.current = setTimeout(() => {\n        callback(event);\n        isLongPressActive.current = true;\n      }, threshold);\n    };\n\n    const cancel = (event) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) return;\n\n      if (isLongPressActive.current) {\n        if (onFinish) {\n          onFinish(event);\n        }\n      } else if (isPressed.current) {\n        if (onCancel) {\n          onCancel(event);\n        }\n      }\n\n      isLongPressActive.current = false;\n      isPressed.current = false;\n\n      if (timerId.current) {\n        window.clearTimeout(timerId.current);\n      }\n    };\n\n    const mouseHandlers = {\n      onMouseDown: start,\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n    };\n\n    const touchHandlers = {\n      onTouchStart: start,\n      onTouchEnd: cancel,\n    };\n\n    return {\n      ...mouseHandlers,\n      ...touchHandlers,\n    };\n  }, [callback, threshold, onCancel, onFinish, onStart]);\n}\n\nexport function useMap(initialState) {\n  const mapRef = React.useRef(new Map(initialState));\n  const [, reRender] = React.useReducer((x) => x + 1, 0);\n\n  mapRef.current.set = (...args) => {\n    Map.prototype.set.apply(mapRef.current, args);\n    reRender();\n    return mapRef.current;\n  };\n\n  mapRef.current.clear = (...args) => {\n    Map.prototype.clear.apply(mapRef.current, args);\n    reRender();\n  };\n\n  mapRef.current.delete = (...args) => {\n    const res = Map.prototype.delete.apply(mapRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  return mapRef.current;\n}\n\nexport function useMeasure() {\n  const [dimensions, setDimensions] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  const previousObserver = React.useRef(null);\n\n  const customRef = React.useCallback((node) => {\n    if (previousObserver.current) {\n      previousObserver.current.disconnect();\n      previousObserver.current = null;\n    }\n\n    if (node?.nodeType === Node.ELEMENT_NODE) {\n      const observer = new ResizeObserver(([entry]) => {\n        if (entry && entry.borderBoxSize) {\n          const { inlineSize: width, blockSize: height } =\n            entry.borderBoxSize[0];\n\n          setDimensions({ width, height });\n        }\n      });\n\n      observer.observe(node);\n      previousObserver.current = observer;\n    }\n  }, []);\n\n  return [customRef, dimensions];\n}\n\nexport function useMediaQuery(query) {\n  const subscribe = React.useCallback(\n    (callback) => {\n      const matchMedia = window.matchMedia(query);\n\n      matchMedia.addEventListener(\"change\", callback);\n      return () => {\n        matchMedia.removeEventListener(\"change\", callback);\n      };\n    },\n    [query]\n  );\n\n  const getSnapshot = () => {\n    return window.matchMedia(query).matches;\n  };\n\n  const getServerSnapshot = () => {\n    throw Error(\"useMediaQuery is a client-only hook\");\n  };\n\n  return React.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\nexport function useMouse() {\n  const [state, setState] = React.useState({\n    x: 0,\n    y: 0,\n    elementX: 0,\n    elementY: 0,\n    elementPositionX: 0,\n    elementPositionY: 0,\n  });\n\n  const ref = React.useRef(null);\n\n  React.useLayoutEffect(() => {\n    const handleMouseMove = (event) => {\n      let newState = {\n        x: event.pageX,\n        y: event.pageY,\n      };\n\n      if (ref.current?.nodeType === Node.ELEMENT_NODE) {\n        const { left, top } = ref.current.getBoundingClientRect();\n        const elementPositionX = left + window.scrollX;\n        const elementPositionY = top + window.scrollY;\n        const elementX = event.pageX - elementPositionX;\n        const elementY = event.pageY - elementPositionY;\n\n        newState.elementX = elementX;\n        newState.elementY = elementY;\n        newState.elementPositionX = elementPositionX;\n        newState.elementPositionY = elementPositionY;\n      }\n\n      setState((s) => {\n        return {\n          ...s,\n          ...newState,\n        };\n      });\n    };\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n\n  return [state, ref];\n}\n\nconst getConnection = () => {\n  return (\n    navigator?.connection ||\n    navigator?.mozConnection ||\n    navigator?.webkitConnection\n  );\n};\n\nconst useNetworkStateSubscribe = (callback) => {\n  window.addEventListener(\"online\", callback, { passive: true });\n  window.addEventListener(\"offline\", callback, { passive: true });\n\n  const connection = getConnection();\n\n  if (connection) {\n    connection.addEventListener(\"change\", callback, { passive: true });\n  }\n\n  return () => {\n    window.removeEventListener(\"online\", callback);\n    window.removeEventListener(\"offline\", callback);\n\n    if (connection) {\n      connection.removeEventListener(\"change\", callback);\n    }\n  };\n};\n\nconst getNetworkStateServerSnapshot = () => {\n  throw Error(\"useNetworkState is a client-only hook\");\n};\n\nexport function useNetworkState() {\n  const cache = React.useRef({});\n\n  const getSnapshot = () => {\n    const online = navigator.onLine;\n    const connection = getConnection();\n\n    const nextState = {\n      online,\n      downlink: connection?.downlink,\n      downlinkMax: connection?.downlinkMax,\n      effectiveType: connection?.effectiveType,\n      rtt: connection?.rtt,\n      saveData: connection?.saveData,\n      type: connection?.type,\n    };\n\n    if (isShallowEqual(cache.current, nextState)) {\n      return cache.current;\n    } else {\n      cache.current = nextState;\n      return nextState;\n    }\n  };\n\n  return React.useSyncExternalStore(\n    useNetworkStateSubscribe,\n    getSnapshot,\n    getNetworkStateServerSnapshot\n  );\n}\n\nexport function useObjectState(initialValue) {\n  const [state, setState] = React.useState(initialValue);\n\n  const handleUpdate = React.useCallback((arg) => {\n    if (typeof arg === \"function\") {\n      setState((s) => {\n        const newState = arg(s);\n\n        if (isPlainObject(newState)) {\n          return {\n            ...s,\n            ...newState,\n          };\n        }\n      });\n    }\n\n    if (isPlainObject(arg)) {\n      setState((s) => ({\n        ...s,\n        ...arg,\n      }));\n    }\n  }, []);\n\n  return [state, handleUpdate];\n}\n\nexport function useOrientation() {\n  const [orientation, setOrientation] = React.useState({\n    angle: 0,\n    type: \"landscape-primary\",\n  });\n\n  React.useLayoutEffect(() => {\n    const handleChange = () => {\n      const { angle, type } = window.screen.orientation;\n      setOrientation({\n        angle,\n        type,\n      });\n    };\n\n    const handle_orientationchange = () => {\n      setOrientation({\n        type: \"UNKNOWN\",\n        angle: window.orientation,\n      });\n    };\n\n    if (window.screen?.orientation) {\n      handleChange();\n      window.screen.orientation.addEventListener(\"change\", handleChange);\n    } else {\n      handle_orientationchange();\n      window.addEventListener(\"orientationchange\", handle_orientationchange);\n    }\n\n    return () => {\n      if (window.screen?.orientation) {\n        window.screen.orientation.removeEventListener(\"change\", handleChange);\n      } else {\n        window.removeEventListener(\n          \"orientationchange\",\n          handle_orientationchange\n        );\n      }\n    };\n  }, []);\n\n  return orientation;\n}\n\nconst usePreferredLanguageSubscribe = (cb) => {\n  window.addEventListener(\"languagechange\", cb);\n  return () => window.removeEventListener(\"languagechange\", cb);\n};\n\nconst getPreferredLanguageSnapshot = () => {\n  return navigator.language;\n};\n\nconst getPreferredLanguageServerSnapshot = () => {\n  throw Error(\"usePreferredLanguage is a client-only hook\");\n};\n\nexport function usePreferredLanguage() {\n  return React.useSyncExternalStore(\n    usePreferredLanguageSubscribe,\n    getPreferredLanguageSnapshot,\n    getPreferredLanguageServerSnapshot\n  );\n}\n\nexport function usePrevious(value) {\n  const [current, setCurrent] = React.useState(value);\n  const [previous, setPrevious] = React.useState(null);\n\n  if (value !== current) {\n    setPrevious(current);\n    setCurrent(value);\n  }\n\n  return previous;\n}\n\nexport function useQueue(initialValue = []) {\n  const [queue, setQueue] = React.useState(initialValue);\n\n  const add = React.useCallback((element) => {\n    setQueue((q) => [...q, element]);\n  }, []);\n\n  const remove = React.useCallback(() => {\n    let removedElement;\n\n    setQueue(([first, ...q]) => {\n      removedElement = first;\n      return q;\n    });\n\n    return removedElement;\n  }, []);\n\n  const clear = React.useCallback(() => {\n    setQueue([]);\n  }, []);\n\n  return {\n    add,\n    remove,\n    clear,\n    first: queue[0],\n    last: queue[queue.length - 1],\n    size: queue.length,\n    queue,\n  };\n}\n\nexport function useRenderCount() {\n  const count = React.useRef(0);\n\n  count.current++;\n\n  return count.current;\n}\n\nexport function useRenderInfo(name = \"Unknown\") {\n  const count = React.useRef(0);\n  const lastRender = React.useRef();\n  const now = Date.now();\n\n  count.current++;\n\n  React.useEffect(() => {\n    lastRender.current = Date.now();\n  });\n\n  const sinceLastRender = lastRender.current ? now - lastRender.current : 0;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const info = {\n      name,\n      renders: count.current,\n      sinceLastRender,\n      timestamp: now,\n    };\n\n    console.log(info);\n\n    return info;\n  }\n}\n\nexport function useScript(src, options = {}) {\n  const [status, setStatus] = React.useState(\"loading\");\n  const optionsRef = React.useRef(options);\n\n  React.useEffect(() => {\n    let script = document.querySelector(`script[src=\"${src}\"]`);\n\n    const domStatus = script?.getAttribute(\"data-status\");\n    if (domStatus) {\n      setStatus(domStatus);\n      return;\n    }\n\n    if (script === null) {\n      script = document.createElement(\"script\");\n      script.src = src;\n      script.async = true;\n      script.setAttribute(\"data-status\", \"loading\");\n      document.body.appendChild(script);\n\n      const handleScriptLoad = () => {\n        script.setAttribute(\"data-status\", \"ready\");\n        setStatus(\"ready\");\n        removeEventListeners();\n      };\n\n      const handleScriptError = () => {\n        script.setAttribute(\"data-status\", \"error\");\n        setStatus(\"error\");\n        removeEventListeners();\n      };\n\n      const removeEventListeners = () => {\n        script.removeEventListener(\"load\", handleScriptLoad);\n        script.removeEventListener(\"error\", handleScriptError);\n      };\n\n      script.addEventListener(\"load\", handleScriptLoad);\n      script.addEventListener(\"error\", handleScriptError);\n\n      const removeOnUnmount = optionsRef.current.removeOnUnmount;\n\n      return () => {\n        if (removeOnUnmount === true) {\n          script.remove();\n          removeEventListeners();\n        }\n      };\n    } else {\n      setStatus(\"unknown\");\n    }\n  }, [src]);\n\n  return status;\n}\n\nconst setSessionStorageItem = (key, value) => {\n  const stringifiedValue = JSON.stringify(value);\n  window.sessionStorage.setItem(key, stringifiedValue);\n  dispatchStorageEvent(key, stringifiedValue);\n};\n\nconst removeSessionStorageItem = (key) => {\n  window.sessionStorage.removeItem(key);\n  dispatchStorageEvent(key, null);\n};\n\nconst getSessionStorageItem = (key) => {\n  return window.sessionStorage.getItem(key);\n};\n\nconst useSessionStorageSubscribe = (callback) => {\n  window.addEventListener(\"storage\", callback);\n  return () => window.removeEventListener(\"storage\", callback);\n};\n\nconst getSessionStorageServerSnapshot = () => {\n  throw Error(\"useSessionStorage is a client-only hook\");\n};\n\nexport function useSessionStorage(key, initialValue) {\n  const getSnapshot = () => getSessionStorageItem(key);\n\n  const store = React.useSyncExternalStore(\n    useSessionStorageSubscribe,\n    getSnapshot,\n    getSessionStorageServerSnapshot\n  );\n\n  const setState = React.useCallback(\n    (v) => {\n      try {\n        const nextState = typeof v === \"function\" ? v(JSON.parse(store)) : v;\n\n        if (nextState === undefined || nextState === null) {\n          removeSessionStorageItem(key);\n        } else {\n          setSessionStorageItem(key, nextState);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    [key, store]\n  );\n\n  React.useEffect(() => {\n    if (\n      getSessionStorageItem(key) === null &&\n      typeof initialValue !== \"undefined\"\n    ) {\n      setSessionStorageItem(key, initialValue);\n    }\n  }, [key, initialValue]);\n\n  return [store ? JSON.parse(store) : initialValue, setState];\n}\n\nexport function useSet(values) {\n  const setRef = React.useRef(new Set(values));\n  const [, reRender] = React.useReducer((x) => x + 1, 0);\n\n  setRef.current.add = (...args) => {\n    const res = Set.prototype.add.apply(setRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  setRef.current.clear = (...args) => {\n    Set.prototype.clear.apply(setRef.current, args);\n    reRender();\n  };\n\n  setRef.current.delete = (...args) => {\n    const res = Set.prototype.delete.apply(setRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  return setRef.current;\n}\n\nexport function useThrottle(value, interval = 500) {\n  const [throttledValue, setThrottledValue] = React.useState(value);\n  const lastUpdated = React.useRef(null);\n\n  React.useEffect(() => {\n    const now = Date.now();\n\n    if (lastUpdated.current && now >= lastUpdated.current + interval) {\n      lastUpdated.current = now;\n      setThrottledValue(value);\n    } else {\n      const id = window.setTimeout(() => {\n        lastUpdated.current = now;\n        setThrottledValue(value);\n      }, interval);\n\n      return () => window.clearTimeout(id);\n    }\n  }, [value, interval]);\n\n  return throttledValue;\n}\n\nexport function useToggle(initialValue) {\n  const [on, setOn] = React.useState(() => {\n    if (typeof initialValue === \"boolean\") {\n      return initialValue;\n    }\n\n    return Boolean(initialValue);\n  });\n\n  const handleToggle = React.useCallback((value) => {\n    if (typeof value === \"boolean\") {\n      return setOn(value);\n    }\n\n    return setOn((v) => !v);\n  }, []);\n\n  return [on, handleToggle];\n}\n\nconst useVisibilityChangeSubscribe = (callback) => {\n  document.addEventListener(\"visibilitychange\", callback);\n\n  return () => {\n    document.removeEventListener(\"visibilitychange\", callback);\n  };\n};\n\nconst getVisibilityChangeSnapshot = () => {\n  return document.visibilityState;\n};\n\nconst getVisibilityChangeServerSnapshot = () => {\n  throw Error(\"useVisibilityChange is a client-only hook\");\n};\n\nexport function useVisibilityChange() {\n  const visibilityState = React.useSyncExternalStore(\n    useVisibilityChangeSubscribe,\n    getVisibilityChangeSnapshot,\n    getVisibilityChangeServerSnapshot\n  );\n\n  return visibilityState === \"visible\";\n}\n\nexport function useWindowScroll() {\n  const [state, setState] = React.useState({\n    x: null,\n    y: null,\n  });\n\n  const scrollTo = React.useCallback((...args) => {\n    if (typeof args[0] === \"object\") {\n      window.scrollTo(args[0]);\n    } else if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n      window.scrollTo(args[0], args[1]);\n    } else {\n      throw new Error(\n        `Invalid arguments passed to scrollTo. See here for more info. https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo`\n      );\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    const handleScroll = () => {\n      setState({ x: window.scrollX, y: window.scrollY });\n    };\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return [state, scrollTo];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  React.useLayoutEffect(() => {\n    const handleResize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return size;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalBackdrop\":\"ModalBody_modalBackdrop__KSTDi\",\"modalBody\":\"ModalBody_modalBody__z2P-b\",\"testModalBody\":\"ModalBody_testModalBody__Lae1F\"};","import css from './ModalBody.module.css'\nimport { useDispatch } from \"react-redux\"\nimport { closeModal } from '../../redux/modalSlice'\n\nexport const Test = ({id})=>{\n    const dispatch = useDispatch()\n    const columns = [{id: 1, title: \"colum1 A\",boardId: '1'},{id: 2, title: \"colum1 B\",boardId: '1'},{id:3,title: \"colum1 C\",boardId: '1'}]\n// users, boards, columns, cards\n    const cards = [{\n        id: 1,\n        title: \"card 1\",\n        boardId: 1,\n        columnId: 1,\n    },{\n        id: 2,\n        title: \"card2\",\n        boardId: 1,\n        columnId: 1\n    },{\n        id: 3,\n        title: \"card3\",\n        boardId: 1,\n        columnId: 2\n    },\n    {\n        id: 4,\n        title: \"card4\",\n        boardId: 1,\n        columnId: 2\n    },\n    {\n        id: 5,\n        title: \"card5\",\n        boardId: 1,\n        columnId: 3\n    }]\n\n    const closeModalHandler = () =>{\n        dispatch(closeModal())\n    }\n\n    return (\n    <div className={css.testModalBody}>\n        <button onClick={closeModalHandler}>close</button>\n        <p>{id}</p>\n\n\n        <ul>\n            {columns.map(col => {\n                return (\n                <li key={col.id}>\n                    {col.title}\n                    <ul>\n                        {cards.filter(card => card.columnId === col.id).map(card => {\n                            return (<li key={card.id}>{card.title}</li>)\n                        })}\n                    </ul>\n                </li>\n                )\n            })}\n        </ul>\n    </div>)\n}\n\n// ТЕСТОВИЙ КОМПОНЕНТ. ЗАМІСТЬ НЬОГО БУДУТЬ ФОРМИ ","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\nimport { closeModal } from '../../redux/modalSlice';\nimport { useLockBodyScroll } from '@uidotdev/usehooks';\nimport css from './ModalBody.module.css';\n\nimport { Test } from './Test';\n\nexport const ModalBody = () => {\n  const dispatch = useDispatch();\n  const { modalContent, selectedElId } = useSelector(state => state.modal); // ДІСТАЄ З РЕДАКСУ КОНТЕНТ\n  useLockBodyScroll(); //БЛОКУЄ СКРОЛ СТОРІНКИ\n\n  const firstRender = useRef(false);\n  useLockBodyScroll();\n\n  useEffect(() => {\n    if (firstRender.current === false) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      firstRender.current = false;\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      dispatch(closeModal()); //ЗАКРИТТЯ НА ЕСКЕЙП\n    }\n  };\n\n  const backdropClose = e => {\n    if (e.target === e.currentTarget) {\n      //ЗАКРИТТЯ НА БЕКДРОП\n      dispatch(closeModal());\n    }\n  };\n\n  const handleContent = content => {\n    //ФУНКЦІЯ ВИЗНАЧЕННЯ РЕДНЕРУ КОНЕТНТУ. КОЖЕН КЕЙС ПОТРІБНО ПРОПИСАТИ\n    switch (content) {\n      case 'add-board':\n        return <Test id={selectedElId}></Test>;\n      case 'edit-board':\n        return; //вставити компонент\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div onClick={e => backdropClose(e)} className={css.modalBackdrop}>\n      <div className={css.modalBody}>{handleContent(modalContent)}</div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sideBar\":\"Sidebar_sideBar__A8DTG\",\"openSideBar\":\"Sidebar_openSideBar__Uyf+9\",\"titleBox\":\"Sidebar_titleBox__xqSVd\",\"iconBox\":\"Sidebar_iconBox__lGsim\",\"logoIconContainer\":\"Sidebar_logoIconContainer__yiz-a\",\"iconLogo\":\"Sidebar_iconLogo__P5b+p\",\"title\":\"Sidebar_title__mzY+F\",\"bordBox\":\"Sidebar_bordBox__l9HDF\",\"bordTitle\":\"Sidebar_bordTitle__iDwHw\",\"buttonBox\":\"Sidebar_buttonBox__+dqOM\",\"buttonText\":\"Sidebar_buttonText__0LoRm\",\"buttonCreate\":\"Sidebar_buttonCreate__t3LZl\",\"iconCreate\":\"Sidebar_iconCreate__vE+2z\",\"bordList\":\"Sidebar_bordList__PS2uv\",\"helpBox\":\"Sidebar_helpBox__W7BKt\",\"helpTextBox\":\"Sidebar_helpTextBox__Sd7S6\",\"helpText\":\"Sidebar_helpText__1vwtr\",\"helpTextLink\":\"Sidebar_helpTextLink__QXL1T\",\"buttonHelp\":\"Sidebar_buttonHelp__nkXAH\",\"iconHelp\":\"Sidebar_iconHelp__6c8m3\",\"helpButtonText\":\"Sidebar_helpButtonText__0g7gg\",\"buttonLogOut\":\"Sidebar_buttonLogOut__VYxol\",\"iconLogOut\":\"Sidebar_iconLogOut__GX2DR\",\"logOutButtonText\":\"Sidebar_logOutButtonText__vzEjb\"};","// extracted by mini-css-extract-plugin\nexport default {\"boardItem\":\"Board_boardItem__pg3mb\",\"board\":\"Board_board__gOYph\",\"boardTitleBox\":\"Board_boardTitleBox__N1O+A\",\"boardIcon\":\"Board_boardIcon__TALFy\",\"boardText\":\"Board_boardText__tGGO5\",\"boardTittle\":\"Board_boardTittle__4B6lS\",\"boardButtonBox\":\"Board_boardButtonBox__pijVR\",\"boardButton\":\"Board_boardButton__9AuMq\",\"iconButton\":\"Board_iconButton__9r8ni\"};","import css from './Board.module.css';\nimport sprite from '../../../images/sprite.svg';\n\nexport const Board = () => {\n  return (\n    <>\n      <li className={css.boardItem}>\n        <div className={css.boardTitleBox}>\n          <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n            <use href={`${sprite}#icon-bell`} />\n          </svg>\n          <p className={css.boardText}>Title Text</p>\n        </div>\n        <div className={css.boardButtonBox}>\n          <button className={css.boardButton}>\n            <svg className={css.iconButton} width=\"16\" height=\"16\">\n              <use href={`${sprite}#icon-pencil`} />\n            </svg>\n          </button>\n          <button className={css.boardButton}>\n            <svg className={css.iconButton} width=\"16\" height=\"16\">\n              <use href={`${sprite}#icon-trash`} />\n            </svg>\n          </button>\n        </div>\n      </li>\n      <li className={css.boardItem}>\n        <div className={css.boardTitleBox}>\n          <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n            <use href={`${sprite}#icon-bell`} />\n          </svg>\n          <p className={css.boardText}>Title Text</p>\n        </div>\n        <div className={css.boardButtonBox}>\n          <button className={css.boardButton}>\n            <svg className={css.iconButton} width=\"16\" height=\"16\">\n              <use href={`${sprite}#icon-pencil`} />\n            </svg>\n          </button>\n          <button className={css.boardButton}>\n            <svg className={css.iconButton} width=\"16\" height=\"16\">\n              <use href={`${sprite}#icon-trash`} />\n            </svg>\n          </button>\n        </div>\n      </li>\n      <li className={css.boardItem}>\n        <div className={css.boardTitleBox}>\n          <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n            <use href={`${sprite}#icon-bell`} />\n          </svg>\n          <p className={css.boardText}>Title Text</p>\n        </div>\n        <div className={css.boardButtonBox}>\n          <button className={css.boardButton}>\n            <svg className={css.iconButton} width=\"16\" height=\"16\">\n              <use href={`${sprite}#icon-pencil`} />\n            </svg>\n          </button>\n          <button className={css.boardButton}>\n            <svg className={css.iconButton} width=\"16\" height=\"16\">\n              <use href={`${sprite}#icon-trash`} />\n            </svg>\n          </button>\n        </div>\n      </li>\n    </>\n  );\n};\n","import css from './Sidebar.module.css';\nimport sprite from '../../images/sprite.svg';\nimport pot from '../../images/need-help/pot.png';\nimport pot2x from '../../images/need-help/pot2x.png';\nimport { Board } from './Board/Board';\n\nexport const Sidebar = () => {\n  return (\n    <div className={css.sideBar}>\n      {/* logo, title */}\n      <div className={css.titleBox}>\n        <div className={css.iconBox}>\n          <div className={css.logoIconContainer}>\n            <svg className={css.iconLogo} width=\"16\" height=\"16\">\n              <use href={`${sprite}#icon-logo`} />\n            </svg>\n          </div>\n          <h2 className={css.title}>Task Pro</h2>\n        </div>\n        <div className={css.bordBox}>\n          <h3 className={css.bordTitle}>My Boards</h3>\n          {/* button create */}\n          <div className={css.buttonBox}>\n            <span className={css.buttonText}>Create a new board</span>\n            <button className={css.buttonCreate}>\n              <svg className={css.iconCreate} width=\"22\" height=\"22\">\n                <use href={`${sprite}#icon-plus`} />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      {/* boards  */}\n      <ul className={css.bordList}>\n        <Board></Board>\n      </ul>\n      {/* need help */}\n      <div className={css.helpBox}>\n        <div className={css.helpTextBox}>\n          <picture className={css.imgHelp}>\n            <source srcSet={`${pot} 1x, ${pot2x} 2x`} />\n            <img srcSet={`${pot} 1x`} alt=\"pot\" />\n          </picture>\n          <p className={css.helpText}>\n            If you need help with{' '}\n            <span className={css.helpTextLink}>TaskPro</span>, check out our\n            support resources or reach out to our customer support team.\n          </p>\n          <button className={css.buttonHelp}>\n            <svg className={css.iconHelp} width=\"20\" height=\"20\">\n              <use href={`${sprite}#icon-help`} />\n            </svg>\n            <p className={css.helpButtonText}>Need help?</p>\n          </button>\n        </div>\n        {/* logout */}\n        <button className={css.buttonLogOut}>\n          <svg className={css.iconLogOut} width=\"32\" height=\"32\">\n            <use href={`${sprite}#icon-login`} />\n          </svg>\n          <p className={css.logOutButtonText}>Log Out</p>\n        </button>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boardDefault\":\"DefaultBoard_boardDefault__OGVRe\",\"boardDefaultText\":\"DefaultBoard_boardDefaultText__9+0UM\",\"boardDefaultLink\":\"DefaultBoard_boardDefaultLink__D+uKf\"};","import css from './DefaultBoard.module.css'\n\nexport const DefaultBoard = () =>{\n    return(\n    <div className={css.boardDefault}>\n        <p className={css.boardDefaultText}>Before starting your project, it is essential <span className={css.boardDefaultLink}>to create a board</span> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</p>\n    </div>)\n}","// extracted by mini-css-extract-plugin\nexport default {\"navContainer\":\"Navigation_navContainer__+dgHg\",\"buttonBurger\":\"Navigation_buttonBurger__Kqo-y\",\"iconBurger\":\"Navigation_iconBurger__Y+5FL\",\"navMenu\":\"Navigation_navMenu__tyi6A\"};","// extracted by mini-css-extract-plugin\nexport default {};","import css from './UserMenu.module.css';\n\nexport const UserMenu = () => {\n  return <div className={css.test}>Name</div>;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"menuTheme\":\"ThemeSelect_menuTheme__syeY8\",\"iconChevronDown\":\"ThemeSelect_iconChevronDown__z0Zx0\"};","import css from './ThemeSelect.module.css';\nimport sprite from '../../images/sprite.svg';\n\nexport const ThemeSelect = () => {\n  return (\n    <div className={css.menuTheme}>\n      <p className={css.titleMenuTheme}>Theme</p>\n      <svg className={css.iconChevronDown} width=\"16\" height=\"16\">\n        <use href={`${sprite}#icon-chevron-down`} />\n      </svg>\n    </div>\n  );\n};\n","import css from './Navigation.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { UserMenu } from '../UserMenu/UserMenu.jsx';\nimport { ThemeSelect } from '../ThemeSelect/ThemeSelect.jsx';\n\nexport const Navigation = ({ openMenu }) => {\n  return (\n    <div className={css.navContainer}>\n      <button className={css.buttonBurger} type=\"button\" onClick={openMenu}>\n        <svg className={css.iconBurger} width=\"16\" height=\"16\">\n          <use href={`${sprite}#icon-menu`} />\n        </svg>\n      </button>\n\n      <div className={css.navMenu}>\n        <ThemeSelect />\n        <UserMenu />\n      </div>\n    </div>\n  );\n};\n","import css from './HomePage.module.css';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ModalBody } from 'components/Modals/ModalBody';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DefaultBoard } from 'components/DefaultBoard/DefaultBoard';\nimport { Navigation } from 'components/Navigation/Navigation';\n\nconst HomePage = () => {\n  const { isOpen } = useSelector(state => state.modal);\n  const location = useLocation();\n\n\n    return(\n    <div className={css.main} data-theme='dark'>\n            <Sidebar/> \n            {console.log(location.pathname)}\n      <div className={css.mainPage}>\n        <Navigation />\n        {location.pathname === '/home' && <DefaultBoard />}\n        {/* В outlet БУДЕ РЕНДЕРИТИСЯ БОРД */}\n        <Suspense fallback={<div>Loading....</div>}>\n          <Outlet />\n        </Suspense>\n        {isOpen && <ModalBody />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["useLockBodyScroll","React","originalStyle","window","getComputedStyle","document","body","overflow","style","Test","_ref","id","dispatch","useDispatch","cards","title","boardId","columnId","_jsxs","className","css","children","_jsx","onClick","closeModalHandler","closeModal","map","col","filter","card","ModalBody","modalContent","selectedElId","useSelector","state","modal","firstRender","useRef","useEffect","current","addEventListener","handleKeyDown","removeEventListener","e","code","target","currentTarget","backdropClose","content","handleContent","Board","_Fragment","width","height","href","concat","sprite","Sidebar","sideBar","titleBox","iconBox","logoIconContainer","iconLogo","bordBox","bordTitle","buttonBox","buttonText","buttonCreate","iconCreate","bordList","helpBox","helpTextBox","imgHelp","srcSet","pot","pot2x","alt","helpText","helpTextLink","buttonHelp","iconHelp","helpButtonText","buttonLogOut","iconLogOut","logOutButtonText","DefaultBoard","UserMenu","test","ThemeSelect","menuTheme","titleMenuTheme","iconChevronDown","Navigation","openMenu","type","HomePage","isOpen","location","useLocation","console","log","pathname","Suspense","fallback","Outlet"],"sourceRoot":""}