{"version":3,"file":"static/js/585.44dff8a7.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/components/ScreensPage/ScreensPage.module.css?d472","webpack://task-pro/./src/components/dashboard/HeaderDashboard/HeaderDashboard.module.css?4f8c","webpack://task-pro/./src/components/dashboard/Filters/Filters.module.css?4d8b","webpack://task-pro/./src/components/Forms/FiltersForm/FiltersForm.module.css?0d6b","components/Forms/FiltersForm/FiltersForm.jsx","components/dashboard/Filters/Filters.jsx","components/dashboard/HeaderDashboard/HeaderDashboard.jsx","webpack://task-pro/./src/components/dashboard/MainDashboard/MainDashboard.module.css?9d01","webpack://task-pro/./src/components/Column/Column.module.css?790f","components/Column/Column.jsx","webpack://task-pro/./src/components/Card/Card.module.css?4f06","components/Card/Card.jsx","components/dashboard/MainDashboard/MainDashboard.jsx","components/ScreensPage/ScreensPage.jsx","redux/board/selectors.js","utils/priorityObject.js","images/card/background-desktop|sync|/^/.//.*/.jpg$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"screensWrap\":\"ScreensPage_screensWrap__KpiXB\"};","// extracted by mini-css-extract-plugin\nexport default {\"headDashWrap\":\"HeaderDashboard_headDashWrap__-gjPa\",\"dashboardName\":\"HeaderDashboard_dashboardName__GHex9\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuFilterTheme\":\"Filters_menuFilterTheme__ctfu3\",\"filterButton\":\"Filters_filterButton__ZOUmh\",\"filterIcon\":\"Filters_filterIcon__yhbRW\"};","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"FiltersForm_formWrap__p4sxw\",\"menuListHidden\":\"FiltersForm_menuListHidden__VzisA\",\"formTitle\":\"FiltersForm_formTitle__c6RsE\",\"filterLine\":\"FiltersForm_filterLine__aj1e8\",\"iconsForm\":\"FiltersForm_iconsForm__7D3Wa\",\"labelTitle\":\"FiltersForm_labelTitle__lsSuj\",\"iconsTitle\":\"FiltersForm_iconsTitle__BdgCK\",\"iconsAll\":\"FiltersForm_iconsAll__bo9EB\",\"iconsWrap\":\"FiltersForm_iconsWrap__ksC0g\",\"container\":\"FiltersForm_container__Wsogl\",\"iconName\":\"FiltersForm_iconName__8oXr0\",\"checkmark\":\"FiltersForm_checkmark__oO2Ys\",\"noPriority\":\"FiltersForm_noPriority__31C7M\",\"lowPriority\":\"FiltersForm_lowPriority__rCTeT\",\"medPriority\":\"FiltersForm_medPriority__od2A-\",\"highPriority\":\"FiltersForm_highPriority__HSHDa\"};","import css from './FiltersForm.module.css';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst priority = ['without', 'low', 'medium', 'high'];\nconst formFiltersSchema = Yup.object().shape({\n  priority: Yup.string().oneOf(priority),\n});\n\nexport const FiltersForm = ({ onSelectClose, isOpen }) => {\n  return (\n    <div\n      data-popup=\"menu\"\n      className={`${css.formWrap} ${!isOpen && css.menuListHidden}`}\n    >\n      <h2 className={css.formTitle}>Filters</h2>\n      <div className={css.filterLine}></div>\n      <Formik\n        initialValues={{\n          priority: 'without',\n        }}\n        validationSchema={formFiltersSchema}\n      >\n        {({ handleSubmit, setFieldValue }) => (\n          <form className={css.from} onSubmit={handleSubmit}>\n            <fieldset className={css.iconsForm}>\n              <div className={css.labelTitle}>\n                <legend className={css.iconsTitle}>Label color</legend>\n                <button className={css.iconsAll}>Show all</button>\n              </div>\n\n              <div className={css.iconsWrap}>\n                <label className={css.container}>\n                  <input type=\"radio\" id=\"1\" name=\"icon\" value=\"no-priority\" />\n                  <span className={`${css.checkmark} ${css.noPriority}`}></span>\n                  <p className={css.iconName}>Without priority</p>\n                </label>\n                <label className={css.container}>\n                  <input type=\"radio\" id=\"2\" name=\"icon\" value=\"low-priority\" />\n                  <span\n                    className={`${css.checkmark} ${css.lowPriority}`}\n                  ></span>\n                  <p className={css.iconName}>Low</p>\n                </label>\n                <label className={css.container}>\n                  <input type=\"radio\" id=\"3\" name=\"icon\" value=\"med-priority\" />\n                  <span\n                    className={`${css.checkmark} ${css.medPriority}`}\n                  ></span>\n                  <p className={css.iconName}>Medium</p>\n                </label>\n                <label className={css.container}>\n                  <input\n                    type=\"radio\"\n                    id=\"4\"\n                    name=\"icon\"\n                    value=\"high-priority\"\n                  />\n                  <span\n                    className={`${css.checkmark} ${css.highPriority}`}\n                  ></span>\n                  <p className={css.iconName}>High</p>\n                </label>\n              </div>\n            </fieldset>\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import css from './Filters.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport { FiltersForm } from 'components/Forms/FiltersForm/FiltersForm';\n\nconst Filters = () => {\n  const [isFiltersOpen, setIsFiltersOpen] = useState(false);\n\n  useEffect(() => {\n    if (isFiltersOpen) {\n      document.body.addEventListener('click', handleFiltersClose);\n    }\n    return () => {\n      document.body.removeEventListener('click', handleFiltersClose);\n    };\n  });\n\n  const handleFiltersOpen = e => {\n    if (e.target.popup === 'menu' || e.target.popup === 'el') {\n      return;\n    }\n    setIsFiltersOpen(prev => !prev);\n  };\n\n  const handleFiltersClose = e => {\n    if (\n      e.target.dataset.popup !== 'popupFiltersBtn' &&\n      e.target.popup !== 'menu' &&\n      e.target.popup !== 'el'\n    ) {\n      setIsFiltersOpen(prev => !prev);\n    }\n  };\n\n  const onFiltersClose = () => {\n    setIsFiltersOpen(prev => !prev);\n  };\n\n  return (\n    <div\n      data-popup=\"popupFiltersBtn\"\n      onClick={e => handleFiltersOpen(e)}\n      className={css.menuFilterTheme}\n    >\n      <button data-popup=\"popupFiltersBtn\" className={css.filterButton}>\n        <svg data-popup=\"popupFiltersBtn\" className={css.filterIcon}>\n          <use data-popup=\"popupFiltersBtn\" href={`${sprite}#icon-filter`} />\n        </svg>\n        Filters\n      </button>\n      <FiltersForm onSelectClose={onFiltersClose} isOpen={isFiltersOpen} />\n    </div>\n  );\n};\n\nexport default Filters;\n","import css from '../HeaderDashboard/HeaderDashboard.module.css';\nimport Filters from '../Filters/Filters';\n\nconst HeaderDashboard = ({ board }) => {\n  return (\n    <div className={css.headDashWrap}>\n      <h2 className={css.dashboardName}>{board?.name}</h2>\n      <Filters />\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"boardWrap\":\"MainDashboard_boardWrap__2u1Ba\",\"columnsList\":\"MainDashboard_columnsList__iP56w\",\"addColumnBtn\":\"MainDashboard_addColumnBtn__6+fG2\",\"addColumnWrap\":\"MainDashboard_addColumnWrap__j-UdJ\",\"addColumnIcon\":\"MainDashboard_addColumnIcon__qVRIe\",\"addColumnTitle\":\"MainDashboard_addColumnTitle__VFj8z\"};","// extracted by mini-css-extract-plugin\nexport default {\"columnWrap\":\"Column_columnWrap__G3hGv\",\"columnTitleWrap\":\"Column_columnTitleWrap__r2jmr\",\"columnTitle\":\"Column_columnTitle__JxUiI\",\"columnBtnWrap\":\"Column_columnBtnWrap__t2MEK\",\"columnButton\":\"Column_columnButton__qAW6n\",\"columnIcon\":\"Column_columnIcon__6CN5T\",\"columnList\":\"Column_columnList__04PMN\",\"columnAddButton\":\"Column_columnAddButton__0dcN0\",\"addColumnIcon\":\"Column_addColumnIcon__txMZ3\",\"addColumnTitle\":\"Column_addColumnTitle__mJxvp\"};","import css from './Column.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { openModal } from '../../redux/modalSlice';\nimport { useAutoAnimate } from '@formkit/auto-animate/react'\nimport { useDispatch } from 'react-redux';\nimport { setCurrentColumnId } from '../../redux/column/columnSlice';\nimport { deleteColumn } from '../../redux/column/columnThunk';\n\nexport const Column = ({ children, column }) => {\n  const dispatch = useDispatch();\n\n  const [listRef] = useAutoAnimate()\n  const handleAddCard = () => {\n    dispatch(openModal({ content: 'add-card' }));\n    dispatch(setCurrentColumnId(column._id))\n  };\n\n  const handleColumnDelete = () =>{\n    dispatch(deleteColumn(column._id))\n  }\n\n  const handleEditColumn = () => {\n    dispatch(openModal({ content: 'edit-column', id:`${column._id}`}));\n  };\n\n  return (\n    <li className={css.columnWrap}>\n      <div>\n        <div className={css.columnTitleWrap}>\n          <h2 className={css.columnTitle}>{column.title}</h2>\n          <div className={css.columnBtnWrap}>\n            <button className={css.columnButton}>\n              <svg onClick={handleEditColumn} className={css.columnIcon}>\n                <use href={`${sprite}#icon-pencil`}></use>\n              </svg>\n            </button>\n            <button onClick={handleColumnDelete} className={css.columnButton}>\n              <svg className={css.columnIcon}>\n                <use href={`${sprite}#icon-trash`}></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n        <ul className={css.columnList} ref={listRef}>{children}</ul>\n\n        <button onClick={handleAddCard} className={css.columnAddButton}>\n          <svg className={css.addColumnIcon}>\n            <use href={`${sprite}#icon-plus`}></use>\n          </svg>\n          <p className={css.addColumnTitle}>Add Card</p>\n        </button>\n      </div>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cardHeight\":\"Card_cardHeight__tSm4h\",\"cardContainer\":\"Card_cardContainer__aSrje\",\"cardWrapper\":\"Card_cardWrapper__TvahP\",\"cardTitle\":\"Card_cardTitle__4G9aB\",\"cardDiscription\":\"Card_cardDiscription__y7esn\",\"cardFooterWrapper\":\"Card_cardFooterWrapper__lWLCd\",\"cardFooter\":\"Card_cardFooter__bN4q3\",\"cardFooterTitle\":\"Card_cardFooterTitle__EwDak\",\"cardPriorityInfo\":\"Card_cardPriorityInfo__OS-yk\",\"cardPriorityCircle\":\"Card_cardPriorityCircle__Ah0Z+\",\"cardPriorityName\":\"Card_cardPriorityName__PBWEl\",\"cardDeadlineDate\":\"Card_cardDeadlineDate__72wFp\",\"cardIconsList\":\"Card_cardIconsList__ZGvEC\",\"cardIconItem\":\"Card_cardIconItem__8AccS\",\"cardIconButton\":\"Card_cardIconButton__s4c7h\",\"cardSvg\":\"Card_cardSvg__iWUIX\"};","import css from './Card.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../redux/card/cardThunk';\nimport { priorityEnum } from 'utils/priorityObject';\n\n\nexport const Card = ({card}) =>{\n    const dispatch = useDispatch()\n    const priorityColor = priorityEnum.find(pr => pr.title === card.priority)\n    const handleDeleteCard = (e) =>{\n        dispatch(deleteCard(card._id))\n    }\n    //Логіка: Дані передаються в компонент з отриманого з бекенду юзера в тому числі додаткові класи; дзвіночок створюється за умови якщо сьогоднішня дата на 1 більша за дату дедлайну; додати функції при кліку на іконки \n    return (\n        <div className={css.cardHeight}>\n            <div style={{backgroundColor: `${priorityColor.color}`}} className={css.cardWrapper}>\n                <div className= {css.cardContainer}>\n                    <h4 className={css.cardTitle}>{card.title}</h4>\n                    <p className={css.cardDiscription}>{card.description}</p>\n                    <div className={css.cardFooterWrapper}>\n                        <div className={css.cardFooter}>\n                            <div className={css.cardPriority}>\n                                <h5 className={css.cardFooterTitle}>Priority</h5>\n                                <div className={css.cardPriorityInfo}>\n                                    <div style={{backgroundColor: `${priorityColor.color}`}} className={`${css.cardPriorityCircle}`}></div>\n                                    <p className={css.cardPriorityName}>{card.priority.split(' ')[0]}</p>\n                                </div>\n                            </div>\n                            <div className={css.cardDeadline}>\n                                <h5 className={css.cardFooterTitle}>Deadline</h5>\n                                <p className={css.cardDeadlineDate}>{card.deadline.split(\"T\")[0]}</p>\n                            </div>\n                            <ul className={css.cardIconsList}>\n                                <li className={css.cardIconItem}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-bell`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem} >\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-arrow-in-circle`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem}>\n                                    <button type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-pencil`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                                <li className={css.cardIconItem}>\n                                    <button onClick={e=>handleDeleteCard(e)} type='button' className={css.cardIconButton}>\n                                    <svg className={css.cardSvg}>\n                                        <use href={`${sprite}#icon-trash`}/>\n                                    </svg>\n                                    </button>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n    </div>\n)}","import css from './MainDashboard.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { Column } from 'components/Column/Column';\nimport { Card } from 'components/Card/Card';\nimport { useEffect } from 'react';\nimport { useAutoAnimate } from '@formkit/auto-animate/react'\nimport { openModal } from '../../../redux/modalSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getCards} from '../../../redux/card/cardThunk';\nimport {getColumns} from '../../../redux/column/columnThunk';\n\nconst MainDashboard = ({ board }) => {\n  const dispatch = useDispatch();\n  const stateColumns = useSelector(state => state.columns.columns)\n  const stateCards = useSelector(state => state.cards.cards)\n  const [listRef] = useAutoAnimate()\n\n  useEffect(() => {\n    if(board){\n      dispatch(getColumns(board._id))\n      dispatch(getCards(board._id))\n    }\n  }, [dispatch, board]);\n\n\n  const handleAddColumn = () => {\n    dispatch(openModal({ content: 'add-column' }));\n  };\n\n  return (\n    <div className={css.boardWrap}>\n      <ul className={css.columnsList} ref={listRef}>\n        {stateColumns && stateColumns.map(col => {\n          return (\n            <Column key={col._id} column={col} >\n              {stateCards && stateCards\n                .filter(card => card.columnId === col._id)\n                .map(card => {\n                  return <Card key={card._id} card={card} />;\n                })}\n            </Column>\n          );\n        })}\n        <button onClick={handleAddColumn} className={css.addColumnBtn}>\n          <div className={css.addColumnWrap}>\n            <svg className={css.addColumnIcon}>\n              <use href={`${sprite}#icon-plus`}></use>\n            </svg>\n            <p className={css.addColumnTitle}>Add another column</p>\n          </div>\n        </button>\n      </ul>\n    </div>\n  );\n};\n\nexport default MainDashboard;\n","import css from './ScreensPage.module.css';\nimport { useParams } from 'react-router-dom';\nimport { selectBoards } from '../../redux/board/selectors';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { setCurrentBoardId } from '../../redux/board/boardSlice';\nimport { useDispatch } from 'react-redux';\n\nimport HeaderDashboard from '../dashboard/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from '../dashboard/MainDashboard/MainDashboard';\n\nconst ScreensPage = () => {\n  const {boardId} = useParams()\n  const boards = useSelector(selectBoards);\n  const currentBoard = boards.find((board) => board._id === boardId)\n  const bgImg = require(`../../images/card/background-desktop/${currentBoard?.background ?? \"2\"}.jpg`)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setCurrentBoardId(boardId))\n  })\n  \n  return (\n    <div style={{backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${bgImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\"}} className={css.screensWrap}>\n        <HeaderDashboard board={currentBoard} />\n        <MainDashboard board = {currentBoard} />\n    </div>\n  );\n};\n\nexport default ScreensPage;\n\n// import css from './ScreensPage.module.css';\n\n// import { useLocation, useNavigate, useParams } from 'react-router-dom';\n// import { useEffect, useRef, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import HeaderDashboard from '../HeaderDashboard/HeaderDashboard';\n// import MainDashboard from '../MainDashboard/MainDashboard';\n\n// import { selectAllDashboards } from '../../redux/dashboard/dashboardsSelectors';\n\n// const ScreensPage = () => {\n//   const [loading, setLoading] = useState(false);\n//   const [currentPageName, setCurrentPageName] = useState('');\n//   const didMount = useRef(true);\n//   const { boardName } = useParams();\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const allDashboards = useSelector(selectAllDashboards);\n//   const dispatch = useDispatch();\n//   const [boards, setBoards] = useState(allDashboards);\n\n//   const lookBoard = () => {\n//     const all = allDashboards.filter(dashboard => {\n//       return dashboard.title === boardName;\n//     });\n\n//     return all;\n//   };\n\n//   useEffect(() => {\n//     setCurrentPageName(boardName);\n//   }, [location.pathname, boardName]);\n\n//   useEffect(() => {\n//     setBoards(allDashboards);\n//     if (didMount.current !== true && boardName !== currentPageName) {\n//       return;\n//     }\n//     if (allDashboards.length === 0) {\n//       navigate(`/home`, {\n//         replace: true,\n//       });\n//     }\n//     if (allDashboards.length > 0 && !boardName) {\n//       setLoading(true);\n//       const lastDashboard = allDashboards[allDashboards.length - 1] ?? '';\n//       setCurrentPageName(lastDashboard.title);\n//       navigate(`/home/${lastDashboard.title}`, {\n//         replace: true,\n//         state: { id: lastDashboard._id },\n//       });\n//       setLoading(false);\n//     }\n//     didMount.current = false;\n//   }, [\n//     allDashboards,\n//     navigate,\n//     boardName,\n//     currentPageName,\n//     boards.length,\n//     dispatch,\n//   ]);\n\n//   return (\n//     <div\n//       className={css.test}\n//       $bcgurl={\n//         lookBoard().length > 0 ? lookBoard()[0].backgroundURL : undefined\n//       }\n//     >\n//       {loading ? (\n//         <div>Loading....</div>\n//       ) : (\n//         boardName !== undefined && (\n//           <div>\n//             <HeaderDashboard boardName={boardName} />\n//             <MainDashboard />\n//           </div>\n//         )\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ScreensPage;\n","export const selectBoards = state => state.boards.boards;\n\nexport const selectCurrentBoard = state => state.boards.currentBoard;\n\nexport const selectIsLoading = state => state.boards.isLoading;\n\nexport const selectError = state => state.boards.error;","export const priorityEnum = [\n    {title: 'Without priority', color: \"#595959\"},\n    {title: 'Low', color: \"#8fa1d0\"},\n    {title: 'Medium', color: \"#e09cb5\"},\n    {title: 'High', color: \"#bedbb0\"}];","var map = {\n\t\"./1.jpg\": 9761,\n\t\"./10.jpg\": 605,\n\t\"./11.jpg\": 8864,\n\t\"./12.jpg\": 2831,\n\t\"./13.jpg\": 2802,\n\t\"./14.jpg\": 49,\n\t\"./15.jpg\": 6452,\n\t\"./16.jpg\": 2675,\n\t\"./2.jpg\": 7622,\n\t\"./2@2x.jpg\": 8374,\n\t\"./3.jpg\": 2387,\n\t\"./4.jpg\": 2224,\n\t\"./5.jpg\": 3965,\n\t\"./6.jpg\": 6162,\n\t\"./7.jpg\": 2543,\n\t\"./8.jpg\": 1084,\n\t\"./9.jpg\": 8873,\n\t\"./bay@2x.jpg\": 6624,\n\t\"./boat2@2x.jpg\": 9964,\n\t\"./boat@2x.jpg\": 3996,\n\t\"./bubbles@2x.jpg\": 6539,\n\t\"./capadoki@2x.jpg\": 4064,\n\t\"./clouds@2x.jpg\": 5404,\n\t\"./flowers@2x.jpg\": 1072,\n\t\"./leaves@2x.jpg\": 4938,\n\t\"./moon@2x.jpg\": 2655,\n\t\"./mountains@2x.jpg\": 8656,\n\t\"./sand-cave@2x.jpg\": 4708,\n\t\"./trailer@2x.jpg\": 9991,\n\t\"./tree@2x.jpg\": 1506,\n\t\"./yongmoon@2x.jpg\": 20\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6741;"],"names":["formFiltersSchema","Yup","shape","priority","oneOf","FiltersForm","_ref","onSelectClose","isOpen","_jsxs","className","concat","css","formWrap","menuListHidden","children","_jsx","formTitle","filterLine","Formik","initialValues","validationSchema","_ref2","handleSubmit","setFieldValue","from","onSubmit","iconsForm","labelTitle","iconsTitle","iconsAll","iconsWrap","container","type","id","name","value","checkmark","noPriority","iconName","lowPriority","medPriority","highPriority","Filters","isFiltersOpen","setIsFiltersOpen","useState","useEffect","document","body","addEventListener","handleFiltersClose","removeEventListener","e","target","dataset","popup","prev","onClick","handleFiltersOpen","href","sprite","onFiltersClose","board","Column","column","dispatch","useDispatch","listRef","useAutoAnimate","title","handleEditColumn","openModal","content","_id","handleColumnDelete","deleteColumn","ref","handleAddCard","setCurrentColumnId","Card","card","priorityColor","priorityEnum","find","pr","cardHeight","style","backgroundColor","color","cardWrapper","cardContainer","cardTitle","cardDiscription","description","cardFooterWrapper","cardFooter","cardPriority","cardFooterTitle","cardPriorityInfo","cardPriorityCircle","cardPriorityName","split","cardDeadline","cardDeadlineDate","deadline","cardIconsList","cardIconItem","cardIconButton","cardSvg","deleteCard","stateColumns","useSelector","state","columns","stateCards","cards","getColumns","getCards","map","col","filter","columnId","handleAddColumn","ScreensPage","_currentBoard$backgro","boardId","useParams","currentBoard","selectBoards","bgImg","require","background","setCurrentBoardId","backgroundImage","backgroundPosition","backgroundSize","HeaderDashboard","MainDashboard","boards","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}