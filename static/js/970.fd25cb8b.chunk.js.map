{"version":3,"file":"static/js/970.fd25cb8b.chunk.js","mappings":"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","sources":["webpack://task-pro/./src/pages/HomePage/HomePage.module.css?5baa","webpack://task-pro/./src/components/Modals/ModalBody.module.css?f007","webpack://task-pro/./src/components/Forms/BoardForm/BoardForm.module.css?b03b","components/Forms/BoardForm/NewBoardForm.jsx","components/Forms/BoardForm/EditBoardForm.jsx","webpack://task-pro/./src/components/Forms/Column/ColumnForm.module.css?42aa","components/Forms/Column/AddColumnForm.jsx","components/Forms/Column/EditColumnForm.jsx","webpack://task-pro/./src/components/Forms/Help/NeedHelpForm.module.css?6d36","services/needHelpService.js","redux/needHelp/needHelpThunks.js","components/Forms/Help/NeedHelpForm.jsx","redux/auth/selector.js","components/Forms/UserForm/ImgInput.jsx","webpack://task-pro/./src/components/Forms/UserForm/UserForm.module.css?c4e1","components/Forms/UserForm/UserForm.jsx","webpack://task-pro/./src/components/Calendar/Calendar.module.css?a426","components/Calendar/Calendar.jsx","webpack://task-pro/./src/components/Forms/CardForm/AddCard.module.css?320f","components/Forms/CardForm/AddCard.jsx","components/Forms/CardForm/EditCard.jsx","components/Warning/Warning.module.css","components/Warning/WarningList.jsx","components/Warning/WarningDell.jsx","components/Modals/ModalBody.jsx","webpack://task-pro/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://task-pro/./src/components/Sidebar/Board/Board.module.css?228b","components/Sidebar/Board/Board.jsx","components/Sidebar/Sidebar.jsx","webpack://task-pro/./src/components/DefaultBoard/DefaultBoard.module.css?a9e5","components/DefaultBoard/DefaultBoard.jsx","webpack://task-pro/./src/components/Navigation/Navigation.module.css?4bf2","webpack://task-pro/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://task-pro/./src/components/ThemeSelect/ThemeSelect.module.css?c8b0","components/ThemeSelect/ThemePopup.jsx","components/ThemeSelect/ThemeSelect.jsx","components/Navigation/Navigation.jsx","pages/HomePage/HomePage.jsx","redux/board/selectors.js","utils/priorityObject.js","images/card/background-icons|sync|/^/.//.*/.png$"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"HomePage_main__OiWfi\",\"mainPage\":\"HomePage_mainPage__BoNlQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBackdrop\":\"ModalBody_modalBackdrop__KSTDi\",\"modalBody\":\"ModalBody_modalBody__z2P-b\",\"testModalBody\":\"ModalBody_testModalBody__Lae1F\"};","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"BoardForm_formWrap__Mo0Ek\",\"formTitle\":\"BoardForm_formTitle__usegY\",\"formInput\":\"BoardForm_formInput__BAA1o\",\"iconsForm\":\"BoardForm_iconsForm__Vh1US\",\"iconsTitle\":\"BoardForm_iconsTitle__F+0eo\",\"iconsWrap\":\"BoardForm_iconsWrap__mqvgp\",\"bgIconsWrap\":\"BoardForm_bgIconsWrap__QP4eA\",\"iconInput\":\"BoardForm_iconInput__pMRLe\",\"container\":\"BoardForm_container__u+mXS\",\"bgContainer\":\"BoardForm_bgContainer__pPJAN\",\"checkmark\":\"BoardForm_checkmark__O0h40\",\"bgCheckmark\":\"BoardForm_bgCheckmark__M+lA3\",\"formButton\":\"BoardForm_formButton__z8EY6\",\"iconWrap\":\"BoardForm_iconWrap__7hZa6\",\"buttonIcon\":\"BoardForm_buttonIcon__biGbW\"};","import css from './BoardForm.module.css';\nimport { useState } from 'react';\nimport { closeModal } from '../../../redux/modalSlice';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { addBoard } from '../../../redux/board/boardThunks';\n\nexport const NewBoardForm = () => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [iconValue, setIconValue] = useState('four-circles');\n  const [bgValue, setBgValue] = useState('1');\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleIconChange = e => {\n    setIconValue(e.target.value);\n  };\n\n  const handleBgChange = e => {\n    setBgValue(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    const newBoard = {\n      name: title,\n      icon: iconValue,\n      background: bgValue,\n    };\n\n    dispatch(addBoard(newBoard));\n    e.target.reset();\n    dispatch(closeModal());\n  };\n\n  const icValues = [\n    'four-circles',\n    'eye',\n    'star',\n    'loading',\n    'puzzle',\n    'container',\n    'logo',\n    'hexagon',\n  ];\n  const bgValues = [];\n\n  for (let i = 1; i <= 16; i++) {\n    bgValues.push(`${i}`);\n  }\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>New Board</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Icons</legend>\n          <div className={css.iconsWrap}>\n            {icValues.map(ic => {\n              return (\n                <label key={ic} className={css.container}>\n                  <input\n                    onChange={e => handleIconChange(e)}\n                    type=\"radio\"\n                    id={ic}\n                    name=\"icon\"\n                    value={ic}\n                    required\n                    checked={iconValue === ic}\n                  />\n                  <svg className={css.checkmark}>\n                    <use href={`${sprite}#icon-${ic}`} />\n                  </svg>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Background</legend>\n          <div className={css.bgIconsWrap}>\n            {bgValues.map(bg => {\n              return (\n                <label key={bg} className={css.bgContainer}>\n                  <input\n                    onChange={e => handleBgChange(e)}\n                    type=\"radio\"\n                    id={bg}\n                    name=\"bg\"\n                    value={bg}\n                    required\n                    checked={bgValue === bg}\n                  />\n                  <img\n                    className={css.bgCheckmark}\n                    width=\"28\"\n                    height=\"28\"\n                    src={require(`../../../images/card/background-icons/${bg}.png`)}\n                    alt=\"\"\n                  />\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Create\n        </button>\n      </form>\n    </div>\n  );\n};\n","import css from './BoardForm.module.css';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateBoard } from '../../../redux/board/boardThunks';\nimport { closeModal } from '../../../redux/modalSlice';\nimport sprite from '../../../images/sprite.svg';\n\nexport const EditBoardForm = () => {\n  const { selectedElId } = useSelector(state => state.modal);\n  const stateBoards = useSelector(state => state.boards.boards)\n  const currentBoard = stateBoards.find(brd=> brd._id === selectedElId)\n  const [title, setTitle] = useState(currentBoard.name);\n  const [iconValue, setIconValue] = useState(currentBoard.icon);\n  const [bgValue, setBgValue] = useState(currentBoard.background);\n\n  const dispatch = useDispatch()\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleIconChange = e => {\n    setIconValue(e.target.value);\n  };\n\n  const handleBgChange = e => {\n    setBgValue(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    const brdId = currentBoard._id\n    e.preventDefault();\n    const updatedBoard= {\n      name: title,\n      icon: iconValue,\n      background: bgValue\n    }\n    dispatch(updateBoard({id: brdId, updatedBoard}))\n    dispatch(closeModal())\n  };\n\n  const icValues = [\n    'four-circles',\n    'eye',\n    'star',\n    'loading',\n    'puzzle',\n    'container',\n    'logo',\n    'hexagon',\n  ];\n  const bgValues = [];\n\n  for (let i = 1; i <= 16; i++) {\n    bgValues.push(`${i}`);\n  }\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Edit Board</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Icons</legend>\n          <div className={css.iconsWrap}>\n            {icValues.map(ic => {\n              return (\n                <label key={ic} className={css.container}>\n                  <input\n                    onChange={e => handleIconChange(e)}\n                    type=\"radio\"\n                    id={ic}\n                    name=\"icon\"\n                    value={ic}\n                    checked={iconValue === ic}\n                  />\n                  <svg className={css.checkmark}>\n                    <use href={`${sprite}#icon-${ic}`} />\n                  </svg>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Background</legend>\n          <div className={css.bgIconsWrap}>\n            {bgValues.map(bg => {\n              return (\n                <label key={bg} className={css.bgContainer}>\n                  <input\n                    onChange={e => handleBgChange(e)}\n                    type=\"radio\"\n                    id={`bg${bg}`}\n                    name=\"bg\"\n                    value={bg}\n                    checked={bgValue === bg}\n                  />\n                  <img\n                    className={css.bgCheckmark}\n                    width=\"20\"\n                    height=\"20\"\n                    src={require(`../../../images/card/background-icons/${bg}.png`)}\n                    alt=\"\"\n                  />\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Edit\n        </button>\n      </form>\n    </div> \n  );\n\n  \n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"ColumnForm_formWrap__qlgNz\",\"formTitle\":\"ColumnForm_formTitle__brkqM\",\"formInput\":\"ColumnForm_formInput__TwvzG\",\"iconsForm\":\"ColumnForm_iconsForm__czjpY\",\"iconsTitle\":\"ColumnForm_iconsTitle__9b450\",\"iconsWrap\":\"ColumnForm_iconsWrap__xwppe\",\"bgIconsWrap\":\"ColumnForm_bgIconsWrap__9BKMJ\",\"iconInput\":\"ColumnForm_iconInput__gaYW9\",\"container\":\"ColumnForm_container__tcg6N\",\"bgContainer\":\"ColumnForm_bgContainer__+9VXy\",\"checkmark\":\"ColumnForm_checkmark__0iObs\",\"bgCheckmark\":\"ColumnForm_bgCheckmark__SmlZ-\",\"formButton\":\"ColumnForm_formButton__SgVLS\",\"iconWrap\":\"ColumnForm_iconWrap__duW4E\",\"buttonIcon\":\"ColumnForm_buttonIcon__vdyo9\"};","import css from './ColumnForm.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../../../images/sprite.svg';\nimport { postColumn } from '../../../redux/column/columnThunk';\nimport { closeModal } from '../../../redux/modalSlice';\n\nexport const AddColumnForm= () => {\n  const [title, setTitle] = useState('');\n  const currentBoardId = useSelector(state => state.boards.currentBoardId)\n  const dispatch = useDispatch()\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    dispatch(postColumn({title: title, boardId: currentBoardId}))\n    dispatch(closeModal());\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Add column</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n","import css from './ColumnForm.module.css';\nimport { useState } from 'react';\nimport sprite from '../../../images/sprite.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateColumn } from '../../../redux/column/columnThunk';\nimport { closeModal } from '../../../redux/modalSlice';\n\nexport const EditColumnForm = () => {\n  const { selectedElId } = useSelector(state => state.modal);\n  const stateColumns = useSelector(state => state.columns.columns)\n  const currentColumn = stateColumns.find(col=> col._id === selectedElId)\n  \n  const [title, setTitle] = useState(currentColumn.title);\n  const dispatch = useDispatch()\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    dispatch(updateColumn({id: selectedElId, newColumn: {title}}))\n    dispatch(closeModal())\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Edit column</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n      <label htmlFor=\"name\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Title\"\n            onChange={e => handleChange(e)}\n            value={title}\n            className={css.formInput}\n            type=\"text\"\n            name=\"title\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"NeedHelpForm_formWrap__EDmnt\",\"formTitle\":\"NeedHelpForm_formTitle__sljth\",\"formInput\":\"NeedHelpForm_formInput__aVFhD\",\"commentInput\":\"NeedHelpForm_commentInput__niNh7\",\"iconsForm\":\"NeedHelpForm_iconsForm__lWWH+\",\"iconsTitle\":\"NeedHelpForm_iconsTitle__jyG0n\",\"iconsWrap\":\"NeedHelpForm_iconsWrap__ACPv5\",\"bgIconsWrap\":\"NeedHelpForm_bgIconsWrap__J5v05\",\"iconInput\":\"NeedHelpForm_iconInput__dJrxH\",\"container\":\"NeedHelpForm_container__DDitB\",\"bgContainer\":\"NeedHelpForm_bgContainer__6tAKR\",\"checkmark\":\"NeedHelpForm_checkmark__EFSAN\",\"bgCheckmark\":\"NeedHelpForm_bgCheckmark__OcOlh\",\"formButton\":\"NeedHelpForm_formButton__EmpLK\",\"iconWrap\":\"NeedHelpForm_iconWrap__iFh9P\",\"buttonIcon\":\"NeedHelpForm_buttonIcon__HFz9F\"};","import { instance } from './authService';\n\nexport const needHelp = async body => {\n  const { data } = await instance.post('/users/help', body);\n  return data;\n};\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { needHelp } from 'services/needHelpService';\n\nexport const needHelpAction = createAsyncThunk(\n  'help/needHelp',\n  async ({ email, comment }, thunkAPI) => {\n    try {\n      const data = await needHelp({\n        email,\n        comment,\n      });\n      toast.success('Your message was successfully send');\n      return data;\n    } catch (error) {\n      toast.error(\n        'Oops! Something went wrong! Please try reloading this page!'\n      );\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n","import { useDispatch } from 'react-redux';\nimport css from './NeedHelpForm.module.css';\nimport { useState } from 'react';\nimport { needHelpAction } from '../../../redux/needHelp/needHelpThunks';\n\n// case 'need-help':\n// return <NeedHelpForm />; при рендері у ModalBody спінер додати\n\nexport const NeedHelpForm = () => {\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleCommentChange = e => {\n    setComment(e.target.value);\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    if (email.trim() === '' || comment.trim() === '') return;\n\n    try {\n      dispatch(needHelpAction({ email, comment }));\n    } catch (error) {\n      console.log(error);\n    }\n\n    setEmail('');\n    setComment('');\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Need help</h2>\n      <form className={css.form} onSubmit={e => onSubmitForm(e)}>\n        <label htmlFor=\"email\">\n          <input\n            autoComplete=\"false\"\n            placeholder=\"Email\"\n            onChange={e => handleEmailChange(e)}\n            value={email}\n            className={css.formInput}\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n        </label>\n        <label htmlFor=\"comment\">\n          <textarea\n            placeholder=\"Comment\"\n            onChange={e => handleCommentChange(e)}\n            value={comment}\n            className={css.commentInput}\n            name=\"comment\"\n          />\n        </label>\n        <button type=\"submit\" className={css.formButton}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n};\n","export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectToken = state => state.auth.token;\n","import { useFormikContext } from 'formik';\n\nexport default function ImageInput({ handleChange }) {\n  const { setFieldValue } = useFormikContext();\n\n  const handleChooseFile = async e => {\n    const file = e.target.files?.[0];\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        handleChange(reader.result);\n      };\n      reader.readAsDataURL(file);\n      setFieldValue('avatar', file);\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        id=\"avatar\"\n        name=\"avatar\"\n        accept=\"image/*\"\n        hidden\n        onChange={handleChooseFile}\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"UserForm_formWrap__Wzihy\",\"formTitle\":\"UserForm_formTitle__otdTI\",\"avatar\":\"UserForm_avatar__waQVs\",\"userAvaWrapper\":\"UserForm_userAvaWrapper__k1VgJ\",\"userImg\":\"UserForm_userImg__tVfTy\",\"iconBtnPlus\":\"UserForm_iconBtnPlus__nmlZL\",\"iconPlus\":\"UserForm_iconPlus__MDJty\",\"fieldWrapper\":\"UserForm_fieldWrapper__oOtLf\",\"field\":\"UserForm_field__3YSzB\",\"btnSend\":\"UserForm_btnSend__Qj2O-\",\"iconBtn\":\"UserForm_iconBtn__H9XGh\",\"iconEye\":\"UserForm_iconEye__uJFvZ\",\"errorMessage\":\"UserForm_errorMessage__lrIyV\",\"userIconBtn\":\"UserForm_userIconBtn__FYCa-\",\"userIcon\":\"UserForm_userIcon__TYapX\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport { selectUser } from '../../../redux/auth/selector.js';\nimport { updaterUserData } from '../../../redux/auth/authThunks.js';\n\nimport ImageInput from './ImgInput.jsx';\nimport sprite from '../../../images/sprite.svg';\nimport css from './UserForm.module.css';\n\nconst emailRegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\nconst schema = Yup.object().shape({\n  avatar: Yup.mixed().test('fileType', 'Invalid file format', value => {\n    if (!value) return true;\n    const supportedFormats = ['image/png', 'image/jpeg', 'image/jpg'];\n    return supportedFormats.includes(value.type);\n  }),\n  name: Yup.string()\n    .min(2, 'Name must be at least 6 characters')\n    .max(32, 'Name must be no more than 16 characters')\n    .required('Name is required*'),\n  email: Yup.string()\n    .matches(emailRegExp, 'Enter a valid Email*')\n    .email('Enter a valid Email*')\n    .required('Email is required*'),\n  password: Yup.string()\n    .matches(/^(?=.*[a-z])/, 'Password must meet the requirements*')\n    .min(8, 'Password must be at least 6 characters')\n    .max(64, 'Password must be no more than 16 characters'),\n});\n\nexport const UserForm = () => {\n  const user = useSelector(selectUser);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [image, setPreviewImage] = useState(null);\n  const dispatch = useDispatch();\n\n  const handleImageChange = imageUrl => {\n    setPreviewImage(imageUrl);\n  };\n\n  const createUserDataFormData = infoUser => {\n    const formData = new FormData();\n    console.log(infoUser);\n    if (infoUser.password) {\n      formData.append('password', infoUser.password);\n    }\n    formData.append('name', infoUser.name);\n    formData.append('email', infoUser.email);\n    formData.append('avatarURL', infoUser.avatarURL);\n\n    return formData;\n  };\n\n  const handleSubmit = (values, { resetForm, setFieldValue }) => {\n    const newUserData = {\n      name: values.name,\n      email: values.email,\n      avatarURL: values.avatar,\n      ...(values.password && { password: values.password }),\n    };\n\n    const userData = createUserDataFormData(newUserData);\n\n    dispatch(updaterUserData(userData));\n\n    resetForm();\n\n    setFieldValue('name', values.name);\n    setFieldValue('email', values.email);\n  };\n\n  const handleClickPasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  return (\n    <>\n      <div className={css.formWrap}>\n        <h2 className={css.formTitle}>Edit profile</h2>\n        <Formik\n          initialValues={{\n            avatar: '',\n            avatarURL: user.avatarURL,\n            name: user.name,\n            email: user.email,\n            password: '',\n          }}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <div className={css.avatar}>\n              <label className={css.userAvaWrapper}>\n                {image || user.avatarURL ? (\n                  <img\n                    src={image ? image : user.avatarURL}\n                    alt=\"\"\n                    className={css.userImg}\n                    width={68}\n                  />\n                ) : (\n                  <div className={css.userIconBtn}>\n                    <svg className={css.userIcon}>\n                      <use href={`${sprite}#icon-user2`} />\n                    </svg>\n                  </div>\n                )}\n\n                <label htmlFor=\"avatar\" className={css.iconBtnPlus}>\n                  <ImageInput handleChange={handleImageChange} />\n\n                  <svg className={css.iconPlus} width=\"10\" height=\"10\">\n                    <use xlinkHref={`${sprite}#icon-plus`} />\n                  </svg>\n                </label>\n              </label>\n            </div>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n              />\n            </div>\n            <ErrorMessage name=\"name\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n              />\n            </div>\n            <ErrorMessage name=\"email\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <div className={css.fieldWrapper}>\n              <Field\n                className={css.field}\n                type={passwordVisible ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Create a password\"\n              />\n              {passwordVisible ? (\n                <button\n                  className={css.iconBtn}\n                  type=\"button\"\n                  onClick={handleClickPasswordVisibility}\n                >\n                  <svg className={css.iconEye} width=\"18\" height=\"18\">\n                    <use href={`${sprite}#icon-eye`} />\n                  </svg>\n                </button>\n              ) : (\n                <button\n                  className={css.iconBtn}\n                  type=\"button\"\n                  onClick={handleClickPasswordVisibility}\n                >\n                  <svg className={css.iconEye} width=\"18\" height=\"18\">\n                    <use href={`${sprite}#icon-eye`} />\n                  </svg>\n                </button>\n              )}\n            </div>\n            <ErrorMessage name=\"password\">\n              {errorMsg => <div className={css.errorMessage}>{errorMsg}</div>}\n            </ErrorMessage>\n            <button className={css.btnSend} type=\"submit\">\n              Send\n            </button>\n          </Form>\n        </Formik>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"react-datepicker\":\"Calendar_react-datepicker__aIvBg\",\"react-datepicker__input-container\":\"Calendar_react-datepicker__input-container__ATOa8\",\"react-datepicker__month-container\":\"Calendar_react-datepicker__month-container__iOOJ+\",\"react-datepicker__header\":\"Calendar_react-datepicker__header__JSD8l\",\"react-datepicker__current-month\":\"Calendar_react-datepicker__current-month__Dy2JK\",\"react-datepicker__navigation\":\"Calendar_react-datepicker__navigation__gjsop\",\"react-datepicker__day-name\":\"Calendar_react-datepicker__day-name__QhkFB\",\"react-datepicker__day\":\"Calendar_react-datepicker__day__gyfuL\",\"react-datepicker__day--selected\":\"Calendar_react-datepicker__day--selected__yrVtx\",\"react-datepicker__day--disabled\":\"Calendar_react-datepicker__day--disabled__UIKz5\",\"react-datepicker__time-name\":\"Calendar_react-datepicker__time-name__MUgtg\",\"react-datepicker__day--keyboard-selected\":\"Calendar_react-datepicker__day--keyboard-selected__XlOZz\",\"react-datepicker__month-text--keyboard-selected\":\"Calendar_react-datepicker__month-text--keyboard-selected__lMIox\",\"react-datepicker__quarter-text--keyboard-selected\":\"Calendar_react-datepicker__quarter-text--keyboard-selected__Vb42w\",\"react-datepicker__year-text--keyboard-selected\":\"Calendar_react-datepicker__year-text--keyboard-selected__7aYBU\",\"react-datepicker__week\":\"Calendar_react-datepicker__week__8ymPy\",\"react-datepicker__day--outside-month\":\"Calendar_react-datepicker__day--outside-month__SVg29\",\"calendar\":\"Calendar_calendar__vKx+D\",\"day\":\"Calendar_day__voALS\",\"header\":\"Calendar_header__Iy6a3\",\"inputCalendar\":\"Calendar_inputCalendar__Sc-4V\",\"weekDay\":\"Calendar_weekDay__qahmX\"};","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport { enGB } from 'date-fns/locale';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport css from './Calendar.module.css';\nimport { forwardRef } from 'react';\n\nconst CustomInputWrapper = forwardRef(({ value, onClick }, ref) => (\n  <button\n    type=\"button\"\n    className={css.inputCalendar}\n    onClick={onClick}\n    ref={ref}\n  >\n    {value}\n  </button>\n));\n\nexport function Calendar({ selectedDate, onDateChange }) {\n  const handleDateChange = date => {\n    onDateChange(date);\n  };\n\n  // const today = new Date();\n  // const isToday =\n  //   selectedDate.getDate() === today.getDate() &&\n  //   selectedDate.getMonth() === today.getMonth() &&\n  //   selectedDate.getFullYear() === today.getFullYear();\n\n  return (\n    <div>\n      <DatePicker\n        calendarClassName={css.calendar}\n        dayClassName={() => css.day}\n        renderCustomHeader={({\n          date,\n          decreaseMonth,\n          increaseMonth,\n          prevMonthButtonDisabled,\n          nextMonthButtonDisabled,\n        }) => (\n          <div className={css.header}>\n            <button\n              type=\"button\"\n              onClick={decreaseMonth}\n              disabled={prevMonthButtonDisabled}\n            >\n              {'<'}\n            </button>\n            <span>\n              {date.toLocaleDateString(enGB, {\n                month: 'long',\n                year: 'numeric',\n              })}\n            </span>\n            <button\n              type=\"button\"\n              onClick={increaseMonth}\n              disabled={nextMonthButtonDisabled}\n            >\n              {'>'}\n            </button>\n          </div>\n        )}\n        selected={selectedDate}\n        onChange={handleDateChange}\n        dateFormat=\"MMMM d\"\n        minDate={new Date()}\n        locale={enGB}\n        weekStartsOn={0}\n        popoverPlacement=\"bottom\"\n        customInput={<CustomInputWrapper />}\n        className={css.inputCalendar}\n        weekDayClassName={() => css.weekDay}\n      />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrap\":\"AddCard_formWrap__9zhI6\",\"formTitle\":\"AddCard_formTitle__CSCfd\",\"formInputTitle\":\"AddCard_formInputTitle__-wZxj\",\"formInput\":\"AddCard_formInput__J106k\",\"iconsForm\":\"AddCard_iconsForm__f8URq\",\"iconsWrap\":\"AddCard_iconsWrap__Qc161\",\"iconsTitle\":\"AddCard_iconsTitle__w-bIb\",\"formInputcal\":\"AddCard_formInputcal__L08n9\",\"Span\":\"AddCard_Span__4-tx7\",\"no\":\"AddCard_no__+VNMC\",\"low\":\"AddCard_low__oVkDn\",\"med\":\"AddCard_med__t4ZHr\",\"high\":\"AddCard_high__zfd21\",\"container\":\"AddCard_container__F7Kum\",\"checkmark\":\"AddCard_checkmark__3XP0U\",\"deadlineStyle\":\"AddCard_deadlineStyle__5OMP-\",\"deadlineContainer\":\"AddCard_deadlineContainer__LpbeE\",\"span\":\"AddCard_span__YWyk5\",\"AddButton\":\"AddCard_AddButton__KzT9F\",\"StylePlus\":\"AddCard_StylePlus__4RF-v\",\"formButton\":\"AddCard_formButton__+MQRW\",\"iconWrap\":\"AddCard_iconWrap__VCvZe\",\"buttonIcon\":\"AddCard_buttonIcon__egjKz\"};","import { useState } from 'react';\nimport { Calendar } from 'components/Calendar';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postCard } from '../../../redux/card/cardThunk';\nimport { closeModal } from '../../../redux/modalSlice';\nimport css from './AddCard.module.css';\nimport { priorityEnum } from 'utils/priorityObject';\n\nexport const AddCardForm = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const currBoardId = useSelector(state => state.boards.currentBoardId);\n  const currColumnId = useSelector(state => state.columns.currentColumnId);\n  const allCards = useSelector(state => state.cards.cards);\n  const currColumnCardsLgth = allCards.filter(\n    card => card.columnId === currColumnId\n  ).length;\n  const dispatch = useDispatch();\n\n  const handleTitleChange = e => {\n    console.log(allCards);\n    setTitle(e.target.value);\n  };\n\n  const handleDescChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleDataChange = date => {\n    setSelectedDate(date);\n  };\n\n  const handlePriorityChange = e => {\n    setPriority(e.target.value);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const index = currColumnCardsLgth;\n    const newCard = {\n      title,\n      description,\n      priority,\n      deadline: selectedDate.getTime(),\n      boardId: currBoardId,\n      columnId: currColumnId,\n      index: index,\n    };\n    console.log(newCard);\n    dispatch(postCard(newCard));\n    dispatch(closeModal());\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Add Card</h2>\n      <form className={css.from} onSubmit={handleSubmitForm}>\n        <input\n          className={css.formInputTitle}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={e => handleTitleChange(e)}\n          required\n        />\n        <p className={css.errMsg} name=\"title\" />\n        <label>\n          <textarea\n            className={css.formInput}\n            rows={4}\n            name=\"text\"\n            placeholder=\"Description\"\n            onChange={e => handleDescChange(e)}\n            required\n          />\n          <p className={css.errMsg} name=\"text\" />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Label color</legend>\n          <div className={css.iconsWrap}>\n            {priorityEnum.map(pr => {\n              return (\n                <label key={pr.title} className={css.container}>\n                  <input\n                    type=\"radio\"\n                    name=\"icon\"\n                    value={pr.title}\n                    onChange={e => handlePriorityChange(e)}\n                    required\n                  />\n                  <span\n                    style={{ backgroundColor: `${pr.color}` }}\n                    className={`${css.checkmark}`}\n                  ></span>\n                </label>\n              );\n            })}\n          </div>\n        </fieldset>\n        <p className={css.deadlineStyle}>Deadline</p>\n        <div className={css.deadlineContainer}>\n          {selectedDate.getDate() === new Date().getDate() &&\n          selectedDate.getMonth() === new Date().getMonth() &&\n          selectedDate.getFullYear() === new Date().getFullYear() ? (\n            <span className={css.span}> Today,</span>\n          ) : null}\n          <Calendar\n            selectedDate={selectedDate}\n            onDateChange={handleDataChange}\n          />\n        </div>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Calendar } from 'components/Calendar';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateCard } from '../../../redux/card/cardThunk';\nimport { closeModal } from '../../../redux/modalSlice';\nimport css from './AddCard.module.css';\nimport { priorityEnum } from 'utils/priorityObject';\n\nexport const EditCardForm = () => {\n  const { selectedElId } = useSelector(state => state.modal);\n  const stateCards = useSelector(state => state.cards.cards)\n  const currentCard = stateCards.find(card=> card._id === selectedElId)\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(currentCard.title);\n  const [description, setDescription] = useState(currentCard.description);\n  const [priority, setPriority] = useState(currentCard.priority);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const handleDescChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handlePriorityChange = e => {\n    setPriority(e.target.value);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const cardData = {\n      title,\n      description,\n      priority,\n      deadline: selectedDate.getTime(),\n    };\n    console.log(cardData)\n    dispatch(updateCard({id: currentCard._id, newCard: cardData}))\n    dispatch(closeModal());\n  };\n\n  return (\n    <div className={css.formWrap}>\n      <h2 className={css.formTitle}>Edit Card</h2>\n      <form className={css.from} onSubmit={handleSubmitForm}>\n        <input\n          className={css.formInputTitle}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={handleTitleChange}\n          required\n        />\n        <p className={css.errMsg} name=\"title\" />\n        <label>\n          <textarea\n            className={css.formInput}\n            rows={4}\n            name=\"text\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={handleDescChange}\n            required\n          />\n          <p className={css.errMsg} name=\"text\" />\n        </label>\n        <fieldset className={css.iconsForm}>\n          <legend className={css.iconsTitle}>Label color</legend>\n          <div className={css.iconsWrap}>\n            {priorityEnum.map(pr => (\n              <label key={pr.title} className={css.container}>\n                <input\n                  type=\"radio\"\n                  id={pr.title}\n                  name=\"icon\"\n                  value={pr.title}\n                  checked={priority === pr.title}\n                  onChange={handlePriorityChange}\n                  required\n                />\n                <span\n                  style={{ backgroundColor: `${pr.color}` }}\n                  className={`${css.checkmark}`}\n                ></span>\n              </label>\n            ))}\n          </div>\n        </fieldset>\n        <p className={css.deadlineStyle}>Deadline</p>\n        <div className={css.deadlineContainer}>\n          {selectedDate.getDate() === new Date().getDate() &&\n          selectedDate.getMonth() === new Date().getMonth() &&\n          selectedDate.getFullYear() === new Date().getFullYear() ? (\n            <span className={css.span}> Today,</span>\n          ) : null}\n          <Calendar\n            selectedDate={selectedDate}\n            onDateChange={date => {\n              setSelectedDate(date);\n            }}\n          />\n        </div>\n        <button type=\"submit\" className={css.formButton}>\n          <div className={css.iconWrap}>\n            <svg width=\"14\" height=\"14\" className={css.buttonIcon}>\n              <use href={`${sprite}#icon-plus`} />\n            </svg>\n          </div>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {};","import css from './Warning.module.css';\n\n\nexport const WarningList = ({confirm})=> {\n  return (\n    \n        <ul className={css.WList}>\n            <li className={css.WItem}><button className={css.WButton}type=\"button\" onClick={confirm}>Yes</button></li>\n            <li className={css.WItem}><button className={css.WButton}type=\"button\">No</button></li>\n        </ul>\n   \n  )\n}\n","\nimport css from './Warning.module.css';\nimport { WarningList } from './WarningList';\n// import { useDispatch} from 'react-redux';\n\n\nexport const WarningDell = ({title, del})=> {\n \n\n\n  return (\n    <div className={css.WDWrapper}>\n        <p className={css.WDText}>Are you sure you want to delete <span className={css.WDTitle}>${title}</span></p>\n        <WarningList confirm={del} />\n    </div>\n  )\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\nimport { closeModal } from '../../redux/modalSlice';\nimport { useLockBodyScroll } from '@uidotdev/usehooks';\nimport css from './ModalBody.module.css';\nimport { motion } from 'framer-motion';\nimport { NewBoardForm } from 'components/Forms/BoardForm/NewBoardForm';\nimport { EditBoardForm } from 'components/Forms/BoardForm/EditBoardForm';\nimport { AddColumnForm } from 'components/Forms/Column/AddColumnForm';\nimport { EditColumnForm } from 'components/Forms/Column/EditColumnForm';\nimport { NeedHelpForm } from 'components/Forms/Help/NeedHelpForm';\nimport { UserForm } from 'components/Forms/UserForm/UserForm';\nimport { AddCardForm } from 'components/Forms/CardForm/AddCard';\nimport { EditCardForm } from 'components/Forms/CardForm/EditCard';\nimport { WarningDell } from 'components/Warning/WarningDell';\n\nexport const ModalBody = () => {\n  const dispatch = useDispatch();\n  const { modalContent } = useSelector(state => state.modal); // ДІСТАЄ З РЕДАКСУ КОНТЕНТ\n  useLockBodyScroll(); //БЛОКУЄ СКРОЛ СТОРІНКИ\n\n  const firstRender = useRef(false);\n  useLockBodyScroll();\n\n  useEffect(() => {\n    if (firstRender.current === false) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      firstRender.current = false;\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      dispatch(closeModal()); //ЗАКРИТТЯ НА ЕСКЕЙП\n    }\n  };\n\n  const backdropClose = e => {\n    if (e.target === e.currentTarget) {\n      //ЗАКРИТТЯ НА БЕКДРОП\n      dispatch(closeModal());\n    }\n  };\n\n  const handleContent = content => {\n    //ФУНКЦІЯ ВИЗНАЧЕННЯ РЕДНЕРУ КОНЕТНТУ. КОЖЕН КЕЙС ПОТРІБНО ПРОПИСАТИ\n    switch (content) {\n      case 'add-board':\n        return <NewBoardForm />;\n      case 'edit-board':\n        return <EditBoardForm />;\n      case 'add-column':\n        return <AddColumnForm />;\n      case 'edit-column':\n        return <EditColumnForm />;\n      case 'need-help':\n        return <NeedHelpForm />;\n      case 'edit-profile':\n        return <UserForm />;\n      case 'edit-card':\n        return <EditCardForm />;\n      case 'add-card':\n        return <AddCardForm />;\n      case 'warning-dell':\n        return <WarningDell/>\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div onClick={e => backdropClose(e)} className={css.modalBackdrop}>\n      <motion.div\n        animate={{ y: '0%' }}\n        initial={{ y: '100%' }}\n        className={css.modalBody}\n      >\n        {handleContent(modalContent)}\n      </motion.div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sideBar\":\"Sidebar_sideBar__A8DTG\",\"sidebarBackdrop\":\"Sidebar_sidebarBackdrop__ozg8G\",\"sideBarOpened\":\"Sidebar_sideBarOpened__9jug6\",\"titleBox\":\"Sidebar_titleBox__xqSVd\",\"iconBox\":\"Sidebar_iconBox__lGsim\",\"logoIconContainer\":\"Sidebar_logoIconContainer__yiz-a\",\"iconLogo\":\"Sidebar_iconLogo__P5b+p\",\"title\":\"Sidebar_title__mzY+F\",\"bordBox\":\"Sidebar_bordBox__l9HDF\",\"bordTitle\":\"Sidebar_bordTitle__iDwHw\",\"buttonBox\":\"Sidebar_buttonBox__+dqOM\",\"buttonText\":\"Sidebar_buttonText__0LoRm\",\"buttonCreate\":\"Sidebar_buttonCreate__t3LZl\",\"iconCreate\":\"Sidebar_iconCreate__vE+2z\",\"scrollArea\":\"Sidebar_scrollArea__p2BVw\",\"bordList\":\"Sidebar_bordList__PS2uv\",\"helpBox\":\"Sidebar_helpBox__W7BKt\",\"helpTextBox\":\"Sidebar_helpTextBox__Sd7S6\",\"helpText\":\"Sidebar_helpText__1vwtr\",\"helpTextLink\":\"Sidebar_helpTextLink__QXL1T\",\"buttonHelp\":\"Sidebar_buttonHelp__nkXAH\",\"iconHelp\":\"Sidebar_iconHelp__6c8m3\",\"helpButtonText\":\"Sidebar_helpButtonText__0g7gg\",\"buttonLogOut\":\"Sidebar_buttonLogOut__VYxol\",\"iconLogOut\":\"Sidebar_iconLogOut__GX2DR\",\"logOutButtonText\":\"Sidebar_logOutButtonText__vzEjb\"};","// extracted by mini-css-extract-plugin\nexport default {\"boardItem\":\"Board_boardItem__pg3mb\",\"boardButton\":\"Board_boardButton__9AuMq\",\"boardIcon\":\"Board_boardIcon__TALFy\",\"boardTitleBox\":\"Board_boardTitleBox__N1O+A\",\"boardText\":\"Board_boardText__tGGO5\",\"boardTittle\":\"Board_boardTittle__4B6lS\",\"boardButtonBox\":\"Board_boardButtonBox__pijVR\",\"iconButton\":\"Board_iconButton__9r8ni\"};","import css from './Board.module.css';\nimport sprite from '../../../images/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { openModal } from '../../../redux/modalSlice';\nimport { deleteBoard } from '../../../redux/board/boardThunks';\nimport { closeSidebar } from '../../../redux/modalSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { setCurrentBoardId } from '../../../redux/board/boardSlice';\n\nexport const Board = ({ board }) => {\n  const dispatch = useDispatch();\n  const navigate= useNavigate()\n\n  const handleEditBoard = () => {\n    dispatch(openModal({ content: 'edit-board', id: `${board._id}` }));\n  };\n\n  const handleNavigate = (e) =>{\n    if(e.dataset === 'icon'){\n      return\n    }\n    navigate(`/home/${board._id}`)\n    dispatch(setCurrentBoardId(board._id))\n    dispatch(closeSidebar())\n  }\n\n  const handleDelete = () =>{\n    navigate('/home')\n    dispatch(deleteBoard(board._id))\n  }\n  return (\n    <li id='boardBtn' onClick={handleNavigate} className={css.boardItem}>\n      <div className={css.boardTitleBox}>\n        <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n          <use href={`${sprite}#icon-${board.icon}`} />\n        </svg>\n        <p className={css.boardText}>{board.name}</p>\n      </div>\n      <div className={css.boardButtonBox}>\n        <button data-icon=\"icon\" onClick={handleEditBoard} className={css.boardButton}>\n          <svg data-icon=\"icon\" className={css.iconButton} width=\"16\" height=\"16\">\n            <use data-icon=\"icon\" href={`${sprite}#icon-pencil`} />\n          </svg>\n        </button>\n        <button\n          className={css.boardButton}\n          onClick={handleDelete}\n          data-icon=\"icon\"\n        >\n          <svg data-icon=\"icon\" className={css.iconButton} width=\"16\" height=\"16\">\n            <use data-icon=\"icon\" href={`${sprite}#icon-trash`} />\n          </svg>\n        </button>\n      </div>\n    </li>\n  );\n};\n","import css from './Sidebar.module.css';\nimport sprite from '../../images/sprite.svg';\nimport pot from '../../images/need-help/pot.png';\nimport pot2x from '../../images/need-help/pot2x.png';\nimport { useAutoAnimate } from '@formkit/auto-animate/react'\nimport { Board } from './Board/Board';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal, closeSidebar } from '../../redux/modalSlice';\nimport { logoutThunk } from '../../redux/auth/authThunks';\nimport { selectBoards } from '../../redux/board/selectors';\nimport { useEffect } from 'react';\nimport { fetchBoards } from '../../redux/board/boardThunks';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const boards = useSelector(selectBoards);\n  const [listRef] = useAutoAnimate()\n\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n\n  const { sideBarIsOpen } = useSelector(state => state.modal);\n\n  const handleAddBoard = () => {\n    dispatch(openModal({ content: 'add-board' }));\n  };\n\n  const handleNeddHelp = () => {\n    dispatch(openModal({ content: 'need-help' }));\n  };\n  const handleCloseSidebar = e => {\n    if (e.target === e.currentTarget) {\n      dispatch(closeSidebar());\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(logoutThunk());\n  };\n\n  return (\n    <div\n      onClick={e => handleCloseSidebar(e)}\n      className={`${sideBarIsOpen && css.sidebarBackdrop}`}\n    >\n      <div className={`${css.sideBar} ${sideBarIsOpen && css.sideBarOpened}`}>\n        {/* logo, title */}\n        <div className={css.titleBox}>\n          <div className={css.iconBox}>\n            <div className={css.logoIconContainer}>\n              <svg className={css.iconLogo} width=\"16\" height=\"16\">\n                <use href={`${sprite}#icon-logo`} />\n              </svg>\n            </div>\n            <h2 className={css.title}>Task Pro</h2>\n          </div>\n          <div className={css.bordBox}>\n            <h3 className={css.bordTitle}>My Boards</h3>\n            {/* button create */}\n            <div className={css.buttonBox}>\n              <span className={css.buttonText}>Create a new board</span>\n              <button onClick={handleAddBoard} className={css.buttonCreate}>\n                <svg className={css.iconCreate} width=\"22\" height=\"22\">\n                  <use href={`${sprite}#icon-plus`} />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n        {boards.length > 0 && (\n          <ul className={css.bordList} ref={listRef}>\n            {boards.map(board => (\n              <Board key={board._id} board={board}></Board>\n            ))}\n          </ul>\n        )}\n\n        {/* need help */}\n        <div className={css.helpBox}>\n          <div className={css.helpTextBox}>\n            {boards.length <= 2 && (\n              <>\n                <picture className={css.imgHelp}>\n                  <source srcSet={`${pot} 1x, ${pot2x} 2x`} />\n                  <img srcSet={`${pot} 1x`} alt=\"pot\" />\n                </picture>\n                <p className={css.helpText}>\n                  If you need help with{' '}\n                  <span className={css.helpTextLink}>TaskPro</span>, check out\n                  our support resources or reach out to our customer support\n                  team.\n                </p>\n              </>\n            )}\n            <button onClick={handleNeddHelp} className={css.buttonHelp}>\n              <svg className={css.iconHelp} width=\"20\" height=\"20\">\n                <use href={`${sprite}#icon-help`} />\n              </svg>\n              <p className={css.helpButtonText}>Need help?</p>\n            </button>\n          </div>\n          {/* logout */}\n          <button onClick={handleLogout} className={css.buttonLogOut}>\n            <svg className={css.iconLogOut} width=\"32\" height=\"32\">\n              <use href={`${sprite}#icon-login`} />\n            </svg>\n            <p className={css.logOutButtonText}>Log Out</p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boardDefault\":\"DefaultBoard_boardDefault__OGVRe\",\"boardDefaultText\":\"DefaultBoard_boardDefaultText__9+0UM\",\"boardDefaultLink\":\"DefaultBoard_boardDefaultLink__D+uKf\"};","import css from './DefaultBoard.module.css'\n\nexport const DefaultBoard = () =>{\n    return(\n    <div className={css.boardDefault}>\n        <p className={css.boardDefaultText}>Before starting your project, it is essential <span className={css.boardDefaultLink}>to create a board</span> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</p>\n    </div>)\n}","// extracted by mini-css-extract-plugin\nexport default {\"navContainer\":\"Navigation_navContainer__+dgHg\",\"buttonBurger\":\"Navigation_buttonBurger__Kqo-y\",\"iconBurger\":\"Navigation_iconBurger__Y+5FL\",\"navMenu\":\"Navigation_navMenu__tyi6A\"};","// extracted by mini-css-extract-plugin\nexport default {\"userInfo\":\"UserMenu_userInfo__78zcg\",\"buttonOpen\":\"UserMenu_buttonOpen__XKE8P\",\"userAvatarWrap\":\"UserMenu_userAvatarWrap__8cND4\",\"userIcon\":\"UserMenu_userIcon__Wa0NS\",\"userAvatar\":\"UserMenu_userAvatar__uOf3o\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from '../../redux/modalSlice';\nimport css from './UserMenu.module.css';\nimport sprite from '../../images/sprite.svg';\n\nexport const UserMenu = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n  const handleUserModalOpen = () => {\n    dispatch(openModal({ content: 'edit-profile' }));\n  };\n\n  return (\n    <>\n      <div className={css.userInfo}>\n        <button\n          className={css.buttonOpen}\n          type=\"button\"\n          onClick={handleUserModalOpen}\n        >\n          {user.name}\n\n          <div>\n            {user.avatarURL ? (\n              <div className={css.userAvatar}>\n                <img\n                  src={user.avatarURL}\n                  alt=\"\"\n                  className={css.userAvatar}\n                  width={68}\n                />\n              </div>\n            ) : (\n              <div className={css.userAvatarWrap}>\n                <div className={css.userIcon}>\n                  <svg className={css.userIcon}>\n                    <use href={`${sprite}#icon-user2`} />\n                  </svg>\n                </div>\n              </div>\n            )}\n            {/* <svg className={css.userIcon}>\n              <use href={`${sprite}#icon-user2`} />\n            </svg> */}\n          </div>\n        </button>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"menuTheme\":\"ThemeSelect_menuTheme__syeY8\",\"iconChevronDown\":\"ThemeSelect_iconChevronDown__z0Zx0\",\"titleMenuTheme\":\"ThemeSelect_titleMenuTheme__kfQsY\",\"buttonMenu\":\"ThemeSelect_buttonMenu__M4R80\",\"menuList\":\"ThemeSelect_menuList__tMjNr\",\"menuItem\":\"ThemeSelect_menuItem__ZUuoU\",\"menuListHidden\":\"ThemeSelect_menuListHidden__TW9FY\"};","import css from './ThemeSelect.module.css'\nimport { useDispatch } from 'react-redux'\nimport { updaterUserTheme } from '../../redux/auth/authThunks'\n\nexport const ThemePopup = ({onSelectClose, isOpen}) =>{\n    const dispatch = useDispatch()\n\n    const handleChangeTheme = (e) =>{\n        console.log(e.target.id)\n        dispatch(updaterUserTheme({theme: `${e.target.id}`}))\n        onSelectClose()\n    }\n\n    return (\n            <ul  data-popup='menu' className={`${css.menuList} ${!isOpen && css.menuListHidden}`}>\n                <li onClick={handleChangeTheme}  data-popup='el' id='light' className={css.menuItem}>Light</li>\n                <li onClick={handleChangeTheme} data-popup='el' id=\"dark\" className={css.menuItem}>Dark</li>\n                <li onClick={handleChangeTheme} data-popup='el' id='violet' className={css.menuItem}>Violet</li>\n            </ul>\n    )\n}","import css from './ThemeSelect.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useState } from 'react';\nimport { ThemePopup } from './ThemePopup';\nimport { useEffect } from 'react';\n\n\nexport const ThemeSelect = () => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  useEffect(() =>{\n    if((isOpen)){\n      document.body.addEventListener('click', handlePopupClose)\n    }\n    return() => {\n      document.body.removeEventListener('click', handlePopupClose)\n    }\n  })\n\n  const handleOpenPopup = (e) =>{\n    if((e.target.popup === 'menu') || (e.target.popup === 'el')){\n      return\n    }\n    setIsOpen(prev => !prev)  \n  }\n\n  const handlePopupClose = (e) =>{\n    if((e.target.dataset.popup !== 'popupBtn') && (e.target.popup !== 'menu')  && (e.target.popup !== 'el')){\n      setIsOpen(prev => !prev)\n    }\n  }\n\n  const onSelectClose = () =>{\n    setIsOpen(prev => !prev)\n  }\n\n  return (\n    <div data-popup=\"popupBtn\" onClick={(e)=>handleOpenPopup(e)} className={css.menuTheme}>\n      <p data-popup=\"popupBtn\" className={css.titleMenuTheme}>Theme</p>\n      <button data-popup=\"popupBtn\" className={css.buttonMenu} type=\"button\">\n        <svg data-popup=\"popupBtn\"  className={css.iconChevronDown} width=\"16\" height=\"16\">\n          <use data-popup=\"popupBtn\"  href={`${sprite}#icon-chevron-down`} />\n        </svg>\n      </button>\n      <ThemePopup onSelectClose={onSelectClose} isOpen={isOpen}/>\n    </div>\n  );\n};\n","import css from './Navigation.module.css';\nimport sprite from '../../images/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openSidebar } from '../../redux/modalSlice';\nimport { UserMenu } from '../UserMenu/UserMenu.jsx';\nimport { ThemeSelect } from '../ThemeSelect/ThemeSelect.jsx';\n\nexport const Navigation = () => {\n  const dispatch = useDispatch()\n  const { sideBarIsOpen } = useSelector(state => state.modal);\n\n  const openMenu =()=>{\n    dispatch(openSidebar())\n    console.log(sideBarIsOpen)\n    \n  }\n  return (\n    <div className={css.navContainer}>\n      <button className={css.buttonBurger} type=\"button\" onClick={openMenu}>\n        <svg className={css.iconBurger} width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-menu`} />\n        </svg>\n      </button>\n\n      <div className={css.navMenu}>\n        <ThemeSelect />\n        <UserMenu />\n      </div>\n    </div>\n  );\n};\n\n\n","import css from './HomePage.module.css';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ModalBody } from 'components/Modals/ModalBody';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { DefaultBoard } from 'components/DefaultBoard/DefaultBoard';\nimport { Navigation } from 'components/Navigation/Navigation';\n\n\nconst HomePage = () => {\n  const { isOpen } = useSelector(state => state.modal);\n  const { theme } = useSelector(state => state.auth.user);\n  const location = useLocation();\n\n  return (\n    <div className={css.main} data-theme={theme}>\n      <Sidebar />\n      <div className={css.mainPage}>\n        <Navigation />\n        {location.pathname === '/home' && <DefaultBoard />}\n        {/* В outlet БУДЕ РЕНДЕРИТИСЯ БОРД */}\n        <Suspense fallback={<div>Loading....</div>}>\n          <Outlet />\n        </Suspense>\n        {isOpen && <ModalBody />}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const selectBoards = state => state.boards.boards;\n\nexport const selectCurrentBoard = state => state.boards.currentBoard;\n\nexport const selectIsLoading = state => state.boards.isLoading;\n\nexport const selectError = state => state.boards.error;","export const priorityEnum = [\n    {title: 'Without priority', color: \"#595959\"},\n    {title: 'Low', color: \"#8fa1d0\"},\n    {title: 'Medium', color: \"#e09cb5\"},\n    {title: 'High', color: \"#bedbb0\"}];","var map = {\n\t\"./1.png\": 7919,\n\t\"./10.png\": 9983,\n\t\"./11.png\": 8438,\n\t\"./12.png\": 9645,\n\t\"./13.png\": 8516,\n\t\"./14.png\": 8427,\n\t\"./15.png\": 4274,\n\t\"./16.png\": 857,\n\t\"./2.png\": 1060,\n\t\"./3.png\": 4957,\n\t\"./4.png\": 98,\n\t\"./5.png\": 4923,\n\t\"./6.png\": 6592,\n\t\"./7.png\": 1065,\n\t\"./8.png\": 5198,\n\t\"./9.png\": 7687\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6679;"],"names":["NewBoardForm","dispatch","useDispatch","title","setTitle","useState","iconValue","setIconValue","bgValue","setBgValue","bgValues","i","push","concat","_jsxs","className","css","formWrap","children","_jsx","formTitle","form","onSubmit","e","preventDefault","newBoard","name","icon","background","addBoard","target","reset","closeModal","onSubmitForm","htmlFor","autoComplete","placeholder","onChange","value","handleChange","formInput","type","required","iconsForm","iconsTitle","iconsWrap","map","ic","container","handleIconChange","id","checked","checkmark","href","sprite","bgIconsWrap","bg","bgContainer","handleBgChange","bgCheckmark","width","height","src","require","alt","formButton","iconWrap","buttonIcon","EditBoardForm","selectedElId","useSelector","state","modal","currentBoard","boards","find","brd","_id","brdId","updatedBoard","updateBoard","AddColumnForm","currentBoardId","postColumn","boardId","EditColumnForm","currentColumn","columns","col","updateColumn","newColumn","needHelpAction","createAsyncThunk","async","_ref","thunkAPI","email","comment","data","instance","post","body","needHelp","toast","success","error","rejectWithValue","message","NeedHelpForm","setEmail","setComment","trim","console","log","handleEmailChange","handleCommentChange","commentInput","selectUser","auth","user","ImageInput","setFieldValue","useFormikContext","_Fragment","accept","hidden","_e$target$files","file","files","reader","FileReader","onload","result","readAsDataURL","schema","Yup","shape","avatar","test","includes","min","max","matches","password","UserForm","passwordVisible","setPasswordVisible","image","setPreviewImage","handleClickPasswordVisibility","Formik","initialValues","avatarURL","validationSchema","handleSubmit","values","resetForm","userData","infoUser","formData","FormData","append","createUserDataFormData","updaterUserData","Form","imageUrl","xlinkHref","Field","ErrorMessage","errorMsg","onClick","CustomInputWrapper","forwardRef","ref","Calendar","_ref2","selectedDate","onDateChange","DatePicker","calendarClassName","dayClassName","renderCustomHeader","_ref3","date","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","disabled","toLocaleDateString","enGB","month","year","selected","dateFormat","minDate","Date","locale","weekStartsOn","popoverPlacement","customInput","weekDayClassName","AddCardForm","description","setDescription","priority","setPriority","setSelectedDate","currBoardId","currColumnId","currentColumnId","allCards","cards","currColumnCardsLgth","filter","card","columnId","length","from","index","newCard","deadline","getTime","postCard","formInputTitle","handleTitleChange","errMsg","rows","handleDescChange","priorityEnum","pr","handlePriorityChange","style","backgroundColor","color","deadlineStyle","deadlineContainer","getDate","getMonth","getFullYear","span","EditCardForm","currentCard","cardData","updateCard","WarningList","confirm","WList","WItem","WButton","WarningDell","del","WDWrapper","WDText","WDTitle","ModalBody","modalContent","useLockBodyScroll","firstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","code","currentTarget","backdropClose","motion","div","animate","y","initial","content","handleContent","Board","board","navigate","useNavigate","dataset","setCurrentBoardId","closeSidebar","handleEditBoard","openModal","handleDelete","deleteBoard","Sidebar","selectBoards","listRef","useAutoAnimate","fetchBoards","sideBarIsOpen","handleCloseSidebar","sidebarBackdrop","sideBar","sideBarOpened","titleBox","iconBox","logoIconContainer","iconLogo","bordBox","bordTitle","buttonBox","buttonText","handleAddBoard","buttonCreate","iconCreate","bordList","helpBox","helpTextBox","imgHelp","srcSet","pot","pot2x","helpText","helpTextLink","handleNeddHelp","buttonHelp","iconHelp","helpButtonText","handleLogout","logoutThunk","buttonLogOut","iconLogOut","logOutButtonText","DefaultBoard","UserMenu","handleUserModalOpen","ThemePopup","onSelectClose","isOpen","handleChangeTheme","updaterUserTheme","theme","ThemeSelect","setIsOpen","document","handlePopupClose","popup","prev","handleOpenPopup","Navigation","openMenu","openSidebar","HomePage","location","useLocation","pathname","Suspense","fallback","Outlet","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports"],"sourceRoot":""}